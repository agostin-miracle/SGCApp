<root nsw="Livre">
  <item create="true"  id="1" name="TBCADCTA" friendlyname="ContaVirtual" modelversion="3">
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>FALSE</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>

    <view>
    <item script="true" alias="A." sql="" method="" return="" procname="VWCADCTA" desc ="View de Pesquisa de Contas">
      <query>
        <![CDATA[
SELECT NIDCTA
 ,A.ORGCTA
 ,A.STACTA
 ,A.CODUSU
 ,A.TIPCTA
 ,UPPER(CASE WHEN ORGCTA=1 THEN B.NOMUSU ELSE A.NOMBNF END) NOMUSU
 ,(REPLACE(LTRIM(RTRIM(NUMCTA)),'-','') + '-' + CAST(NUMDVE AS VARCHAR(1))
+ ' - ' + ISNULL(CASE WHEN ORGCTA = 1 THEN B.NOMUSU ELSE A.NOMBNF END ,'')
+ '  - ' + ISNULL(C.DSCTAB,'')) AS DSC001

 ,(LEFT(ISNULL(CASE WHEN ORGCTA = 1 THEN B.NOMUSU ELSE A.NOMBNF END,'') + ' - ' + ISNULL(C.DSCTAB,'')  
     + replicate('_',100),100)
 + REPLACE(LTRIM(RTRIM(NUMCTA)),'-','') + '-' + CAST(NUMDVE AS VARCHAR(1))) AS DSC002

  FROM TBCADCTA (NOLOCK) A
 INNER JOIN TBCADUSU (NOLOCK) B
ON (A.CODUSU=B.CODUSU)
  LEFT JOIN TBTABGER (NOLOCK) C
ON (A.NUMBCO = C.KEYTXT AND 12 = C.NUMTAB)
 WHERE A.STAREC = 1
   AND A.STACTA = 250
   AND B.STAUSU = 61
   AND A.STAREC = 1
   AND LTRIM(RTRIM(A.NUMCTA))<>''
   AND (CASE WHEN ORGCTA=1 THEN B.NOMUSU ELSE A.NOMBNF END) <> ''        
       
        
        ]]>
      </query>
    </item>
    </view>

    <insertcommand key="Identity" exceptionparamns="'DATCAD','DATUPD'" procname="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[
    IF(@ORGCTA = 1)
        BEGIN
            DECLARE @RETORNO INT
            DECLARE @ACCOUNTBASE VARCHAR(11)
            EXEC @RETORNO = sps_proximonumero_selecionar 4
            SET @ACCOUNTBASE =  dbo.CreateAccountBase(@RETORNO)
            SET @NUMCTA = @ACCOUNTBASE
            SET @NUMDVE = dbo.Modulo11(@accountbase)
            SET @NUMAGE = '0001';
            SET @NUMBCO = '000'
            SET @TIPBNF = 0
            SET @CODCMF = '000000000000000'
            SET @NOMBNF = ' '
        END
    SELECT @NUMBCO = LTRIM(RTRIM(RIGHT('000' + ISNULL(@NUMBCO, '0'),3)))      
      
      ]]>
      </pre>
      <body></body>
      <pos>
          <![CDATA[
        IF(@RETURN_VALUE>0 AND @ORGCTA=2)
          UPDATE TBCADCTA SET REGATV=0 WHERE CODUSU=@CODUSU AND ORGCTA=2 AND NIDCTA<>@RETURN_VALUE
        ]]>
        </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="Identity" exceptionparamns="'DATCAD'" procname="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="ContaVirtual" procname="PRCADCTASEL" desc ="Seleciona o registro de conta virtual de acordo com o id da conta">
        <query>
          <![CDATA[SELECT * FROM TBCADCTA (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da Conta Virtual" name="NIDCTA" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="Select" return="ContaVirtual" procname="PRCADCTASELCTA" desc ="Seleciona o registro de conta virtual de acordo com os parâmetros fornecidos">
        <query>
          <![CDATA[SELECT * FROM TBCADCTA (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Banco" name="NUMBCO" type="System.String" size="3" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Agência" name="NUMAGE" type="System.String" size="15" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Conta" name="NUMCTA" type="System.String" size="11" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="DV" name="NUMDVE" type="System.String" size="1" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código do Usuário" name="CODUSU" type="int" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Origem da Conta" name="ORGCTA" type="System.Byte" default="2" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Tipo de Conta" name="TIPCTA" type="int" default="2" output="" null="false"/>
        </parameters>
      </item>

    </selectcommand>


    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRCADCTASELALL" desc ="Seleciona todos os registros de contato do usuário fornecido">
        <query>
          <![CDATA[
SELECT A.*
      ,D.DSCCTA
      ,C.DSCSTA
      ,ISNULL(G.DSCTAB,'') AS DSCORG
      ,ISNULL(E.LGNUSU,'') AS DSCUPD
      ,ISNULL(B.DSCTAB,'') AS DSCREC
      ,ISNULL(F.DSCTAB,'') AS DSCBNF
  FROM TBCADCTA A WITH (NOLOCK) 
  LEFT JOIN TBTABGER B 
    ON (7 = B.NUMTAB AND A.STAREC = B.KEYCOD)
 INNER JOIN TBCADSTA C 
    ON (A.STACTA = C.CODSTA)
 INNER JOIN TBTIPCTA D 
    ON (A.TIPCTA = D.TIPCTA)
  LEFT JOIN TBCADUSU E (NOLOCK) 
    ON (A.UPDUSU = E.CODUSU)
  LEFT JOIN TBTABGER F (NOLOCK) 
    ON (20 = F.NUMTAB AND A.TIPBNF = F.KEYCOD)
  LEFT JOIN TBTABGER G (NOLOCK) 
    ON (23 = G.NUMTAB AND A.ORGCTA = G.KEYCOD)
        ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Usuário" name="CODUSU" type="System.Int32" default="null" output="" null="true"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" type="" method= "AccountsForApproval" return="DataTable" procname="PRCADCTALSTACCAPR" desc ="Obtêm a lista de contas para aprovação" remarks="">
        <query order="A.DATCAD DESC">
          <![CDATA[
    DECLARE @CANAPR TINYINT=0
    DECLARE @CANCAN TINYINT=0
    IF(EXISTS (SELECT 1 FROM TBUSUACE (NOLOCK) WHERE CODACE=130 AND STAREC=1 AND CODUSU = @UPDUSU))
       SET @CANAPR=1
    IF(EXISTS (SELECT 1 FROM TBUSUACE (NOLOCK) WHERE CODACE=131 AND STAREC=1 AND CODUSU = @UPDUSU))
       SET @CANCAN=1
    SELECT A.NIDCTA,A.DATCAD,
    	   NUMCTA = A.NUMCTA + A.NUMDVE,
    	   B.NOMUSU,
    	   CODCMF = dbo.FORMATCMF(B.CODCMF),
    	   C.DSCEND,
    	   '+' +CONVERT(VARCHAR(3),C.NUMPAI) + ' ' + C.NUMDDD + ' ' + C.NUMTEL AS DSCFON,
    	   CANAPR = CASE WHEN @CANAPR = 1 AND C.CADTEL=1 THEN 1 ELSE 0 END,
    	   CANCAN = @CANCAN
      FROM tbcadcta (NOLOCK) a
     INNER JOIN TBCADUSU (NOLOCK) B
        ON (b.codusu = a.codusu)
     LEFT JOIN (SELECT DISTINCT A1.CODUSU, 
    					A1.DSCEND,
    					B1.NUMPAI,
    					B1.NUMDDD,
    					B1.NUMTEL,
						CASE WHEN B1.NUMTEL IS NULL THEN 0 ELSE 1 END AS CADTEL 
                    FROM TBCADEND (NOLOCK) A1
    			   INNER JOIN (SELECT DISTINCT CODUSU, NUMPAI,NUMDDD, NUMTEL 
    			                 FROM TBCADCTO (NOLOCK)  
    							 WHERE tipcto = 3 and regatv=1 and starec=1) B1
    				  ON (B1.CODUSU = A1.CODUSU)
    			   WHERE A1.STAREC=1
    			     AND A1.REGATV=1
    				 AND A1.TIPEND=3
    				 AND ISNULL(DSCEND,'')<>''
    				 AND A1.CODUSU IN (SELECT CODUSU FROM TBCADUSU (NOLOCK) WHERE STAUSU=63)) C
    	ON (C.CODUSU = A.CODUSU)
     WHERE A.STACTA=249
       AND A.STAREC=1        
       AND A.ORGCTA=1
     ORDER BY A.DATCAD DESC	      ]]>
        </query>
        <parameters>
          <parameter input="true" apply="false" desc ="Usuário de Atualização" name="UPDUSU" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectallcommand>

    <methods>
      <item  script="true" alias="A." sql="" method="Locate" return="int" returnmode="2" procname="PRCADCTALOC" desc ="Localiza uma conta virtual a partir do código de usuário" returnvalue="0">
        <query>
          <![CDATA[SELECT ISNULL(NIDCTA,0) AS NIDCTA FROM TBCADCTA (NOLOCK) WHERE CODUSU =@CODUSU AND ORGCTA = @ORGCTA AND TIPCTA=@TIPCTA
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Usuário" name="CODUSU" type="int" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Origem da Conta" name="ORGCTA" type="System.Byte" default="1" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Tipo de Conta" name="TIPCTA" type="int" default="1" output="" null="false"/>
        </parameters>
      </item>
      <item webtype="POST" script="true" alias="A." sql="" method="ChangeStatusAccount" return="int" returnmode="1" procname="PRCADCTACHGSTAACC" desc ="Executa a aprovação  ou rejeição de uma conta digital" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0
DECLARE @NOMUSU VARCHAR(70)=N'';
DECLARE @STAREC INT=-1;
DECLARE @STAUSU SMALLINT=0;
DECLARE @STACTA SMALLINT=0;
DECLARE @CODACE INT=0;
DECLARE @CODUSU INT=0;
IF(@NIDCTA=0)
  SET @RETURN_VALUE = -1
IF(@UPDUSU=0)
  SET @RETURN_VALUE = -2

IF(@CODOPE NOT IN (1,3))
  SET @RETURN_VALUE = -4

IF(@CODOPE = 1)
  BEGIN
      SET @STAREC=1
      SET @STAUSU=61
      SET @STACTA=250      
      SET @CODACE=130
  END
IF(@CODOPE = 3)
  BEGIN
      SET @STAREC=0
      SET @STAUSU=63
      SET @STACTA=251
      SET @CODACE=131      
  END
  
IF( NOT EXISTS(SELECT 1 FROM TBUSUACE WHERE CODUSU= @UPDUSU AND STAREC=1 AND CODACE=@CODACE))
	SET @RETURN_VALUE=-3

IF(@UPDUSU>0)
  SELECT @NOMUSU = NOMUSU FROM TBCADUSU (NOLOCK) WHERE CODUSU=@UPDUSU
  
BEGIN TRAN

SELECT @CODUSU = CODUSU 
  FROM TBCADCTA (NOLOCK)
 WHERE NIDCTA = @NIDCTA

IF (@CODUSU>0 AND @RETURN_VALUE=0 AND @STAREC>=0)
	BEGIN
		UPDATE TBCADCTA
		   SET STACTA=@STACTA,STAREC= @STAREC, UPDUSU =@UPDUSU, DATUPD=GETDATE()
         WHERE NIDCTA = @NIDCTA
         IF(@@ERROR=0)
			      BEGIN
				        UPDATE TBCADUSU
				           SET STAUSU = @STAUSU, STAREC=@STAREC, UPDUSU =@UPDUSU, DATUPD=GETDATE(),DSCOCO = LTRIM(RTRIM(DSCOCO)) + CHAR(13)+ 'REGISTRO APROVADO POR ' + LTRIM(RTRIM(@NOMUSU))  + ' COM STATUS DE REGISTRO : ' + CONVERT(VARCHAR(3),@STAREC)
				         WHERE CODUSU =@CODUSU
                 IF(@@ERROR=0)
                    BEGIN
                        SET @RETURN_VALUE=1;
                    END
			      END
	END               
  
IF(@RETURN_VALUE=1)
   COMMIT TRANSACTION
ELSE
   ROLLBACK TRANSACTION
RETURN @RETURN_VALUE  
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da Conta" name="NIDCTA" type="int" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código da Operação" name="CODOPE" type="System.Byte" default="" output="" null="false"/>          
          <parameter input="true" apply="true" desc ="Usuário Aprovador" name="UPDUSU" type="int" default="" output="" null="false"/>
        </parameters>

        <returns>
          <return value="0" message="" error="APPROVALFAIL"/>
          <return value="1" message="CONTA APROVADA COM SUCESSO" error="OK"/>
          <return value="-1" message="O ID DA CONTA NAO FOI FORNECIDO" error="APPROVALFAIL"/>
          <return value="-2" message="" error="REQUIREDUSEROPERATION"/>
          <return value="-3" message="" error="APPROVALUSERNOTALLOWED"/>
          <return value="-4" message="OPERACAO INVALIDA" error="APPROVALFAIL"/>
        </returns>
      </item>
    </methods>
    
    
  </item>
  <item create="true"  id="2" name="TBCADCTO" friendlyname="RegisterContacts" modelversion="3">
    <UpdateKey>Identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>

    <insertcommand key="Identity" exceptionparamns="'DATCAD','DATUPD'" procname="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
        <![CDATA[
        IF(@RETURN_VALUE>0)
            BEGIN
                UPDATE TBCADCTO 
                   SET REGATV = 0 
                 WHERE CODUSU = @CODUSU
                   AND TIPCTO = @TIPCTO
                   AND CODATR = @CODATR
                   AND USUATR = @USUATR
                   AND CODCTO <> @RETURN_VALUE
                   AND STAREC = 1
                   AND @REGATV = 1
            END
      ]]>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="Identity" exceptionparamns="'DATCAD'" procname="" method="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD=GETDATE()
      </pre>
      <body></body>
      <pos>
        <![CDATA[
        IF(@RETURN_VALUE>0)
          BEGIN
              UPDATE TBCADCTO
                 SET REGATV = 0
               WHERE CODUSU = @CODUSU
                 AND TIPCTO = @TIPCTO
                 AND CODATR = @CODATR
                 AND USUATR = @USUATR
                 AND CODCTO <> @RETURN_VALUE
                 AND STAREC = 1
                 AND @REGATV = 1
          END
      ]]>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </updatecommand>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="RegisterContacts" procname="PRCADCTOSEL" desc ="Seleciona o registro de acordo com o código do cadastro de contatos">
        <query>
          <![CDATA[SELECT * FROM TBCADCTO (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Contato" name="CODCTO" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRCADCTOSELALL" desc ="Seleciona todos os registros de contato do usuário fornecido">
        <query>
          <![CDATA[
SELECT A.*
      ,ISNULL(B.DSCTAB,'Não definido') AS DSCREC
      ,ISNULL(D.DSCTAB,'') AS DSCOPR
      ,C.DSCCTO
  FROM TBCADCTO (NOLOCK) A
  LEFT JOIN TBTIPCTO (NOLOCK) C
    ON (A.TIPCTO = C.TIPCTO)
  LEFT JOIN TBTABGER (NOLOCK) B 
    ON (7 = B.NUMTAB AND A.STAREC = B.KEYCOD)
  LEFT JOIN TBTABGER (NOLOCK) D 
    ON (45 = D.NUMTAB AND A.CODOPR = D.KEYCOD)       
        ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Usuário" name="CODUSU" type="System.Int32" default="null" output="" null="true"/>
        </parameters>
      </item>
    </selectallcommand>
    <methods>
      <item script="true" alias="A." sql="" method="Find" return="int" returnmode="2" procname="PRCADCTOFIN" desc ="Localiza um contato com base nos parâmetros fornecidos" returnvalue="0">
        <query>
          <![CDATA[
DECLARE @RETURN_VALUE INT = 0
 SELECT @RETURN_VALUE = COALESCE(CODCTO,0) 
   FROM TBCADCTO (NOLOCK) 
  WHERE STAREC=1
	  AND NUMPAI = @NUMPAI
	  AND CODOPR = @CODOPR
	  AND NUMDDD = @NUMDDD
	  AND NUMTEL = @NUMTEL
	  AND CODATR = @CODATR
	  AND TIPCTO = @TIPCTO
	  AND USUATR = @USUATR
	  AND CODUSU = @CODUSU
	  AND CODEND = @CODEND    
	SELECT @RETURN_VALUE          
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Número do País" name="NUMPAI" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" desc ="Código da Operadora" name="CODOPR" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" desc ="Número do DDD" name="NUMDDD" type="System.String" size="4" default="" output="" null="false"/>
          <parameter input="true" desc ="Telefone" name="NUMTEL" type="System.String" size="15" default="" output="" null="false"/>
          <parameter input="true" desc ="Código do Atributo" name="CODATR" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Tipo de Contato" name="TIPCTO" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atribuição" name="USUATR" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Código do Endereço" name="CODEND" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="Find" return="int" returnmode="2" procname="PRCADCTOFINBAS" desc ="Localiza um contato com base nos parâmetros fornecidos" returnvalue="0">
        <query>
          <![CDATA[
DECLARE @RETURN_VALUE INT = 0
 SELECT @RETURN_VALUE = COALESCE(CODCTO,0) 
   FROM TBCADCTO (NOLOCK) 
  WHERE STAREC=1
	  AND CODUSU = @CODUSU  
	  AND CODEND = @CODEND
	  AND TIPCTO = @TIPCTO
	  AND REGATV = @REGATV    
	  AND USUATR = @USUATR        
	SELECT @RETURN_VALUE          
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Código do Endereço" name="CODEND" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Tipo de Contato" name="TIPCTO" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Indicador de Atividade do Registro" name="REGATV" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atribuição" name="USUATR" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="ValidarRegistroPrincipal" return="int" returnmode="1" procname="PRCADCTOVALREGATIV" desc ="Validar o registro principal de um contato" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0          
UPDATE TBCADCTO
	 SET REGATV = 0
 WHERE codusu = @codusu
	AND tipcto = @tipcto
	if(@@error = 0)
		begin
			update tbcadcto 
				set regatv = 1
			where codusu = @codusu
			and tipcto = @tipcto
			and codcto = @codcto
			if(@@error = 0)
				set @return_value = 1
		end
	return @return_value
          
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Tipo de Contato" name="TIPCTO" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="ID do Contato" name="CODCTO" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>

    </methods>
  </item>
  <item create="true"  id="3" name="TBCADEND" friendlyname="RegisterAddresses" modelversion="3">
    <UpdateKey>Identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <insertcommand key="Identity" exceptionparamns="'DATCAD','DATUPD'" procname="" method="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[
SET @RETURN_VALUE=0        
IF(@DSCEND IS NULL OR @DSCEND='')
   SET @RETURN_VALUE=-3
SET @DSCEND = @DSCEND + '          '   
IF(@RETURN_VALUE=0)
   BEGIN
        if (LEFT(@DSCEND,4)= 'RUA ')
          SET @TIPLOG = 1;
        if (LEFT(@DSCEND,8) = 'AVENIDA ')
          SET @TIPLOG = 2;
        if (LEFT(@DSCEND, 6) = 'PRACA ')
          SET @TIPLOG = 3;
        if (LEFT(@DSCEND,8) = 'ALAMEDA ')
          SET @TIPLOG = 4;
   END
SET @DSCEND=LTRIM(RTRIM(@DSCEND))   

IF((@CODCEP='00000000') OR (@CODUFE=''))
   SET @STAREC=13
      ]]>
      </pre>
      <body></body>
      <pos>
        <![CDATA[
          IF(@RETURN_VALUE>0 AND @REGATV=1 AND @STAREC=1)
              BEGIN
                UPDATE TBCADEND
                   SET REGATV = 0
                 WHERE CODUSU = @CODUSU
                   AND CODATR = @CODATR
                   AND TIPEND = @TIPEND
                   AND USUATR = @USUATR
                   AND CODEND <> @RETURN_VALUE
                   AND STAREC = 1
                   AND @REGATV = 1
              END
        ]]>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-3" message="" error="INVALIDADDRESS"/>
      </returns>
    </insertcommand>
    <updatecommand key="Identity" exceptionparamns="'DATCAD'" procname="" method="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[
SET @DATUPD=GETDATE()
IF(@DSCEND IS NULL OR @DSCEND='')
   SET @RETURN_VALUE=-3
SET @DSCEND = @DSCEND + '          '   
IF(@RETURN_VALUE=0)
   BEGIN
        if (LEFT(@DSCEND,4)= 'RUA ')
          SET @TIPLOG = 1;
        if (LEFT(@DSCEND,8) = 'AVENIDA ')
          SET @TIPLOG = 2;
        if (LEFT(@DSCEND, 6) = 'PRACA ')
          SET @TIPLOG = 3;
        if (LEFT(@DSCEND,8) = 'ALAMEDA ')
          SET @TIPLOG = 4;
   END
SET @DSCEND=LTRIM(RTRIM(@DSCEND))   
]]>

      </pre>
      <body></body>
      <pos>
        <![CDATA[
          IF(@RETURN_VALUE>0 AND @REGATV=1)
              BEGIN
                UPDATE TBCADEND
                   SET REGATV = 0
                 WHERE CODUSU = @CODUSU
                   AND CODATR = @CODATR
                   AND TIPEND = @TIPEND
                   AND USUATR = @USUATR
                   AND CODEND <> @RETURN_VALUE
                   AND STAREC = 1
                   AND @REGATV = 1
              END
        ]]>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
        <return value="-3" message="" error="INVALIDADDRESS"/>
      </returns>
    </updatecommand>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="RegisterAddresses" procname="PRCADENDSEL" desc ="Seleciona o registro de acordo com o código do cadastro de endereços">
        <query>
          <![CDATA[SELECT * FROM TBCADEND (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Endereço" name="CODEND" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>

    <selectallcommand>
      <item script="true" alias="A." sql="" method="GetCredited" return="DataTable" procname="PRCADENDSELGEO" desc ="Selecionas os registro de usuarios credenciados para atualização de Geolocalização">
        <query>
          <![CDATA[
SELECT DSCEND, CODEND, NUMEND, DSCCID, CODCEP, CODUFE 
  FROM TBCADEND (NOLOCK) A
 INNER JOIN TBCADUSU (NOLOCK) B
   ON A.CODUSU = B.CODUSU 
 WHERE (B.TIPUSU = 7) AND (A.TIPEND = 2) AND (A.REGATV = 1)  AND (A.LATITU IS NULL)]]>
        </query>
      </item>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRCADENDSELALL" desc ="Seleciona todos os registros de endereço do usuário fornecido">
        <query>
          <![CDATA[
    SELECT A.*,
       B.DSCTEN,
	   C.DSCLOG,
	   D.DSCTAB AS DSCPAI,
	   ISNULL(E.LGNUSU,'') AS LGNUSU, 
	   ISNULL(F.DSCTAB,'') AS DSCREC 
 FROM TBCADEND (NOLOCK) A
INNER JOIN TBTIPEND (NOLOCK) B
   ON (A.TIPEND = B.TIPEND)
INNER JOIN TBTIPLOG (NOLOCK) C
   ON (A.TIPLOG = C.TIPLOG)
INNER JOIN TBTABGER (NOLOCK) D
   ON (1 = D.NUMTAB AND A.CODPAI = D.KEYCOD)
 LEFT JOIN TBCADUSU (NOLOCK) E
   ON (A.UPDUSU = E.CODUSU)
INNER JOIN TBTABGER (NOLOCK) F
   ON (7 = F.NUMTAB AND A.STAREC = F.KEYCOD)
    WHERE (@CODUSU IS NULL OR A.CODUSU=@CODUSU)
        ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Usuário" name="CODUSU" type="System.Int32" default="null" output="" null="true"/>
        </parameters>
      </item>
    </selectallcommand>

    <methods>
      <item script="true" alias="A." sql="" method="Find" return="int" returnmode="2" procname="PRCADENDFND" desc ="Localiza um endereço com base nos parâmetros fornecidos" returnvalue="0">
        <query>
          <![CDATA[
DECLARE @RETURN_VALUE INT = 0
 SELECT @RETURN_VALUE = COALESCE(CODEND,0) 
   FROM TBCADEND (NOLOCK) 
  WHERE STAREC = 1
    AND CODUSU = @CODUSU  
	  AND CODATR = @CODATR
    AND DSCEND = @DSCEND
	  AND TIPEND = @TIPEND    
	  AND USUATR = @USUATR        
	SELECT @RETURN_VALUE          
          ]]>
        </query>

        <parameters>
          <parameter input="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Código do Atributo" name="CODATR" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" desc ="Endereco" name="DSCEND" type="System.String" size="70" default="" output="" null="false"/>
          <parameter input="true" desc ="Tipo de Endereço" name="TIPEND" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atribuição" name="USUATR" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="Find" return="int" returnmode="2" procname="PRCADENDFNDBAS" desc ="Localiza um endereço com base nos parâmetros fornecidos" returnvalue="0">
        <query>
          <![CDATA[
DECLARE @RETURN_VALUE INT = 0
 SELECT @RETURN_VALUE = COALESCE(CODEND,0) 
   FROM TBCADEND (NOLOCK) 
  WHERE STAREC = 1
    AND CODUSU = @CODUSU  
	  AND CODATR = @CODATR
	  AND TIPEND = @TIPEND    
	  AND REGATV = @REGATV        
	  AND USUATR = @USUATR        
	SELECT @RETURN_VALUE          
          ]]>
        </query>

        <parameters>
          <parameter input="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Código do Atributo" name="CODATR" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" desc ="Tipo de Endereço" name="TIPEND" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" desc ="Indicador de Atividade do Registro" name="REGATV" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atribuição" name="USUATR" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="ValidarRegistroPrincipal" return="int" returnmode="1" procname="PRCADENDVALREGATIV" desc ="Validar o registro principal de um endereço" returnvalue="1">
        <query>
          <![CDATA[
  set @return_value = 0
	update tbcadend 
	set regatv = 0
	where codusu = @codusu
	and tipend = @tipend

	if(@@error = 0)
		begin
			update tbcadend 
				set regatv = 1
			where codusu = @codusu
			and tipend = @tipend
			and codend = @codend
			if(@@error = 0)
				set @return_value = 1
		end
	return @return_value        
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Tipo de Endereço" name="TIPEND" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="ID do Endereço" name="CODEND" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="UpdateAccreditedGeo" return="int" returnmode="1" procname="PRCADENDUPDCRDGEO" desc ="Atualiza o registro de credenciado com informações de Geolocalização" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0 
BEGIN TRY
UPDATE TBCADEND 
   SET LATITU = @LATITU, 
       LONGIT = @LONGIT,
	     UPDUSU = @UPDUSU,
	     DATUPD = GETDATE() 
 WHERE CODEND = @CODEND
 IF(@@ERROR=0)
    SET @RETURN_VALUE=1
END TRY
BEGIN CATCH
  SET @RETURN_VALUE=-1
END CATCH
RETURN @RETURN_VALUE    
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Latitude" name="LATITU" type="System.Double" default="" output="" null="false"/>
          <parameter input="true" desc ="Longitude" name="LONGIT" type="System.Double" default="" output="" null="false"/>
          <parameter input="true" desc ="ID do Endereço" name="CODEND" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
        </parameters>

        <returns>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="FAILALL"/>
          <return value="0" message="" error="FAILALL" />
        </returns>
      </item>

    </methods>


  </item>
  <item create="true"  id="4" name="TBCADISP" friendlyname="ItemSubProduto" modelversion="2">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>

    <insertcommand key="Identity" exceptionparamns="'DATCAD','DATUPD'" procname="" method="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="Identity" exceptionparamns="'DATCAD'" procname="" method="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="ItemSubProduto" procname="" desc ="Seleciona o registro de acordo com o codigo do produto">
        <query>
          <![CDATA[SELECT * FROM TBCADISP (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Item do Produto" name="CODISP" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
  </item>
  <item create="true"  id="5" name="TBCADPIT">
    <UpdateKey>Identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn>@NIDPIT</fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <SelectAllList></SelectAllList>
    <StringSqlSelectAll>35</StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll>TRUE</CreateSelectionAll>
    <SelectAllAlias>A.</SelectAllAlias>
    <MaxFields></MaxFields>
  </item>
  <item create="true"  id="6" name="TBCADPLD">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn>@NIDPLN</fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <SelectAllList>CODPLN</SelectAllList>
    <StringSqlSelectAll>13</StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll>True</CreateSelectionAll>
    <SelectAllAlias>A.</SelectAllAlias>
    <MaxFields>NIDPLN</MaxFields>
  </item>
  <!--<item create="true"  id="7" name="TBCADPLM">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>True</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable>SELECT CODPLM, DSCPLM, STAREC, VLRTAR, VLRVEN, VLRMEN, PRMCOM, PRMREC, PRMFAT, PRMAPI, UPDUSU FROM TBCADPLM</SqlTable>
    <fieldreturn>@CODPLM</fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <SelectAllList>CODPLM</SelectAllList>
    <StringSqlSelectAll>16</StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll>TRUE</CreateSelectionAll>
    <SelectAllAlias></SelectAllAlias>
    <MaxFields>CODPLM</MaxFields>
  </item>-->
  <!--<item create="true"  id="8" name="TBCADPLN">
    <UpdateKey>Key</UpdateKey>
    <audit>False</audit>
    <keyaudit></keyaudit>
    <FilterSelect>false</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn>@CODPLN</fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <SelectAllList>
    </SelectAllList>
    <StringSqlSelectAll>12</StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll>TRUE</CreateSelectionAll>
    <SelectAllAlias>
    </SelectAllAlias>
    <MaxFields>CODPLN</MaxFields>
  </item>-->
  <item create="true"  id="9" name="TBCADPRO" friendlyname="Products" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="Products" procname="" desc ="Seleciona o registro de acordo com o codigo do produto">
        <query>
          <![CDATA[SELECT * FROM TBCADPRO (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Produto" name="CODPRO" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>

    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="" desc ="Seleciona todos os produtos">
        <query>
          <![CDATA[
SELECT A.*
      ,ISNULL(B.DSCTAB,'Não definido') AS DSCREC
      ,ISNULL(C.LGNUSU,'') AS DSCUPD
      ,DSCLIN
      ,DSCSTA
  FROM TBCADPRO A WITH (NOLOCK) 
  LEFT JOIN TBTABGER B (NOLOCK) 
    ON (7 = B.NUMTAB AND A.STAREC = B.KEYCOD)
  LEFT JOIN TBCADUSU C (NOLOCK) 
    ON (A.UPDUSU = C.CODUSU)
  LEFT JOIN TBPROLIN D (NOLOCK) 
    ON (A.LINPRO = D.LINPRO)
  LEFT JOIN TBCADSTA E (NOLOCK) 
    ON (A.STAAPL = E.CODSTA)
           ]]>
        </query>
      </item>
      <item script="true" alias="A." sql="" method="List" return="DataTable" procname="PRCADPROLST" desc ="Obtêm a lista de produtos">
        <query>
          <![CDATA[SELECT CODPRO, DSCPRO, NOMFAN, ATVCDT, ATVGPA, INDBNF FROM TBCADPRO (NOLOCK) WHERE STAREC=1
           ]]>
        </query>
      </item>
    </selectallcommand>
    <insertcommand key="key" fieldreturn="CODPRO" exceptionparamns="'DATCAD','DATUPD'" procname="">
      <maxfield field=""/>
      <nextnumber field="CODPRO" id="3" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="key" fieldreturn="CODPRO" exceptionparamns="'DATCAD'" procname="" >
      <maxfield field=""/>
      <nextnumber field="CODPRO" id="3" />
      <pre>
        SET @DATUPD=GETDATE()
      </pre>
      <body></body>
      <pos>
        <![CDATA[
IF(@STAREC=0 AND @RETURN_VALUE>0)
  UPDATE TBUSUPRO SET STAREC=0,DATUPD=GETDATE() WHERE CODPRO=@CODPRO
]]>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>
  </item>
  <item create="true"  id="10" name="TBCADSPR" friendlyname="SubProduct" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <insertcommand key="key" fieldreturn="CODSPR" exceptionparamns="'DATCAD','CODSPR'" procname="">
      <maxfield field="CODSPR"/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="key" fieldreturn="CODSPR" exceptionparamns="'DATCAD'" procname="" >
      <maxfield field="CODSPR"/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="SubProduct" procname="" desc ="Seleciona o registro de acordo com o codigo do sub produto">
        <query>
          <![CDATA[SELECT * FROM TBCADSPR (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Sub Produto" name="CODSPR" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>

    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="" desc ="Seleciona todos os produtos">
        <query>
          <![CDATA[SELECT CODSPR, DSCSPR, A.CODPRO, B.DSCPRO, ISNULL(C.DSCTAB,'') DSCREC 
          FROM TBCADSPR (NOLOCK) A
    INNER JOIN TBCADPRO (NOLOCK) B
    ON (A.CODPRO = B.CODPRO)
    INNER JOIN TBTABGER (NOLOCK) C
    ON (7 = C.NUMTAB AND A.STAREC = C.KEYCOD)
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Produto" name="CODPRO" type="int" default="" output="" null="false"/>
        </parameters>

      </item>
    </selectallcommand>


  </item>
  <item create="true"  id="11" name="TBCADSTA" friendlyname="Transaction Status" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>

    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="TransactionStatus" procname="" desc ="Seleciona o registro de acordo com o codigo do status fornecido">
        <query>
          <![CDATA[SELECT * FROM TBCADSTA (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Status" name="CODSTA" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>

    <insertcommand key="key" exceptionparamns="'DATCAD','DATUPD','CODSTA'" procname="">
      <maxfield field="CODSTA"/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="key" fieldreturn="CODSTA" exceptionparamns="'DATCAD'" procname="" >
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>

    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRCADSTASELALL" desc ="Seleciona todos os códigos de Status de Transação">
        <query order="A.CODSTA">
          <![CDATA[
SELECT A.*
      ,ISNULL(B.DSCTAB,'Não definido') AS DSCREC
      ,ISNULL(C.DSCTAB,'Não definido') AS DSCMOD
      ,ISNULL(E.DSCTAB,'Não definido') AS DSCTRM
      ,ISNULL(D.LGNUSU,'') AS DSCUPD
  FROM TBCADSTA A WITH (NOLOCK)
  LEFT JOIN TBTABGER B (NOLOCK) 
    ON (7 = B.NUMTAB AND A.STAREC = B.KEYCOD)
  LEFT JOIN TBTABGER C (NOLOCK) 
    ON (14 = C.NUMTAB AND A.CODMOD = C.KEYCOD)
  LEFT JOIN TBCADUSU D (NOLOCK) 
    ON (A.UPDUSU = D.CODUSU)
  LEFT JOIN TBTABGER (NOLOCK) E
    ON (59 = E.NUMTAB AND A.CODTRM = E.KEYCOD)
          ]]>
        </query>
      </item>
    </selectallcommand>
  </item>

  <item create="true"  id="12" name="TBCADUSU" friendlyname="Register Users" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>true</audit>
    <keyaudit>CODUSU</keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>True</CSharpPartial>
    <SqlTable>
      <!--SELECT CODUSU,CODATR,STAREC,STAUSU,DATCAD,DATUPD,UPDUSU,TIPUSU,CODPJU,TIPPES,NUMIRG,CODCMF,KEYUSU,SUPLGN,LGNUSU,PSWRST,PSWUSU,NOMUSU,NOMMAE,DATNAC,ULTACE,SRCUSU,RECAGV,CODUSI,ANTCRC,ADMUSU,NIVCFA FROM dbo.TBCADUSU-->
    </SqlTable>
    <fieldreturn>@CODUSU</fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <IdNextNumber>1</IdNextNumber>
    <SetNextNumber>CODUSU</SetNextNumber>
    <MaxFields></MaxFields>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="RegisterUsers" procname="PRCADUSUSEL" desc ="Seleciona o registro de acordo com o Código do Usuário">
        <query>
          <![CDATA[SELECT * FROM TBCADUSU (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Usuario" name="CODUSU" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <insertcommand key="Key" fieldreturn="CODUSU" exceptionparamns="'DATCAD','DATUPD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        EXEC @CODUSU = sps_proximonumero_selecionar 1
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="key" fieldreturn="CODUSU" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD=GETDATE();
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </updatecommand>
    <methods>
      <item script="true" alias="A." sql="" method="GetUsers" type="DataTable" return="DataTable" procname="PRCADUSULSTUSU" desc ="Lista usuários conforme parâmetros de pesquisa" returnvalue="0">
        <query merge="true" order="A.NOMUSU">
          <![CDATA[
          
IF(@DATUPD='')
  SET @DATUPD=NULL
SELECT a.CODUSU
	  ,m.hascta  AS HASCTA
	  ,APLTAR = CASE WHEN N.KEYCOD IS NULL THEN 1 ELSE 0 END    
	  ,isnull(f.cntend,0) as cntend
	  ,isnull(g.cntcto,0) as cntcto
    ,A.codpju
	  ,isnull(h.dsctab,'') as dscpju 
    ,a.STAREC
	  ,isnull(e.dsctab,'') as dscrec 
    ,A.STAUSU
	  ,isnull(d.dscsta,'') as dscstu 
    ,a.DATCAD
    ,A.[TIPUSU] 
	  ,isnull(b.dsctab,'') as dscusu 
    ,A.[TIPPES] 
	  ,isnull(c.dsctab,'') as dscpes 
    ,A.NUMIRG 
    ,A.CODCMF 
    ,A.LGNUSU
    ,A.PSWUSU
    ,A.NOMUSU
    ,A.NOMMAE
    ,A.DATNAC
    ,A.ULTACE
	,A.CODATR
	,ISNULL(i.dsctab,'') as dscatr
	,ISNULL(J.NOMUSU,'') AS DSCSRC
	,ISNULL(K.NOMUSU,'') AS DSCSUP
	,ISNULL(l.DSCTAB,'') AS DSCCFA
from tbcadusu a 
	left join TBTABGER b on (8 = b.numtab and a.tipusu= b.keycod)
	left join TBTABGER c on (13 = c.numtab and a.tippes= c.keytxt)
	left join TBCADSTA d on (a.stausu= d.codsta)
	left join TBTABGER e on (7 = e.numtab and a.starec= e.keycod)
	left join (select codusu, count(*) as cntend from tbcadend (nolock) where starec = 1 and codatr = 1 group by codusu) f on
	(a.codusu = f.codusu)
	left join (select codusu, count(*) as cntcto from tbcadcto (nolock) where starec = 1 and codatr = 1 group by codusu) g on
	(a.codusu = g.codusu)
	left join TBTABGER h on (9 = h.numtab and a.CODPJU= h.keytxt)
	left join TBTABGER i on (37 = i.numtab and a.CODATR= i.keycod)
	left join TBCADUSU j on (a.SRCUSU = J.CODUSU)
	left join (SELECT USUPRO, NOMUSU  FROM TBUSUPRO (NOLOCK) A1 INNER JOIN TBCADUSU (NOLOCK) B1 ON (A1.CODUSU=B1.CODUSU)) K 
		on 	(A.SUPLGN = K.USUPRO)
	left join TBTABGER l on (54 = l.numtab and a.NIVCFA= l.keycod)
	left join (select codusu, CASE stacta WHEN 250 THEN 'ATIVO' WHEN 252 THEN 'SUSP' ELSE '-' END as hascta from tbcadcta (nolock) where orgcta=1 and starec=1) m
		on (a.codusu = m.codusu)
	left join TBTABGER n on (950 = n.numtab and a.codatr= n.keycod)    
WHERE ltrim(rtrim(A.NOMUSU))<>''
  AND (@DATUPD IS NULL OR A.DATUPD > @DATUPD)          
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Atributo" name="CODATR" sysnull="true" type="int" default="" output="" null="true"/>
          <parameter input="true" desc ="Status do Registro" name="STAREC" sysnull="true" type="byte" default="" output="" null="true"/>
          <parameter input="true" islike="true" desc ="Nome do Usuário" name="NOMUSU" type="System.String" size="70" default="" output="" null="true"/>
          <parameter input="true" islike="true" desc ="Login do Usuário" name="LGNUSU" type="System.String" size="30" default="" output="" null="true"/>
          <parameter input="true" desc ="Tipo de Usuário" name="TIPUSU" sysnull="true" type="int" default="" output="" null="true"/>
          <parameter input="true" desc ="Status do Usuário" name="STAUSU" sysnull="true" type="int" default="" output="" null="true"/>
          <parameter input="true" islike="true" desc ="CPF/CNPJ" name="CODCMF" type="System.String" size="15" default="" output="" null="true"/>
          <parameter input="true" omit="true" desc ="Data de Atualização" name="DATUPD" type="System.String" size="20" default="" output="" null="true"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="ValidarEntradaCMF" return="int" returnmode="2" procname="PRCADUSUVALCMF" desc ="Valida um CPF/CNPJ já existente para o mesmo atributo na base de cadastro geral" returnvalue="0">
        <query>
          <![CDATA[
	DECLARE @RETURN_VALUE INT =0;
	DECLARE @RETORNO INT
	SELECT @RETORNO = CODUSU 
    FROM tbcadusu (nolock)
	 WHERE codusu <> @codusu
		 AND ltrim(rtrim(codcmf)) = @codcmf
		 AND codatr = @codatr
		 AND STAREC = 1
	if(@RETORNO IS NOT NULL)
		SET @RETURN_VALUE = @RETORNO;
  SELECT @RETURN_VALUE    
	
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Atributo" name="CODATR" type="int" default="" output="" null="false"/>
          <parameter input="true" desc ="Código do Usuário" name="CODUSU" type="int" default="" output="" null="false"/>
          <parameter input="true" desc ="CPF/CNPJ" name="CODCMF" type="System.String" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="ValidarEntradaLogin" return="int" returnmode="2" procname="PRCADUSUVALLGN" desc ="Verifica se o Login já existe para outro cadastro do tipo de atributo" returnvalue="0">
        <query>
          <![CDATA[
	DECLARE @RETURN_VALUE INT =0;
	DECLARE @RETORNO INT
	IF(@CODUSU IS NOT NULL)
		BEGIN
			SELECT 
				@RETORNO = COALESCE(CODUSU,0) 
			FROM 
				TBCADUSU (nolock)
			WHERE 
					CODUSU <> @CODUSU
				AND LOWER(LTRIM(RTRIM(lgnusu))) = LOWER(LTRIM(RTRIM(@lgnusu)))
				AND CODATR = @CODATR
		END
	ELSE
		BEGIN
			SELECT 
				@RETORNO = COALESCE(CODUSU,0) 
			FROM 
				TBCADUSU (nolock)
			WHERE LOWER(LTRIM(RTRIM(lgnusu))) = LOWER(LTRIM(RTRIM(@lgnusu)))
				AND CODATR = @CODATR
		END
	if(@RETORNO IS NOT NULL)
		SET @return_value = @RETORNO;
SELECT @RETURN_VALUE    
	
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Atributo" name="CODATR" type="int" default="" output="" null="false"/>
          <parameter input="true" desc ="Código do Usuário" name="CODUSU" sysnull="true" type="int" default="" output="" null="true"/>
          <parameter input="true" desc ="Login do Usuário" name="LGNUSU" type="System.String" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="PesquisarCMF" return="int" returnmode="2" procname="PRCADUSUPSQCMF" desc ="Verifica se já existe um cadastro com o CPF/CNPJ cadastrado, e retorna o id localizado" returnvalue="0">
        <query>
          <![CDATA[
  DECLARE @RETURN_VALUE INT =0;
	DECLARE @RETORNO INT 
	SELECT 
		@RETORNO = CODUSU 
	FROM 
		tbcadusu (nolock)
	where 
			CODCMF = @CODCMF
		AND CODATR = @CODATR
	if(@RETORNO IS NOT NULL)
		SET @RETURN_VALUE = @RETORNO;
	SELECT @RETURN_VALUE    
	
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Atributo" name="CODATR" type="int" default="" output="" null="false"/>
          <parameter input="true" desc ="CPF/CNPJ" name="CODCMF" type="System.String" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="UpdateReferences" return="int" returnmode="1" procname="PRCADUSUUPDREF" desc ="Atualiza as referencias e relacionamentos do cadastro" returnvalue="1">
        <query>
          <![CDATA[
DECLARE @ISGEST BIT
SET @ISGEST=0
IF(EXISTS(SELECT USUPRO FROM TBUSUPRO WHERE CODUSU=@CODUSU))
	SET @ISGEST=1
SET @RETURN_VALUE=0
BEGIN TRANSACTION
BEGIN TRY
  BEGIN
    UPDATE TBCADEND SET STAREC = @STAREC, UPDUSU=@UPDUSU, DATUPD=GETDATE() WHERE CODUSU=@CODUSU
    UPDATE TBCADCTO SET STAREC = @STAREC, UPDUSU=@UPDUSU, DATUPD=GETDATE() WHERE CODUSU=@CODUSU
    UPDATE TBUSUPRO SET STAREC = @STAREC, UPDUSU=@UPDUSU, DATUPD=GETDATE() WHERE CODUSU=@CODUSU
    UPDATE TBCADCTA SET STAREC = @STAREC, UPDUSU=@UPDUSU, DATUPD=GETDATE(),STACTA= CASE WHEN @STAREC = 0  THEN 251 ELSE 250 END WHERE CODUSU=@CODUSU
    IF(@STAREC=0)
 	    BEGIN
			    UPDATE TBCTRMEN SET STAREC = 13, UPDUSU=@UPDUSU, DATUPD=GETDATE() WHERE CODUSU=@CODUSU AND RECCOB=0 AND STAREC <> 9
			    UPDATE TBCTRMEN SET STAREC = 13, UPDUSU=@UPDUSU, DATUPD=GETDATE() WHERE USRCOB=@CODUSU AND RECCOB=0 AND STAREC <> 9
			    UPDATE TBGSTLOT SET STAREC = 13, UPDUSU=@UPDUSU, DATUPD=GETDATE() WHERE USUPRO IN (SELECT USUPRO FROM TBUSUPRO (NOLOCK) WHERE CODUSU=@CODUSU)
			    UPDATE TBREGCRT SET STACRT = 120,UPDUSU=@UPDUSU, DATUPD=GETDATE() WHERE NUMLOT IN (SELECT NUMLOT FROM TBGSTLOT WHERE USUPRO IN (SELECT USUPRO FROM TBUSUPRO (NOLOCK) WHERE CODUSU=@CODUSU))
			    UPDATE TBREGBOL 
             SET STAREC = 13, 
                 UPDUSU=@UPDUSU, 
                 DATUPD=GETDATE() 
           WHERE CODUSU=@CODUSU 
             AND STABOL=1
	    END
    ELSE
	    BEGIN 
			    UPDATE TBCTRMEN SET STAREC = 1, UPDUSU=@UPDUSU, DATUPD=GETDATE() WHERE CODUSU=@CODUSU AND RECCOB=0 AND STAREC <> 9
			    UPDATE TBCTRMEN SET STAREC = 1, UPDUSU=@UPDUSU, DATUPD=GETDATE() WHERE USRCOB=@CODUSU AND RECCOB=0 AND STAREC <> 9
			    UPDATE TBREGBOL 
             SET STAREC = 1, 
                 UPDUSU = @UPDUSU, 
                 DATUPD = GETDATE() 
           WHERE CODUSU=@CODUSU 
             AND STAREC = @STAREC
             AND DATVCT > GETDATE()
	    END

    UPDATE TBGSTLOT SET STAREC = @STAREC, UPDUSU=@UPDUSU, DATUPD=GETDATE() WHERE USUTOM=@CODUSU
    UPDATE TBCADUSU SET STAREC = @STAREC, UPDUSU=@UPDUSU, DATUPD=GETDATE(), STAUSU = CASE WHEN @STAREC=0 THEN 62 ELSE 61 END WHERE CODUSU=@CODUSU
    SET @RETURN_VALUE=1
  END      
END TRY
BEGIN CATCH
    SET @RETURN_VALUE=-1
END CATCH

IF(@RETURN_VALUE=1)
  COMMIT TRANSACTION
ELSE
  ROLLBACK TRANSACTION
RETURN @RETURN_VALUE
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Usuário" name="CODUSU" type="int" default="" output="" null="false"/>
          <parameter input="true" desc ="Status do Registro" name="STAREC" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="LocateCMF" return="int" returnmode="2" procname="PRCADUSULOCCMF" desc ="Localiza um registro de cadastro baseado no código de CMF e atributo" returnvalue="0">
        <query>
          <![CDATA[SELECT CODUSU FROM TBCADUSU (NOLOCK) A
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do CMF" name="CODCMF" type="System.String" size="15" default="" output="" null="false"/>
          <parameter input="true" desc ="Código do Atributo" name="CODATR" type="int" default="1" output="" null="false"/>
        </parameters>
      </item>
    </methods>

  </item>
  <item create="true"  id="13" name="TBNXTNUM">
    <UpdateKey></UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>True</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <SelectAllList>
    </SelectAllList>
    <StringSqlSelectAll>
    </StringSqlSelectAll>
    <IdNextNumber>
    </IdNextNumber>
    <SetNextNumber>
    </SetNextNumber>
    <CreateSelectionAll>
    </CreateSelectionAll>
    <SelectAllAlias>
    </SelectAllAlias>
    <MaxFields>
    </MaxFields>
  </item>
  <item create="true"  id="14" name="TBPLMPLN">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>True</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1100000000</procedure>
    <asp>1100000000</asp>
    <csharp>1100000000</csharp>
    <SelectAllList></SelectAllList>
    <StringSqlSelectAll>1</StringSqlSelectAll>
    <IdNextNumber>
    </IdNextNumber>
    <SetNextNumber>
    </SetNextNumber>
    <CreateSelectionAll></CreateSelectionAll>
    <SelectAllAlias>
    </SelectAllAlias>
    <MaxFields>
    </MaxFields>
  </item>
  <item create="true"  id="15" name="TBPROLIN" friendlyname="ProductLine" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <MaxFields>LINPRO</MaxFields>

    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="ProductLine" procname="" desc ="Seleciona o registro de acordo com o Código da Linha">
        <query>
          <![CDATA[SELECT * FROM TBPROLIN (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Linha de Produto" name="LINPRO" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <insertcommand key="Key" exceptionparamns="'DATCAD','LINPRO'">
      <maxfield field="LINPRO"/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="key" fieldreturn="LINPRO" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </updatecommand>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="" desc ="Seleciona todos os registros de endereço do usuário fornecido">
        <query order="A.LINPRO">
          <![CDATA[select a.*, isnull(b.dsctab,'') dscrec, isnull(c.lgnusu,'') dscupd from tbprolin (nolock) a
inner join tbtabger (nolock) b on (7 = b.numtab and a.starec = b.keycod)
 left join tbcadusu (nolock) c on (c.codusu = a.updusu)]]>
        </query>
      </item>
    </selectallcommand>
  </item>

  <item create="true"  id="16" name="TBREGCRT" friendlyname="Cadastro Cartoes" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>true</audit>
    <keyaudit>CODCRT</keyaudit>
    <FilterSelect>True</FilterSelect>
    <listselect>STACRT</listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable>SELECT TOP 1 CODCRT,NIDLIM,STAREC,LSTACT,DATCAD,DATUPD,ORGATV,ASSPRT,ASSUSU,STAASS,SECLVL,DATATV,DATCAN,NIDCRT,ISEMEN,USUMEN,NIRLOT,NUMLOT,NOMPRT,NUMCRT,VALCRT,NUMCVC,STAPRO,STACRT,PSWCRT,NOMCR1,NOMCR2,NOMCR3,UPDUSU,FILNAM,staflt,OPRCRT,USUPRO,DATEXT FROM dbo.TBREGCRT</SqlTable>
    <extendedmodel><![CDATA[SELECT TOP 1 CODCRT,NIDLIM,STAREC,LSTACT,DATCAD,DATUPD,ORGATV,ASSPRT,ASSUSU,STAASS,SECLVL,DATATV,DATCAN,NIDCRT,ISEMEN,USUMEN,NIRLOT,NUMLOT,NOMPRT,NUMCRT,VALCRT,NUMCVC,STAPRO,STACRT,PSWCRT,NOMCR1,NOMCR2,NOMCR3,UPDUSU,FILNAM,staflt,OPRCRT,USUPRO,DATEXT FROM dbo.TBREGCRT]]></extendedmodel>

    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>

    <objectclass>
      <item script="true" alias="A." sql="" method="CartoesAssociados" return="int" returnmode="1" procname="" desc ="Objeto de Retenção de Informações de Cartões Associados" returnvalue="1">
        <query>
          <![CDATA[
DECLARE @RESULT TABLE (CODCRT INT, 
                       CODPRO SMALLINT, 
                       NUMCRT VARCHAR(16), 
                       VALCRT VARCHAR(10), 
                       NOMPRT VARCHAR(50))
SELECT * FROM @RESULT
        ]]>

        </query>
      </item>
    </objectclass>

    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="CadastroCartoes" procname="PRREGCRTSEL" desc ="Seleciona o registro de acordo com o Código do Cartão">
        <query>
          <![CDATA[SELECT * FROM TBREGCRT (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Cartão" name="CODCRT" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="Select" return="CadastroCartoes" procname="PRREGCRTSELCRT" desc ="Seleciona o registro de acordo com o Código Extendido do Cartão">
        <query>
          <![CDATA[SELECT * FROM TBREGCRT (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código Extendido do Cartão" name="NUMCRT" type="System.String" size="16" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <insertcommand key="Key" fieldreturn="CODCRT" exceptionparamns="'DATCAD','DATUPD'">
      <maxfield field=""/>
      <nextnumber field="CODCRT" id="5" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="key" fieldreturn="CODCRT" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD=GETDATE();
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </updatecommand>

    <!--<view>
      <item script="true" alias="A." sql="" method="" return="" procname="VWPSQCRT" desc ="View de Pesquisa de Cartões">
        <query>
          <![CDATA[
   SELECT A.*,
       A.assusu             AS CODUSU,
	   ISNULL(US.USUPRO,0)  AS USUPRO,
       G.dscsta,
       C.codcmf,
       C.datnac,
       Isnull(C.tippes, '') AS TIPPES,
       Isnull(C.nommae, '') AS NOMMAE,
       Isnull(E.codufe, '') AS CODUFE,
       Isnull(E.dscend, '') AS DSCEND,
       Isnull(E.numend, '') AS NUMEND,
       Isnull(E.dsccpl, '') AS DSCCPL,
       Isnull(E.dsccid, '') AS DSCCID,
       Isnull(E.dscbai, '') AS DSCBAI,
       Isnull(E.dscpai, '') AS DSCPAI,
       E.codcep             AS CODCEP,
       Isnull(F.dscend, '') AS DSCMAL,
       H.tipcto,
       H.numddd,
       H.numtel,
       Isnull(J.vlrsal, 0)  AS VLRSAL
FROM   tbregcrt (nolock) A
 LEFT JOIN tbcadusu (nolock) C  ON ( A.assusu = C.codusu )
 LEFT JOIN (SELECT codend,
                         regatv,
                         codusu,
                         tipend,
                         tiplog,
                         dscend,
                         dsccpl,
                         numend,
                         dsccid,
                         dscbai,
                         codcep,
                         codpai,
                         Isnull(C1.dsctab, '') AS DSCPAI,
                         codufe,
                         Isnull(B1.dsctab, '') AS DSCUFE,
                         codatr
                  FROM   tbcadend (nolock) A1
                         LEFT JOIN tbtabger (nolock) B1
                                ON ( 2 = B1.numtab
                                     AND Ltrim(Rtrim(A1.codufe)) =
                                         Ltrim(Rtrim(B1.keytxt)) )
                         LEFT JOIN tbtabger (nolock) C1
                                ON ( 1 = C1.numtab
                                     AND A1.codpai = C1.keycod )
                  WHERE  A1.tipend in (1,2)
                         AND A1.starec = 1
                         AND A1.regatv = 1) E
              ON ( C.codusu = E.codusu )
       LEFT JOIN (SELECT codusu,
                         dscend,
                         codatr
                  FROM   tbcadend A1 (nolock)
                  WHERE  A1.tipend =3
                         AND A1.starec <> 0
                         AND A1.regatv = 1
                         AND A1.dscend <> '') F
              ON ( C.codusu = F.codusu )
  LEFT JOIN (SELECT A1.codusu,
                    tipcto,
                    numddd,
                    numtel,
                    codatr
               FROM tbcadcto (nolock) A1
                         INNER JOIN (SELECT codusu,
                                            Min(codcto) AS CODCTO
                                     FROM   tbcadcto (nolock)
                                     WHERE  starec = 1 AND regatv = 1
                                     GROUP  BY codusu) B1
                                 ON ( A1.codcto = B1.codcto )) H
    ON ( C.codusu = H.codusu )
 INNER JOIN tbcadsta G (nolock) ON ( A.stacrt = G.codsta )
  LEFT JOIN tbcrtsal J (nolock) ON ( A.codcrt = J.codcrt )
  LEFT JOIN (SELECT DISTINCT numlot, usupro FROM tbgstlot (nolock) WHERE  starec = 1 AND tiprec = 1 ) US
    ON ( A.NUMLOT = US.NUMLOT)
WHERE  C.stausu IN ( 61, 63 )
          
        ]]>
        </query>
      </item>
    </view>-->

    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRREGCRTSELALL" desc ="Seleciona todos os registros de endereço do usuário fornecido">
        <query>
          <![CDATA[
IF (@NOMSRC IS NOT NULL)
	   SET @NOMSRC = '%' +@NOMSRC + '%'
SELECT A.* 
      ,ISNULL(B.NOMUSU,'') AS NOMUSU
      ,ISNULL(C.NOMUSU,'') AS DSCTOM
      ,ISNULL(E.DSCTAB,'') AS DSCREC
      ,ISNULL(D.DSCSTA,'') AS DSCSTA
      ,ISNULL(F.LGNUSU,'') AS DSCUPD
      ,ISNULL(G.DSCSTA,'') AS DSCACT
  FROM TBREGCRT (NOLOCK) A
  LEFT JOIN TBCADUSU (NOLOCK) B
    ON (A.ASSUSU = B.CODUSU)
  LEFT JOIN TBCADUSU (NOLOCK) C
    ON (A.USUMEN = C.CODUSU)
 INNER JOIN TBCADSTA (NOLOCK) D
    ON (A.STACRT = D.CODSTA)
 INNER JOIN TBTABGER (NOLOCK) E
    ON (A.STAREC= E.KEYCOD AND 7 = E.NUMTAB)
 INNER JOIN TBCADSTA (NOLOCK) G
    ON (A.LSTACT = G.CODSTA)
  LEFT JOIN TBCADUSU (NOLOCK) F
    ON (A.UPDUSU = F.CODUSU)
 WHERE A.CODCRT<>0
   AND (@NOMSRC IS NULL
   	OR ((NOMPRT LIKE @NOMSRC)
    OR  (NOMCR1 LIKE @NOMSRC)   
    OR  (NOMCR2 LIKE @NOMSRC)       
    OR  (NOMCR3 LIKE @NOMSRC)))           
        ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Status do Cartão" name="STACRT" type="System.Int16" sysnull="true" default="null" output="" null="true"/>
          <parameter input="true" desc ="Número do Lote" name="NUMLOT" type="int" sysnull="true" default="null" output="" null="true"/>
          <parameter input="true" desc ="Usuário Associado" name="ASSUSU" type="int" sysnull="true" default="null" output="" null="true"/>
          <parameter input="true" desc ="Usuário Mensalidade" name="USUMEN" type="int" sysnull="true" default="null" output="" null="true"/>
          <parameter input="true" apply="false" omit="true" desc ="Nome ou Parte" name="NOMSRC" type="System.String" size="100" sysnull="true" default="null" output="" null="true"/>
        </parameters>
      </item>

      <item reference="0" script="true" alias="A." sql="" type="" method="UserAssociatedCards" return="DataTable" procname="PRREGCRTLSTCRTASS" desc ="Obtêm a Lista de cartões associados à um usuário">
        <query>
          <![CDATA[
SELECT a.assprt as codprt
	    ,a.codcrt
	    ,a.assusu as codusu
	    ,isnull(c.nomusu,'') as dscusu
      ,A.NIDCRT
      ,A.NUMLOT
      ,A.NOMPRT
      ,A.NUMCRT
      ,A.VALCRT
      ,A.STACRT
      ,D.DSCSTA
      ,A.PSWCRT
      ,A.NOMCR1
      ,A.NOMCR2
      ,A.NOMCR3
      ,isnull(e.VLRSAL,0) AS VLRSAL
      ,ISNULL(e.datupd,GETDATE()) AS DATUPD
      ,f.datexp
      ,g.datexp as datree
  FROM TBREGCRT (nolock) A
 INNER join tbcadusu (nolock) C
    on (a.assusu = c.codusu)
 inner join tbcadsta (nolock) D
    on (a.stacrt = d.codsta)
  left join TBCRTSAL (nolock) E
    on (a.codcrt = e.codcrt)
  left join (select nidlot, max(datact) as datexp from tbregrot (nolock) where codact in (48,59) group by nidlot) F
    on (A.nirlot = f.nidlot)
  left join (select nidcrt, max(datact) as datexp from tbregrot (nolock) where codact=49 and nidcrt<>'' group by nidcrt) G
    on (a.NIDCRT = g.NIDCRT)
 WHERE (1=1)    
]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Usuário Associado ao Cartão" name="ASSUSU" type="System.Int32" default="" output="" null="true"/>
        </parameters>
      </item>

      <item reference="0" script="true" alias="A." sql="" type="" method="BlockedCards" return="DataTable" procname="PRREGCRTLSTCRTBLK" desc ="Obtêm a Lista de cartões bloqueados">
        <query>
          <![CDATA[
SELECT CODCRT
      ,A.STAREC
      ,[LSTACT]
      ,[ORGATV]
      ,[ASSPRT]
      ,[ASSUSU]
      ,[STAASS]
      ,[SECLVL]
      ,[DATATV]
      ,[DATCAN]
      ,[NIDCRT]
      ,[ISEMEN]
      ,[USUMEN]
      ,[NIRLOT]
      ,A.NUMLOT
	    ,A.USUPRO
      ,[NOMPRT]
      ,[NUMCRT]
      ,[VALCRT]
      ,[NUMCVC]
      ,[STAFLT]
      ,[STAPRO]
      ,[STACRT]
      ,[PSWCRT]
      ,[NOMCR1]
      ,[NOMCR2]
      ,[NOMCR3]
      ,[FILNAM]
	FROM TBREGCRT (NOLOCK) A          
]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Usuário Associado ao Cartão" name="ASSUSU" type="System.Int32" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Código do Gestor" name="USUPRO" type="System.Int32" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Status do Cartão" name="STACRT" type="System.Int16" default="" output="" null="true"/>
        </parameters>
      </item>
    </selectallcommand>

    <methods>
      

      <item script="true" alias="A." sql="" type="" method="CardAction" return="int" procname="PRREGCRTCRTACT" desc ="Executa Ações de Atualização pela manutenção do Cartão" returnvalue="1" remarks="1 - Reativa a mensalidade de um usuário do cartão@3 - Inativa a mensalidade de um usuário do cartão">
        <query merge="true">
          <![CDATA[
SET @RETURN_VALUE = 0
IF(@UPDUSU<=0)
   SET @RETURN_VALUE=-1
IF(@CODACT=3)
		BEGIN
			UPDATE TBCTRMEN 
			   SET STAREC = 13,
					   UPDUSU = @UPDUSU,
					   DATUPD = GETDATE() 
        WHERE CODUSU = @CODUSU 
					AND starec not in (0,9)
			SET @RETURN_VALUE = @@ROWCOUNT
		END
IF(@CODACT=1)
		BEGIN
			UPDATE TBCTRMEN 
			   SET STAREC = 5,
					   UPDUSU = @UPDUSU,
					   DATUPD = GETDATE() 
       WHERE codusu = @CODUSU 
				AND starec not in (13)
			SET @RETURN_VALUE = @@ROWCOUNT
		END
	RETURN @RETURN_VALUE        
        
        ]]>
        </query>
        <parameters>
          <parameter input="true" apply="false" desc ="Código do Usuário" name="CODUSU" type="Int" size="12" default="" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Usuário de Atualização" name="UPDUSU" type="Int"  default="" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Código de Ação" name="CODACT" type="System.Byte" default="" output="" null="false"/>
        </parameters>

        <returns>
          <return value="0" message="" error="EMPTYDATARECORDS"/>
          <return operator=">" value="0" message="" error="OK"/>          
          <return value="-1" message="" error="REQUIREDUSEROPERATION"/>
        </returns>

      </item>

      <item script="true" alias="A." sql="" type="" method="RegisterMaintenanceFee" return="int" procname="PRREGCRTREGTAXEXP" desc ="Executar o Registro da Tarifa de Manutenção do Cartão" returnvalue="1" remarks="">
        <query merge="true">
          <![CDATA[
/*
  Insere um registro de tarifa na tabela de mensalidade
  Procedimento
       Obter o ID de Registro da Tarifa para o usuario/gestor informado
       Obter o valor de Tarifa Expandida, se houver
       Efetuar a inclusao na tabela de mensalidades
*/
          
SET @RETURN_VALUE=0
DECLARE @DATPRO DATETIME
SET @DATPRO = GETDATE()
DECLARE @VLRTAR DECIMAL=0
DECLARE @USUPRO INT = 0       -- CODIGO DO GESTOR
DECLARE @CODUSU INT = 0       -- CODIGO DO USUARIO
DECLARE @NIDTAR INT = 0       -- ID DA TARIFA
DECLARE @EXPTAR FLOAT =0      -- VALOR DA TARIFA EXPANDIDA
SELECT @USUPRO = USUPRO, @CODUSU=ASSUSU FROM TBREGCRT (NOLOCK) WHERE CODCRT = @CODCRT;

IF(@USUPRO<=0)
   SET @RETURN_VALUE = -1
IF(@CODUSU<=0)
   SET @RETURN_VALUE = -2
IF(@CODCRT<=0)
   SET @RETURN_VALUE = -3
IF(@UPDUSU<=0)
   SET @RETURN_VALUE = -4
IF(@CODTAR<=0)
   SET @RETURN_VALUE = -5
   
IF(@RETURN_VALUE=0)
    BEGIN
		EXEC PRCADTARFNDTAR @USUPRO, @CODUSU, @CODTAR, 1,0,0,0, @NIDTAR OUTPUT 
		IF(@NIDTAR>0)   
			BEGIN
				EXEC PRCADTARGETEXPTAR @NIDTAR, @EXPTAR OUTPUT
				SELECT @VLRTAR = EXTVLR FROM dbo.CALCULATE(@NIDTAR,@EXPTAR, 0, 1,1,null,null,0,0,0,0)
				IF(@VLRTAR>0)
					BEGIN
						INSERT INTO [dbo].[TBCTRMEN]
                             ([STAREC]
                             ,[NIDBOL]
                             ,[REGLIB]
                             ,[REFBOL]
                             ,[STAMEN]
                             ,[NUMMES]
                             ,[NUMANO]
                             ,[LOTINT]
                             ,[CODUSM]
                             ,[UPDUSU]
                             ,[CODUSU]
                             ,[DATMEN]
                             ,[DATVCT]
                             ,[TIPMEN]
                             ,[NUMPCL]
                             ,[DATATV]
                             ,[USUPRO]
                             ,[VLRCOB]
                             ,[USRCOB]
                             ,[INDLCT]
                             ,[DCTCOB]
                             ,[RECCOB]
                             ,[CODCRT]
                             ,[NIDTRB]
                             ,[LOTINS]
                             ,[LOTFIN]
                             ,[DATUPD]
                             ,[NUMTEN])
                       VALUES
                             (1
                             ,0
                             ,0
                             ,0
                             ,261
                             ,DATEPART(day,@DATPRO)
                             ,DATEPART(year,@DATPRO)
                             ,0
                             ,0
                             ,@UPDUSU
                             ,@CODUSU
                             ,@DATPRO
                             ,@DATPRO
                             ,7
                             ,1
                             ,@DATPRO
                             ,@USUPRO
                             ,@VLRTAR
                             ,0
                             ,2
                             ,0
                             ,-1
                             ,@CODCRT
                             ,0
                             ,0
                             ,0
                             ,@DATPRO
                             ,0)

						IF(@@ERROR=0)
							SET @RETURN_VALUE=1
					END
				ELSE
					SET @RETURN_VALUE=-7           
            END  
        ELSE 
           SET @RETURN_VALUE=-6
    END
RETURN @RETURN_VALUE

        ]]>
        </query>
        <parameters>
          <parameter input="true" apply="false" desc ="Código do Cartão" name="CODCRT" type="Int" default="" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Código da Tarifa" name="CODTAR" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Usuário de Atualização" name="UPDUSU" type="Int"  default="" output="" null="false"/>

        </parameters>

        <returns>
          <return value="0" message="" error="EMPTYDATARECORDS"/>
          <return operator=">" value="0" message="" error="OK"/>
          <return value="-1" message="" error="FAILDETECTMANAGER"/>
          <return value="-2" message="" error="INVALIDUSER"/>
          <return value="-3" message="" error="CARDIDINVALID"/>
          <return value="-4" message="" error="REQUIREDUSEROPERATION"/>
          <return value="-5" message="" error="INVALIDFEENUMBER"/>
          <return value="-6" message="NAO EXISTE TARIFA CADASTRADA PARA ESSA OPERACAO" error=""/>
          <return value="-7" message="NAO HA VALOR APURADO PARA REGISTRO DESTA OPERACAO" error=""/>

        </returns>

      </item>


      <item script="true" alias="A." sql="" type="DataTableList" method="Gather" return="CadastroCartoes" procname="PRREGCRTSELSTA" desc ="Seleciona todos os cartões a partir de um determinado status">
        <query merge="true">
          <![CDATA[SELECT * FROM TBREGCRT (NOLOCK) A  WHERE STAREC = 1 AND STAPRO=0]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Status do Cartão" name="STACRT" type="System.Int16" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" type="DataTableList" method="GetUserAssociatedCards" return="CartoesAssociados" procname="PRREGCRTSELASS" desc ="Obtêm a lista de cartões ativos associados à um usuário">
        <query merge="true">
          <![CDATA[
SELECT A.CODCRT, B.CODPRO, A.NUMCRT, A.VALCRT, UPPER(A.NOMPRT) NOMPRT 
  FROM TBREGCRT (NOLOCK) A
 INNER JOIN TBUSUPRO (NOLOCK) B ON (B.USUPRO = A.USUPRO)
 WHERE A.STAREC=1
   AND A.STACRT=109
       ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Usuário Associado" name="ASSUSU" type="int" default="" output="" null="false"/>
        </parameters>
      </item>


      <item script="true" alias="A." sql="" method="IsActivatable" return="int" procname="PRREGCRTGETATV" desc ="Verifica se o cartão e o CPF/CNPJ informado são passíveis de ativação" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0
DECLARE @CODCRT INT
DECLARE @STACRT SMALLINT
DECLARE @CMFASS VARCHAR(15)
SELECT @CODCRT = A.CODCRT, @STACRT = A.STACRT, @CMFASS = ISNULL(B.CODCMF,'') 
  FROM TBREGCRT (NOLOCK) A  
  LEFT JOIN TBCADUSU (NOLOCK) B 
    ON (A.ASSUSU = B.CODUSU) 
 WHERE A.NUMCRT=@NUMCRT

 IF(@@ROWCOUNT>0)
	BEGIN
		IF(@STACRT = 103)
			BEGIN
				IF(@CODCMF = @CMFASS)
					SET @RETURN_VALUE = 1
			END 
		ELSE
			IF(@STACRT = 109)
				BEGIN
					IF(@CODCMF = @CMFASS)
						SET @RETURN_VALUE = -1					
					ELSE
						SET @RETURN_VALUE = -2					
				END
			IF(@STACRT = 107)
				SET @RETURN_VALUE = -3					
	END
ELSE
	SET @RETURN_VALUE = -4					
RETURN @RETURN_VALUE;        
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Número do Cartão" name="NUMCRT" type="System.String" size="16" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código do CPF/CNPJ" name="CODCMF" type="System.String" size="15" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="CARDALREADYACTIVE"/>
          <return value="-2" message="" error="CARDASSOCIATEDOTHERUSER"/>
          <return value="-3" message="" error="CARDINPROCACTIVATION"/>
          <return value="-4" message="" error="CARDNOTFOUND"/>
        </returns>
      </item>

      <item script="true" alias="A." sql="" method="GetProductActivated" return="int" procname="PRREGCRTGETPRO" desc ="Verifica se o CPF/CNPJ informado já possui um determinado produto ativado" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE =0
SELECT @RETURN_VALUE = ISNULL(B1.CODPRO,0) 
  FROM TBREGCRT (NOLOCK) A1
 INNER JOIN TBGSTLOT (NOLOCK) B1
    ON (A1.NUMLOT = B1.NUMLOT)
 INNER JOIN TBCADPRO (NOLOCK) C1
    ON (B1.CODPRO = C1.CODPRO)
 WHERE ASSUSU IN (SELECT CODUSU FROM TBCADUSU (NOLOCK) WHERE CODCMF=@CODCMF)
   AND A1.STAREC= 1
   AND A1.STACRT IN (107,109)	
   AND C1.INDBNF=@INDBNF
   AND C1.CODPRO=@CODPRO
RETURN @RETURN_VALUE        
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do CPF/CNPJ" name="CODCMF" type="System.String" size="15" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código do Produto" name="CODPRO" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Indicador de Benefício" name="INDBNF" type="System.Byte" default="1" output="" null="false"/>
        </parameters>
        <returns>
          <return value="0" message="" error="OK"/>
          <return operator=">" value="0" message="" error="CARDPRODUCTACTIVATED"/>
        </returns>
      </item>


      <item script="true" alias="A." sql="" method="RegisterLockCard" return="int" procname="PRREGCRTLCKCRT" desc ="Efetua uma atualização de bloqueio/desbloqueio conforme tipo de operacao" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE = 0
DECLARE @CODCRT INT
SELECT @CODCRT = CODCRT FROM TBREGCRT (NOLOCK) WHERE NIDCRT=@NIDCRT
IF(@TIPOPE=1)
	BEGIN
		 UPDATE TBREGCRT
				SET STAPRO = STACRT, 
					  STACRT = 127
		  WHERE NIDCRT = @NIDCRT
			IF(@@ERROR=0)
					SET @RETURN_VALUE=1
      ELSE
          SET @RETURN_VALUE=-1
	END	  
	  
IF(@TIPOPE=2)
	BEGIN
		 UPDATE TBREGCRT
				SET STACRT = STAPRO
		  WHERE NIDCRT = @NIDCRT
		    AND STAPRO <> 0
			IF(@@ERROR=0)
					SET @RETURN_VALUE=1
      ELSE
          SET @RETURN_VALUE=-2
	END	  

IF(@TIPOPE=3)
	BEGIN
		 UPDATE TBREGCRT
				SET STACRT = 128
		  WHERE NIDCRT = @NIDCRT
		    AND STAPRO <> 0
			IF(@@ERROR=0)
					SET @RETURN_VALUE=1
      ELSE
          SET @RETURN_VALUE=-2
	END	  
IF(@RETURN_VALUE=1)
  INSERT INTO TBAUDDAT (UPDUSU,AUDKEY, AUDIDR,AUDIMS) VALUES(@UPDUSU,44,@CODCRT,104)          
RETURN @RETURN_VALUE  
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Cartão" name="NIDCRT" type="System.String" size="12" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU" type="Int"  default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Tipo de Operação de bloqueio" name="TIPOPE" type="System.Byte" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="LOCKCARDFAILREGISTER"/>
          <return value="-2" message="" error="UNLOCKFAILREGISTER"/>
        </returns>
      </item>

      <item script="true" alias="A." sql="" method="CancelSaleStatus" return="int" procname="PRREGCRTCANVEN" desc ="Efetua o cancelamento de um cartão vendido" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0
BEGIN TRANSACTION
BEGIN TRY
IF(EXISTS (SELECT 1 FROM TBREGCRT WHERE CODCRT =@CODCRT AND STACRT=103))
  BEGIN
	  UPDATE TBREGCRT 
		   SET NOMPRT='',
		       NOMCR1='',
			     NOMCR2='',
			     NOMCR3='',
			     STACRT = 101,
			     UPDUSU = @UPDUSU,
			     DATUPD = GETDATE(),
           ASSPRT = 0,
           ASSUSU = 0
	   WHERE CODCRT = @CODCRT
			 AND STACRT = 103
    IF(@@ERROR=0)
        BEGIN
            INSERT INTO TBAUDDAT ( UPDUSU,    AUDDAT, AUDKEY,  AUDIDR, AUDIMS,AUDDSC) 
                          VALUES (@UPDUSU, GETDATE(),     44, @CODCRT,     104, 'ALTEROU O STATU DO CARTAO DE 103 - VENDIDO PARA 101 - EM ESTOQUE')        
        END
  END        
END TRY
BEGIN CATCH
  SET @RETURN_VALUE=-1
END CATCH
IF(@RETURN_VALUE=1)
  COMMIT TRAN
ELSE
   ROLLBACK TRAN
RETURN @RETURN_VALUE   
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Cartão" name="CODCRT" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU" type="Int"  default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="0" message="" error="EMPTYDATA"/>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="FAILUREUPDATECARD"/>
        </returns>
      </item>

      <item script="true" alias="A." sql="" method="ChangeStatus" return="int" procname="PRREGCRTCHGSTA" desc ="Efetua a alteração do status de um cartão" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0
DECLARE @AUDDSC VARCHAR(100) = N''
DECLARE @OLDSTA VARCHAR(100) = N''
BEGIN TRANSACTION
BEGIN TRY
IF(EXISTS (SELECT 1 FROM TBREGCRT WHERE CODCRT =@CODCRT))
  BEGIN
    SELECT @OLDSTA = CONVERT(VARCHAR(10),ISNULL(STACRT,0)) FROM TBREGCRT WHERE CODCRT =@CODCRT  
	  UPDATE TBREGCRT 
		   SET STAPRO = STACRT,
			     STACRT = @STACRT,
			     UPDUSU = @UPDUSU,
			     DATUPD = GETDATE(),
		       DATATV = CASE WHEN @STACRT=109 THEN GETDATE() ELSE DATATV END,
		       DATCAN = CASE WHEN @STACRT=129 THEN GETDATE() ELSE DATCAN END
	   WHERE CODCRT = @CODCRT
       AND STAREC = 1
    IF(@@ERROR=0)
        BEGIN
            SET @AUDDSC = 'ALTEROU O STATUS PARA DE ' + @OLDSTA + ' PARA ' + CONVERT(VARCHAR(10),@STACRT) 
            INSERT INTO TBAUDDAT ( UPDUSU,    AUDDAT, AUDKEY,  AUDIDR, AUDIMS, AUDDSC) 
                          VALUES (@UPDUSU, GETDATE(),     44, @CODCRT,     104, @AUDDSC)        
        END
  END        
END TRY
BEGIN CATCH
  SET @RETURN_VALUE=-1
END CATCH

IF(@RETURN_VALUE=1)
  COMMIT TRAN
ELSE
   ROLLBACK TRAN
RETURN @RETURN_VALUE   
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Cartão" name="CODCRT" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Novo Status do Cartão" name="STACRT" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU" type="Int"  default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="0" message="" error="EMPTYDATA"/>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="FAILUREUPDATECARD"/>
        </returns>
      </item>

      <item script="true" alias="A." sql="" method="ChangePassword" return="int" procname="PRREGCRTCHGPSW" desc ="Efetua a alteração da senha do cartão" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0
DECLARE @AUDDSC VARCHAR(100) = N''
DECLARE @OLDPSW VARCHAR(100) = N''
BEGIN TRANSACTION
BEGIN TRY
IF(EXISTS (SELECT 1 FROM TBREGCRT (NOLOCK) WHERE CODCRT =@CODCRT))
  BEGIN
    SELECT @OLDPSW = ISNULL(PSWCRT,'') FROM TBREGCRT WHERE CODCRT =@CODCRT  
	  UPDATE TBREGCRT 
		   SET PSWCRT = @PSWCRT,
			     UPDUSU = @UPDUSU,
			     DATUPD = GETDATE()
	   WHERE CODCRT = @CODCRT
       AND STAREC = 1
    IF(@@ERROR=0)
        BEGIN
            SET @AUDDSC = 'ALTEROU O SENHA DO CARTAO DE ' + @OLDPSW + ' PARA ' + @PSWCRT  
            INSERT INTO TBAUDDAT ( UPDUSU,    AUDDAT, AUDKEY,  AUDIDR, AUDIMS, AUDDSC,NUMIPA) 
                          VALUES (@UPDUSU, GETDATE(),     44, @CODCRT,    105, @AUDDSC,@NUMIPA)        
            SET @RETURN_VALUE=1
        END
  END  
ELSE
    SET @RETURN_VALUE=-2
END TRY
BEGIN CATCH
  SET @RETURN_VALUE=-1
END CATCH

IF(@RETURN_VALUE=1)
  COMMIT TRAN
ELSE
   ROLLBACK TRAN
RETURN @RETURN_VALUE   
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Cartão" name="CODCRT" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Novo Senha do Cartão" name="PSWCRT" type="System.String" size="10" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU" type="Int"  default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Endereço de Localização" name="NUMIPA" type="System.String" size="50" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="0" message="" error="EMPTYDATA"/>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="FAILUREUPDATECARD"/>
          <return value="-2" message="" error="CARDNOTFOUND"/>
        </returns>
      </item>

      <item script="true" alias="A." sql="" method="ChangeCVC" return="int" procname="PRREGCRTCHGCVC" desc ="Efetua a alteração do número o CVC do Cartão" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0
DECLARE @AUDDSC VARCHAR(100) = N''
DECLARE @OLDCVC VARCHAR(10) = N''
BEGIN TRANSACTION
BEGIN TRY
IF(EXISTS (SELECT 1 FROM TBREGCRT WHERE CODCRT =@CODCRT))
  BEGIN
    SELECT @OLDCVC = CONVERT(VARCHAR(10),ISNULL(NUMCVC,0)) FROM TBREGCRT WHERE CODCRT =@CODCRT
	  UPDATE TBREGCRT 
		   SET NUMCVC = @NUMCVC,
			     UPDUSU = @UPDUSU,
			     DATUPD = GETDATE()
	   WHERE CODCRT = @CODCRT
       AND STAREC = 1
    IF(@@ERROR=0)
        BEGIN
            SET @AUDDSC = 'ALTEROU O NUMERO DO CVC DE ' + @OLDCVC + ' PARA ' + CONVERT(VARCHAR(10), @NUMCVC)  
            INSERT INTO TBAUDDAT ( UPDUSU,    AUDDAT, AUDKEY,  AUDIDR, AUDIMS, AUDDSC) 
                          VALUES (@UPDUSU, GETDATE(),     44, @CODCRT,    106, @AUDDSC)        
        END
  END        
END TRY
BEGIN CATCH
  SET @RETURN_VALUE=-1
END CATCH

IF(@RETURN_VALUE=1)
  COMMIT TRAN
ELSE
   ROLLBACK TRAN
RETURN @RETURN_VALUE   
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Cartão" name="CODCRT" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Novo Número do CVC" name="NUMCVC" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU" type="Int"  default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="0" message="" error="EMPTYDATA"/>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="FAILUREUPDATECARD"/>
        </returns>
      </item>

      <item script="true" alias="A." sql="" method="CancelAssociation" return="int" procname="PRREGCRTCHGASS" desc ="Efetua o cancelamento da associação de um cartão" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0
DECLARE @CODPRT INT
DECLARE @ASSUSU INT
BEGIN TRANSACTION
BEGIN TRY
IF(EXISTS (SELECT 1 FROM TBREGCRT WHERE CODCRT =@CODCRT AND ASSUSU>0 AND ASSPRT>0))
  BEGIN
    SELECT @CODPRT = ASSPRT, @ASSUSU = ASSUSU FROM TBREGCRT (NOLOCK) WHERE CODCRT=@CODCRT
    IF(@CODPRT>0 AND @ASSUSU>0)
      INSERT INTO TBUSUCRT(CODPRT,CODUSU,CODCRT) VALUES (@CODPRT, @ASSUSU,@CODCRT)
      
	  UPDATE TBREGCRT 
		   SET NOMPRT='',
		       NOMCR1='',
			     NOMCR2='',
			     NOMCR3='',
           STAPRO = STACRT,           
			     STACRT = 101,
			     UPDUSU = @UPDUSU,
			     DATUPD = GETDATE(),
           ASSPRT = 0,
           ASSUSU = 0
	   WHERE CODCRT = @CODCRT
    IF(@@ERROR=0)
        BEGIN
            INSERT INTO TBAUDDAT ( UPDUSU,    AUDDAT, AUDKEY,  AUDIDR, AUDIMS,AUDDSC) 
                          VALUES (@UPDUSU, GETDATE(),     44, @CODCRT,    104, 'ALTEROU O STATUS DO CARTAO PARA 101 - EM ESTOQUE')        
        END
  END        
END TRY
BEGIN CATCH
  SET @RETURN_VALUE=-1
END CATCH

IF(@RETURN_VALUE=1)
  COMMIT TRAN
ELSE
   ROLLBACK TRAN
RETURN @RETURN_VALUE   
   
          
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Cartão" name="CODCRT" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU" type="Int"  default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="0" message="" error="EMPTYDATA"/>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="FAILUREUPDATECARD"/>
        </returns>
      </item>

      <item script="true" alias="A." sql="" method="AssociateCard" return="int" procname="PRREGCRTASSCRT" desc ="Associar Cartao" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0          
DECLARE @ASSPRT INT = 0   -- CODIGO DO PORTADOR
DECLARE @CODUSU INT = 0   -- CODIGO DO USUARIO
DECLARE @ADDAUD TINYINT = 0
DECLARE @AUDDSC VARCHAR(100) = N''

IF(@STACRT = 109)
  BEGIN
    SELECT @CODUSU = ASSUSU 
      FROM TBREGCRT (NOLOCK) 
     WHERE CODCRT = @CODCRT
    
    EXEC PRGETNXTNUM 21, 0, @ASSPRT OUTPUT
    
    IF(@ASSPRT=0)
      SET @RETURN_VALUE=-2
    IF(@ASSUSU = 0)
      SET @RETURN_VALUE=-3
    
    IF(@CODUSU=0 AND @RETURN_VALUE=0)
      BEGIN
          UPDATE TBREGCRT
             SET STACRT = @STACRT,
                 ASSUSU = @ASSUSU,
                 DATUPD = GETDATE(),
                 DATATV = GETDATE(),             
                 UPDUSU = @UPDUSU,
                 ASSPRT = @ASSPRT,
                 STAASS = 2
           WHERE CODCRT = @CODCRT
           
           IF(@@ERROR = 0)
			        UPDATE TBCADCTA 
                 SET STACTA = 250, 
                     DATUPD=GETDATE(), 
                     UPDUSU=@UPDUSU 
			         WHERE CODUSU=@CODUSU 
                 AND ORGCTA=1 
                 AND TIPCTA = 1 
                 AND STACTA<>250
			     IF(@@ERROR = 0)
				       UPDATE TBCADUSU 
                  SET STAUSU = 61,	DATUPD = GETDATE(),  UPDUSU = @UPDUSU
					    WHERE	CODUSU = @CODUSU AND STAUSU <> 61 AND STAREC<>0
              
					 IF(@@ERROR = 0)
              BEGIN
                SET @ADDAUD=1
                SET @AUDDSC = N'ALTEROU O STATUS DO CARTAO PARA 109 - ATIVO'
                SET @RETURN_VALUE=1                
              END
      END
    ELSE
        SET @RETURN_VALUE= -1
  END         

IF(@STACRT = 120 AND @RETURN_VALUE=0)
  BEGIN
      UPDATE TBREGCRT
         SET STACRT = @STACRT,
             DATUPD = GETDATE(),
             UPDUSU = @UPDUSU,
             DATCAN = GETDATE()
       WHERE CODCRT = @CODCRT
         AND STACRT <> @STACRT
         
           IF(@@ERROR=0)
              BEGIN
                SET @ADDAUD=1
                SET @AUDDSC = N'CANCELOU O CARTAO COM STATUS 120 - CANCELADO'
                SET @RETURN_VALUE=1                
              END
         
  END       

IF(@STACRT NOT IN (109,120) AND @RETURN_VALUE=0)
  BEGIN
      UPDATE TBREGCRT
         SET STACRT = @STACRT,
             DATUPD = GETDATE(),
             UPDUSU = @UPDUSU
       WHERE CODCRT = @CODCRT
         AND STACRT <> @STACRT

          IF (@@ERROR=0)
            BEGIN
                SET @ADDAUD=1
                SET @AUDDSC = N'ALTEROU O STATUS DO CARTAO PARA ' + CAST(@STACRT AS VARCHAR)
                SET @RETURN_VALUE=1                
            END
  END       

IF(@RETURN_VALUE=1)
    BEGIN
      IF(@ADDAUD=1)
        INSERT INTO TBAUDDAT (UPDUSU, AUDDAT,AUDKEY,AUDIDR,AUDIMS,AUDDSC) VALUES (@UPDUSU, GETDATE(),44,@CODCRT,104, @AUDDSC)        
    END
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Cartão" name="CODCRT" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código do Usuário" name="ASSUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Status do Cartão" name="STACRT" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU" type="Int"  default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="0" message="" error="EMPTYDATA"/>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="CARDALREADYACTIVE"/>
          <return value="-2" message="" error="BEARERNOTASSOCIATED"/>
          <return value="-3" message="" error="INVALIDUSER"/>
        </returns>
      </item>

      <item  script="true" alias="A." sql="" method="SearchCards" return="DataTable" procname="PRREGCRTPSQCRT" desc ="Pesquisar cartões" returnvalue="1">
        <query merge="true" order="A.CODCRT ASC">
          <![CDATA[
SELECT A.CODCRT
    ,A.NIDLIM
    ,A.STAREC
    ,A.DATCAD
    ,A.DATUPD
    ,A.ORGATV
    ,A.ASSPRT
    ,A.ASSUSU
    ,A.STAASS
    ,A.DATATV
    ,A.DATCAN
    ,A.NIDCRT
    ,A.NUMLOT
    ,A.NOMPRT
    ,A.NUMCRT
    ,A.VALCRT
    ,A.NUMCVC
    ,A.STAPRO
    ,A.STACRT
    ,D.DSCSTA
    ,A.PSWCRT
    ,A.NOMCR1
    ,A.NOMCR2
    ,A.NOMCR3
    ,A.UPDUSU
	,A.USUPRO
  ,B.DATUPD DATSAL  
	,B.VLRSAL
 FROM TBREGCRT (NOLOCK) A
 LEFT JOIN TBCRTSAL (NOLOCK) B
   ON (B.CODCRT = A.CODCRT)
INNER JOIN TBCADSTA (NOLOCK) D ON (D.CODSTA = A.STACRT)   
WHERE A.ASSUSU IN (SELECT CODUSU FROM TBCADUSU WHERE STAREC=1 AND STAUSU IN (61,63))
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Gestor" name="USUPRO" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" islike="true" desc ="Nome do Portador" name="NOMPRT" type="System.String" size="70" default="" output="" null="true"/>
          <parameter input="true" apply="true" islike="true" desc ="Número do Cartão" name="NUMCRT" type="System.String" size="16" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Status do Cartão" name="STACRT" type="System.Int16" sysnull="true" default="null" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Número do Lote" name="NUMLOT" type="System.Int32" sysnull="true" default="null" output="" null="true"/>
        </parameters>
      </item>

      <item webtype="POST" script="true" alias="A." sql="" method="RegisterScriptOccurrences" return="0" returnmode="0" procname="PRREGCRTOCOROT" desc ="Efetua o registro de ocorrencias no roteiro" returnvalue="1">
        <query>
          <![CDATA[
UPDATE TBREGCRT 
   SET LSTACT = @CODACT
      ,UPDUSU = @UPDUSU
      ,DATUPD = GETDATE()
 WHERE NIDCRT = @NIDCRT          
          ]]>

        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código de Ação" name="CODACT" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="ID do Cartão" name="NIDCRT" type="System.String" size="12" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" size="16" default="" output="" null="false"/>
        </parameters>
      </item>

    </methods>


  </item>

  <item create="true"  id="17" name="TBTABGER" friendlyname="Tabela Geral" modelversion="3">
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>True</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="TabelaGeral" procname="" desc ="Seleciona o registro de acordo com o id de registro da tabela geral">
        <query>
          <![CDATA[SELECT * FROM TBTABGER (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID de Registro da Tabela" name="KEYTAB" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <methods>
      <item script="true" alias="A." sql="" method="FindKey" return="int" returnmode="2" procname="PRTABGERFNDKEY" desc ="Localiza uma chave de registro com base no codigo chave" returnvalue="0">
        <query merge="true">
          <![CDATA[SELECT COALESCE(ISNULL(KEYTAB,0),0) FROM TBTABGER (NOLOCK) A WHERE STAREC=1]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Tabela" name="NUMTAB" type="int" default="" output="" null="false"/>
          <parameter input="true" desc ="Código Numérico da Chave" name="KEYCOD" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="FindKeyText" return="int" returnmode="2" procname="PRTABGERFNDTXT" desc ="Localiza uma chave de registro com base no texto chave" returnvalue="0">
        <query merge="true">
          <![CDATA[SELECT COALESCE(ISNULL(KEYTAB,0),0) FROM TBTABGER (NOLOCK) A WHERE STAREC=1]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Tabela" name="NUMTAB" type="int" default="" output="" null="false"/>
          <parameter input="true" desc ="Código Texto da Chave" name="KEYTXT" type="System.String" default="" output="" null="false"/>
        </parameters>
      </item>
    </methods>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="" desc ="Seleciona todos os registros da tabela geral">
        <query order="A.NUMTAB, A.KEYCOD">
          <![CDATA[
SELECT A.KEYTAB, A.STAREC,
	   ISNULL(B.DSCTAB,'') DSCREC,	
	   A.NUMTAB,
	   A.KEYCOD,
	   ISNULL(A.KEYTXT,'') KEYTXT,
	   A.NUMREF,
	   A.DSCTAB,
	   ISNULL(C.LGNUSU,'') DSCUPD
  FROM TBTABGER (NOLOCK) A
 INNER JOIN TBTABGER (NOLOCK) B
    ON (7 = B.NUMTAB AND A.STAREC = B.KEYCOD)
  LEFT JOIN TBCADUSU (NOLOCK) C
    ON (A.UPDUSU = C.CODUSU)          
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Número da Tabela" name="NUMTAB" sysnull="true" type="System.Int32" default="" output="" null="true"/>
        </parameters>
      </item>
    </selectallcommand>

    <insertcommand key="Identity" exceptionparamns="'DATCAD','DATUPD'" procname="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="Identity" exceptionparamns="'DATCAD'" procname="" >
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>
  </item>
  <item create="true"  id="18" name="TBTIPCTA" friendlyname="Tipo de Conta" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>True</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="TipoConta" procname="" desc ="Seleciona o tipo de conta de acordo com o código">
        <query>
          <![CDATA[SELECT * FROM TBTIPCTA (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Tipo de Conta" name="TIPCTA" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>

    <insertcommand key="Key" exceptionparamns="'DATCAD','DATUPD','TIPCTA'" procname="">
      <maxfield field="TIPCTA"/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="Key" fieldreturn="TIPCTA" exceptionparamns="'DATCAD'" procname="" >
      <maxfield field="TIPCTA"/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD = GETDATE();
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>

    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query>
          SELECT TIPCTA, DSCCTA, TIPEXT, ISNULL(B.LGNUSU,'') LGNUSU, ISNULL(C.DSCTAB,'') DSCREC FROM TBTIPCTA (NOLOCK) A LEFT JOIN TBCADUSU (NOLOCK) B ON (A.UPDUSU = B.CODUSU)
          LEFT JOIN TBTABGER (NOLOCK) C ON (7 = C.NUMTAB AND A.STAREC = C.KEYCOD)
        </query>
      </item>
    </selectallcommand>

  </item>

  <item create="true"  id="19" name="TBTIPCTO" friendlyname="Tipo de Contato" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>True</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="TipoContato" procname="" desc ="Seleciona o tipo de contato de acordo com o código">
        <query>
          <![CDATA[SELECT * FROM TBTIPCTO (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Tipo de Contato" name="TIPCTO" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>

    <insertcommand key="Key" exceptionparamns="'DATCAD','DATUPD','TIPCTO'" procname="">
      <maxfield field="TIPCTO"/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="Key" fieldreturn="TIPCTO" exceptionparamns="'DATCAD'" procname="" >
      <maxfield field="TIPCTO"/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD = GETDATE();
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRTIPCTOSELALL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query>
          SELECT TIPCTO, DSCCTO, ISNULL(B.LGNUSU,'') LGNUSU, ISNULL(C.DSCTAB,'') DSCREC FROM TBTIPCTO (NOLOCK) A LEFT JOIN TBCADUSU (NOLOCK) B ON (A.UPDUSU = B.CODUSU)
          LEFT JOIN TBTABGER (NOLOCK) C ON (7 = C.NUMTAB AND A.STAREC = C.KEYCOD)
        </query>
      </item>
    </selectallcommand>

  </item>

  <item create="true"  id="20" name="TBTIPEND" friendlynme="Tipo de Endereco" modelversion="3">
    <UpdateKey></UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>True</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <insertcommand key="Key" exceptionparamns="'DATCAD','DATUPD','TIPEND'" procname="testetipend">
      <maxfield field="TIPEND"/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-3" message="" error="EXISTINGREQUEST"/>
      </returns>
    </insertcommand>
    <updatecommand key="key" fieldreturn ="TIPEND" exceptionparamns="'DATCAD'" procname="" >
      <maxfield field="TIPEND"/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD = GETDATE();
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>

    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="TipoEndereco" procname="" desc ="Seleciona o tipo de endereço de acordo com o código">
        <query>
          <![CDATA[SELECT * FROM TBTIPEND (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Tipo de Endereço" name="TIPEND" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>

    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRTIPENDSELALL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query>
          SELECT A.* , ISNULL(B.DSCTAB,'') DSCREC, ISNULL(C.LGNUSU,'') AS LGNUSU  FROM TBTIPEND A WITH (NOLOCK)
          INNER JOIN TBTABGER B (NOLOCK) ON ( 7 = B.NUMTAB AND A.STAREC = B.KEYCOD)
          LEFT JOIN TBCADUSU C (NOLOCK) ON (A.UPDUSU = C.CODUSU)
        </query>
      </item>
    </selectallcommand>
  </item>

  <item create="true"  id="21" name="TBTIPLOG" friendlyname="Tipo de Logradouro" modelversion="3">
    <UpdateKey></UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>True</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>

    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="TipoLogradouro" procname="" desc ="Seleciona o tipo de contato de acordo com o código">
        <query>
          <![CDATA[SELECT * FROM TBTIPLOG (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Tipo de Logradouro" name="TIPLOG" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>

    <insertcommand key="Key" exceptionparamns="'DATCAD','DATUPD','TIPLOG'" procname="">
      <maxfield field="TIPLOG"/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="Key" fieldreturn="TIPLOG" exceptionparamns="'DATCAD'" procname="" >
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD = GETDATE();
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRTIPLOGSELALL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query>
          SELECT TIPLOG, DSCLOG, ABRLOG, ISNULL(B.LGNUSU,'') LGNUSU, ISNULL(C.DSCTAB,'') DSCREC FROM TBTIPLOG (NOLOCK) A LEFT JOIN TBCADUSU (NOLOCK) B ON (A.UPDUSU = B.CODUSU)
          LEFT JOIN TBTABGER (NOLOCK) C ON (7 = C.NUMTAB AND A.STAREC = C.KEYCOD)
        </query>
      </item>
    </selectallcommand>

  </item>
  <item create="true"  id="22" name="TBTIPMOV" friendlyname="Tipo Movimento" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="TipoMovimento" procname="PRTIPMOVSEL" desc ="Seleciona o registro de acordo com o Código do Movimentos">
        <query>
          <![CDATA[SELECT * FROM TBTIPMOV (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código de Movimento" name="CODMOV" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <insertcommand key="Key" fieldreturn="CODMOV" exceptionparamns="'DATCAD','DATUPD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="key" fieldreturn="CODMOV" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD=GETDATE();
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </updatecommand>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRTIPMOVSELALL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query>
          <![CDATA[
SELECT a.* ,ISNULL(b.DSCTAB,'') as dscrec
          ,ISNULL(c.dsctab,'') as dscope
          ,ISNULL(e.LGNUSU,'') AS DSCUPD
          ,ISNULL(F.DSCTAB,'') AS DSCTPV
          ,ISNULL(H.DSCMOV,'') AS DSCEST
          ,ISNULL(I.DSCTAB,'') AS DSCGER
          ,ISNULL(J.DSCTAB,'') AS DSCSUM
  FROM tbtipmov (NOLOCK) A
  LEFT join tbtabger(nolock) B
    on (7 = B.numtab and a.starec = b.keycod)
  LEFT join tbtabger (NOLOCK) C
    on (10 = c.numtab and a.sigope = c.keycod)
  LEFT JOIN TBCADUSU e (NOLOCK)
    ON (A.UPDUSU = e.CODUSU)
  LEFT JOIN TBTABGER F WITH (NOLOCK) 
    ON (29 = f.numtab and a.tipval = f.keycod)
  LEFT JOIN (select codmov, dscmov from tbtipmov (nolock)) H
    ON (A.CODEST = H.CODMOV)
  LEFT JOIN TBTABGER (NOLOCK) I
    ON (40 = i.numtab and a.codger = i.keycod)
  LEFT JOIN TBTABGER (NOLOCK) J
    ON (41 = J.numtab and a.CODSUM = J.keycod)
 WHERE (1=1)
       ]]>
        </query>
      </item>
    </selectallcommand>

  </item>
  <item create="true"  id="23" name="TBTIPPFL">
    <UpdateKey></UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>True</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <SelectAllList></SelectAllList>
    <StringSqlSelectAll></StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll></CreateSelectionAll>
    <SelectAllAlias></SelectAllAlias>
    <MaxFields></MaxFields>
  </item>
  <item create="true"  id="24" name="TBUSUPRO" friendlyname="RegisterManager" modelversion="3">
    <UpdateKey>Identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>TRUE</CSharpPartial>
    <SqlTable/>
    <procedure>1110000000</procedure>
    <asp>1110000000</asp>
    <csharp>1110000000</csharp>

    <insertcommand key="Identity" exceptionparamns="'DATCAD','DATUPD'" procname="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="Identity" exceptionparamns="'DATCAD'" procname="" >
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>

    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="RegisterManager" procname="PRUSUPROSEL" desc ="Seleciona o registro de acordo com o Código do Movimentos">
        <query>
          <![CDATA[SELECT * FROM TBUSUPRO (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Gestor" name="USUPRO" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>

    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRUSUPROSELALL" desc ="Seleciona todos os produtos do usuário fornecido">
        <query>
          <![CDATA[
SELECT A.* 
        ,HASCFG = CASE WHEN E.NIDCFG IS NULL THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT) END 
        ,CNTTAR = ISNULL(F.CNTTAR,0) 
		,B.DSCTAB AS DSCREC 
		,C.DSCPRO 
		,D.NOMUSU
  FROM TBUSUPRO (NOLOCK) A
 INNER JOIN TBTABGER (NOLOCK) B
    ON (7 = B.NUMTAB AND A.STAREC = B.KEYCOD)
 INNER JOIN TBCADPRO (NOLOCK) C
    ON (A.CODPRO = C.CODPRO)
 INNER JOIN TBCADUSU (NOLOCK) D
    ON (A.CODUSU = D.CODUSU)
  LEFT JOIN TBUSUCFG (NOLOCK) E
    ON (E.USUCFG  = A.USUPRO AND E.NIVCFG = 1)
  LEFT JOIN (SELECT USUPRO, NIVTAR, CNTTAR =COUNT(*)  FROM TBCADTAR (NOLOCK) GROUP BY USUPRO, NIVTAR)  F
    ON (F.USUPRO = A.USUPRO AND F.NIVTAR = 1)          
        ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Usuário" name="CODUSU" type="System.Int32" default="null" output="" null="true"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="GetUsers" return="DataTable" procname="PRUSUPROLSTUSU" desc ="Obtêm a lista de usuarios vinculados a produtos da tabela de gestores">
        <query>
          <![CDATA[
SELECT DISTINCT A.CODUSU
  , (CASE WHEN A.STAREC=1 THEN ' ' ELSE '*' END ) 
  + (CASE WHEN B.STAREC=1 THEN ' ' ELSE '*' END )  
  + B.NOMUSU AS NOMUSU
  FROM tbusupro (nolock) a
 INNER join tbcadusu (nolock) b on (b.codusu = a.codusu)
 INNER join tbcadpro (nolock) c on (c.codpro = a.codpro)
        
        ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Usuário" name="CODUSU" type="System.Int32" default="null" output="" null="true"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="GetManagers" return="DataTable" procname="PRUSUPROLSTGST" desc ="Obtêm a lista de gestores">
        <query order="B.NOMUSU, C.DSCPRO">
          <![CDATA[
SELECT USUPRO, 
       NOMGST = (CASE WHEN A.STAREC=1 THEN ' ' ELSE '*' END ) + (CASE WHEN B.STAREC=1 THEN ' ' ELSE '*' END ) + (B.NOMUSU + ' - ' + C.DSCPRO) 
  FROM TBUSUPRO (NOLOCK) A  
 INNER JOIN TBCADUSU (NOLOCK) B  
 		ON (A.CODUSU = B.CODUSU)  
 INNER JOIN TBCADPRO (NOLOCK) C  
 		ON (A.CODPRO = C.CODPRO) 
        ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" sysnull="true" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Código do Produto" name="CODPRO" type="System.Int32" sysnull="true" default="" output="" null="true"/>
        </parameters>
      </item>


    </selectallcommand>
  </item>


  <item create="true"  id="25" name="TBCADUCT">
    <UpdateKey>Identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <SelectAllList>CODUSU</SelectAllList>
    <StringSqlSelectAll>11</StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll>True</CreateSelectionAll>
    <SelectAllAlias>A.</SelectAllAlias>
    <MaxFields></MaxFields>
  </item>
  <item create="true"  id="26" name="TBUSUCRT">
    <UpdateKey select="" field="CODPRT"></UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>True</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>TRUE</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn>@CODPRT</fieldreturn>
    <procedure>1110000000</procedure>
    <asp>1110000000</asp>
    <csharp>1110000000</csharp>
    <SelectAllList></SelectAllList>
    <StringSqlSelectAll>25</StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll>true</CreateSelectionAll>
    <SelectAllAlias>A.</SelectAllAlias>
    <SelectAllOrder>A.CODPRT</SelectAllOrder>
    <MaxFields>CODPRT</MaxFields>
  </item>
  <item create="true"  id="27" name="TBGSTLOT" friendlyname="BatchNumber" modelversion="3">
    <UpdateKey>Identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <extendedmodel>SELECT top 1 USUPRO,NUMLOT,NIDLOT,STAREC,TIPREC,USRLOT,DATCAD,DATUPD,UPDUSU,CRTIMG,TIPBOL,CODPRO,HSTNAM,USUTOM,NUMQTD,DATSOL,DATREC,VLROPE,VLRUNI,VLRUCV,VLRUCR,NIDBOL,DATVCT,STALOT,REGAGV,CODAGV,PCTCOM,CODAG2,PCTCO2,OPRCRT FROM dbo.TBGSTLOT</extendedmodel>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable>SELECT top 1 USUPRO,NUMLOT,NIDLOT,STAREC,TIPREC,USRLOT,DATCAD,DATUPD,UPDUSU,CRTIMG,TIPBOL,CODPRO,HSTNAM,USUTOM,NUMQTD,DATSOL,DATREC,VLROPE,VLRUNI,VLRUCV,VLRUCR,NIDBOL,DATVCT,STALOT,REGAGV,CODAGV,PCTCOM,CODAG2,PCTCO2,OPRCRT FROM dbo.TBGSTLOT</SqlTable>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>

    <insertcommand key="Identity" exceptionparamns="'DATCAD','DATUPD'" procname="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
        <![CDATA[
IF(@OPRCRT>0 AND @NUMLOT>0 AND @TIPREC=1)
   BEGIN
       UPDATE TBREGCRT SET OPRCRT =@OPRCRT WHERE NUMLOT=@NUMLOT AND OPRCRT<>@OPRCRT
       UPDATE TBADMCRT SET OPRCRT= B.OPRCRT FROM TBADMCRT A INNER JOIN TBREGCRT B ON (A.CODCRT = B.CODCRT) WHERE B.NUMLOT=@NUMLOT
  END       
]]>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="Identity" exceptionparamns="'DATCAD'" procname="" >
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
        <![CDATA[
IF(@OPRCRT>0 AND @NUMLOT>0 AND @TIPREC=1)
   BEGIN
       UPDATE TBREGCRT SET OPRCRT =@OPRCRT WHERE NUMLOT=@NUMLOT AND OPRCRT<>@OPRCRT
       UPDATE TBADMCRT SET OPRCRT= B.OPRCRT FROM TBADMCRT A INNER JOIN TBREGCRT B ON (A.CODCRT = B.CODCRT) WHERE B.NUMLOT=@NUMLOT
  END       
      ]]>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>

    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="BatchNumber" procname="PRGSTLOTSEL" desc ="Seleciona o lote de acordo com o ID do Lote">
        <query>
          <![CDATA[SELECT * FROM TBGSTLOT (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Lote" name="NIDLOT" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>

    </selectcommand>

    <methods>
      <item script="true" alias="A." sql="" method="GetNextBatch" return="int" returnmode="2" procname="PRGSTLOTGETNXTLOT" desc ="Obtêm o próximo lote com disponibilidade de uso para o gestor informado" returnvalue="1">
        <query>
          <![CDATA[
DECLARE @RETURN_VALUE INT = 0          
DECLARE @NUMLOT INT
DECLARE @QTDDSP INT
SELECT @NUMLOT = NUMLOT, @QTDDSP = COUNT(*) 
  FROM TBREGCRT (NOLOCK)
 WHERE NUMLOT IN (SELECT NUMLOT FROM TBGSTLOT (NOLOCK) WHERE USUPRO=@USUPRO)
	 AND STACRT=101 
	 AND NUMLOT > 0
 GROUP BY NUMLOT 
 ORDER BY NUMLOT ASC          
 
IF(@QTDDSP>0)
  SET @RETURN_VALUE = @NUMLOT
SELECT @RETURN_VALUE  RETURN_VALUE
         
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Gestor" name="USUPRO" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="ChangeStatusBatch" return="int" returnmode="1" procname="PRGSTLOTUPDSTALOT" desc ="Altera o Status de um registro de Lote e atualiza o roteiro de lotes" returnvalue="1">
        <query>
          <![CDATA[
DECLARE @DATATU DATETIME
DECLARE @NXTTRA INT
DECLARE @NIDROT INT
SET @DATATU = GETDATE()
SET @NIDROT = 0
SET @RETURN_VALUE=0

IF( NOT EXISTS (SELECT 1 FROM TBGSTLOT WHERE NIDLOT = @NIDLOT AND STALOT =@CODSTA))
		BEGIN
			SET @RETURN_VALUE =3 
		END		

IF(@RETURN_VALUE = 0)
		BEGIN
	    SELECT @NXTTRA = NXTTRA FROM TBCADSTA WHERE	CODSTA = @CODSTA AND STAREC = 1
	    IF(@@ERROR=0)
		    SET @RETURN_VALUE=1
	    IF(@NXTTRA>0)
		    BEGIN
			    UPDATE TBGSTLOT
             SET STALOT = @NXTTRA,
					       DATUPD = @DATATU,
					       UPDUSU = @UPDUSU
			     WHERE NIDLOT =@NIDLOT
             AND STALOT = @CODSTA

			    IF(@@ERROR=0)
				    BEGIN
				        INSERT INTO TBREGROT(NUMLOT,NIDLOT,CODACT,STAACT,DATACT,DSCACT,DATCAD,STAREC,UPDUSU)
						    VALUES (0,@NIDLOT,@NXTTRA,206,@DATATU,'ALTERAÇÃO DE STATUS',@DATATU,1,@UPDUSU);
					      IF(@@ERROR=0)
						      SET @RETURN_VALUE=2
				    END
		    END
	END

	RETURN @RETURN_VALUE
        
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Lote" name="NIDLOT" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código do Status" name="CODSTA" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
        </parameters>

        <returns>
          <return value="1" message="LOTE ATUALIZADO" error="OK"/>
          <return value="2" message="LOTE E ROTEIRO ATUALIZADO" error="OK"/>
          <return value="3" message="REGISTRO DE LOTE COM O STATUS ATUAL NÃO EXISTE" error="FAILALL"/>
          <return value="0" message="NAO FOI POSSIVEL EXECUTAR A OPERACAO PARA O LOTE INFORMADO" error="FAILALL"/>
        </returns>

      </item>

    </methods>

    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRGSTLOTSELALL" desc ="Seleciona todos os produtos do usuário fornecido">
        <query>
          <![CDATA[
SELECT A.*
      ,ROW_NUMBER() OVER(ORDER BY NIDLOT) AS NUMLIN
      ,ISNULL(I.QTDCRT,0) AS QTDCRT
      ,ISNULL(B.DSCTAB,'Não definido') AS DSCREC
      ,ISNULL(C.LGNUSU, '') AS DSCUPD
      ,ISNULL(E.NOMUSU, '') AS NOMGST
      ,ISNULL(F.DSCSTA, '') AS DSCSTA
      ,ISNULL(H.DSCSTA, '') AS DSCBOL
      ,ISNULL(J.NOMUSU, '') AS DSCUSU
      ,ISNULL(K.NOMUSU, '') AS DSCAGV
      ,ISNULL(L.NOMUSU, '') AS DSCAG2
      ,ISNULL(M.STAREC, 0) AS COMREC
  FROM TBGSTLOT A WITH (NOLOCK)
  LEFT JOIN TBTABGER B 
    ON (A.STAREC = B.KEYCOD)
  LEFT JOIN TBCADUSU C WITH (NOLOCK) ON (A.UPDUSU = C.CODUSU)
  LEFT JOIN TBUSUPRO D WITH (NOLOCK) ON (A.USUPRO = D.USUPRO)
  LEFT JOIN TBCADUSU E WITH (NOLOCK) ON (D.CODUSU = E.CODUSU)
  LEFT JOIN TBCADSTA F WITH (NOLOCK) ON (A.STALOT = F.CODSTA)
  LEFT JOIN TBREGBOL G WITH (NOLOCK) ON (A.NIDBOL = G.NIDBOL)
  LEFT JOIN TBCADSTA H WITH (NOLOCK) ON (G.STABOL = H.CODSTA)
  LEFT JOIN (select numlot, count(numlot) AS QTDCRT from tbregcrt (nolock) where numlot > 0 group by numlot) I
    on (A.NUMLOT = I.NUMLOT AND A.TIPREC = 1)
  LEFT JOIN TBCADUSU J WITH (NOLOCK) ON (A.USUTOM = J.CODUSU)
  LEFT JOIN TBCADUSU K WITH (NOLOCK) ON (A.CODAGV = K.CODUSU)
  LEFT JOIN TBCADUSU L WITH (NOLOCK) ON (A.CODAG2 = L.CODUSU)
  LEFT JOIN (SELECT DISTINCT TIPCOM,NIRLOT,STAREC FROM TBCADCOM (NOLOCK) WHERE NIRLOT>0 and starec<>0) M 
    ON (A.NIDLOT = M.NIRLOT AND A.TIPREC = M.TIPCOM)
 WHERE (B.NUMTAB = 7)
         
        ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Gestor" name="USUPRO" sysnull="true" type="System.Int32" default="" output="" null="true"/>
          <parameter input="true" desc ="Tipo de Registro" name="TIPREC" sysnull="true" type="System.Byte" default="" output="" null="true"/>
          <parameter input="true" desc ="Status do Registro" name="STAREC" sysnull="true" type="System.Byte" default="" output="" null="true"/>
          <parameter input="true" desc ="Status do Lote" name="STALOT" sysnull="true" type="System.Int16" default="" output="" null="true"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="SalesMonitoring" return="DataTable" procname="PRGSTLOTMONSAL" desc ="Seleciona todos os registros de monitoramento de vendas">
        <query>
          <![CDATA[
	SELECT 	stalot, c.nomusu, nidlot,
		isnull(case when stalot in (44) then '' else nidcrt end,'') as nidcrt,
		isnull(case when stalot in (44) then '' else numcrt end,'') as numcrt,
		isnull(e.dscpro,'') AS DSCPRO
	from 
			tbgstlot (nolock) a 
				inner join tbcadsta (nolock) b
					on (a.stalot = b.codsta)
				inner join tbcadusu (nolock) c 
					on (a.usutom = c.codusu)
				left join tbregcrt (nolock) d 
					on (a.usutom = d.assusu)
				left join tbcadpro (nolock) e 
					on (a.codpro = e.codpro)

	where 
				usrlot >= 0 
			and tiprec in (2,4) 
			and stalot <> 59
			and a.starec = 1
        ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Status do Lote" name="STALOT" sysnull="true" type="System.Int32" default="" output="" null="true"/>
        </parameters>
      </item>

    </selectallcommand>
  </item>

  <item create="false"  id="28" name="TBWRTTOK" friendlyname="UserToken" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <extendedmodel>SELECT top 1 CODACE, NUMTOK,CODUSU,STAEXE,DATCAD,USRHST,LIFTOK,URLTOK,TOKUSU,DATINI,DATVAL,USETOK, 0 CODPRO, JWTTOK FROM dbo.TBWRTTOK</extendedmodel>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>True</CSharpPartial>
    <SqlTable>SELECT TOP 1 NUMTOK,CODACE,CODUSU,STAEXE,DATCAD,USRHST,LIFTOK,URLTOK,TOKUSU,DATINI,DATVAL,USETOK, 0 AS CODPRO, JWTTOK FROM dbo.TBWRTTOK</SqlTable>
    <procedure>101000000000</procedure>
    <asp>00100000000</asp>
    <csharp>101000000</csharp>
    <insertcommand key="Identity" exceptionparamns="'DATCAD','NUMTOK'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[
        DECLARE @NUMREF INT = 0
        SET @LIFTOK=0
        IF @CODPRO is not null
          BEGIN
            SELECT @NUMREF = NUMREF FROM TBTABGER WITH (NOLOCK) WHERE NUMTAB = 903 AND KEYCOD = @CODPRO
            IF @@ROWCOUNT > 0
              BEGIN
                SET @DATINI = GETDATE()
                SET @DATVAL = DATEADD(ss,@NUMREF,GETDATE())
              END
            END

        IF @CODPRO is not null
          BEGIN
              SELECT @LIFTOK = NUMREF FROM TBTABGER WITH (NOLOCK) WHERE NUMTAB = 904 AND KEYCOD = @CODPRO 
              IF @@ROWCOUNT > 0
                BEGIN
                  SET @LIFTOK = CAST(@LIFTOK AS tinyint)
                END
          END
          
        IF @CODACE is not null
          BEGIN
            SELECT @NUMREF = NUMREF FROM TBTABGER WITH (NOLOCK) WHERE NUMTAB = 910 AND KEYCOD = @CODACE
            IF @@ROWCOUNT > 0
              BEGIN
                SET @DATINI = GETDATE()
                SET @DATVAL = DATEADD(ss,@NUMREF,GETDATE())
              END
            END
         
      ]]>
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>

    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="UserToken" procname="PRWRTTOKSEL" desc ="Seleciona o Token">
        <query>
          <![CDATA[SELECT * FROM TBWRTTOK (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Lote" name="NUMTOK" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>

    <methods>
      <item script="true" alias="A." sql="" method="CloseTokens" return="int" returnmode="1" procname="PRWRTTOKREM" desc ="Remove tokens diferentes do atual" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0
IF(@CODUSU>0 AND @NUMTOK>0 AND @CODACE>0)
  	BEGIN
			UPDATE TBWRTTOK
			   SET STAEXE =2 
			 WHERE NUMTOK IN (SELECT NUMTOK 
							    FROM TBWRTTOK 
								WHERE CODUSU=@CODUSU AND STAEXE = 1 AND CODACE = @CODACE AND NUMTOK <> @NUMTOK)
			   SET @RETURN_VALUE = @@ROWCOUNT
		END
RETURN @RETURN_VALUE          
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código de Acesso" name="CODACE" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="ID do Token" name="NUMTOK" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </methods>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="" desc ="Seleciona todos os tokens do usuário">
        <query order="A.DATCAD DESC">
          <![CDATA[SELECT NUMTOK,CODACE, ISNULL(B.DSCTAB,'') AS DSCACE, CODUSU,STAEXE, CASE WHEN STAEXE=1 THEN 'ATIVO' ELSE 'INATIVO' END AS DSCEXE, A.DATCAD,USRHST,LIFTOK,URLTOK,TOKUSU,DATINI,DATVAL FROM TBWRTTOK (NOLOCK) A  LEFT JOIN TBTABGER (NOLOCK) B ON (60 = B.NUMTAB AND A.CODACE=B.KEYCOD)]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectallcommand>
  </item>

  <item create="true"  id="29" name="TBREGBOL" api="true" apiname="Boleto" friendlyname="BankSlip" modelversion="3">
    <UpdateKey>Identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>True</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>


    <objectproperty>
      <parameters>
        <parameter input="true" apply="true" desc ="ID da Transação" name="NIDTRA" type="System.String" default="" output="" null="false"/>
        <parameter input="true" apply="true" desc ="Lote Financeiro" name="LOTFIN" type="System.Int32" default="" output="" null="false"/>
        <parameter input="true" apply="true" desc ="ID do Boleto" name="NIDBOL" type="System.Int32" default="" output="" null="false"/>
        <parameter input="true" apply="true" desc ="Código da Tarifa" name="CODTAR" type="System.Int16" default="" output="" null="false"/>
      </parameters>
    </objectproperty>

    <objectclass>
      <item script="true" alias="A." sql="" method="SlipTransaction" return="int" returnmode="1" procname="" desc ="Objeto de Retenção de Informações de Boletos para extração de informações bancárias" returnvalue="1">
        <query>
          <![CDATA[
SELECT TOP 1 NIDBOL,BOLANT,             
    A.STAREC, VIAPGT,           
    A.UPDUSU, KEYBOL, NIDTOK, NUMDEL, ORGBOL, TIPBOL, NOMCED, NOMSAC, SACMAL CEDMAL, SACMAL, CODCMF CPFCED, CODCMF CPFSAC,      
    USUPRO, A.CODUSU, PRCBOL, URLRET, VLRBOL, RSPTAR, VLRBOL VLRIMP, VLRTAR,             
    VLRTDP, PRCJUR, PRCMUL, DATREG, 
    DATEMI, DATVCT, DATPGT, DATVAL, 
    CODRET, STABOL, NIDTRB, ACPCRC,             
    ACPBOL, ACPDEB, ACPMAL, ACPSMS,             
    MAXPCL, ALTCPG, NIDRTR, APLTDP,           
    APLTOW, INSBC1, INSBC2, INSBC3,      
    CODCEP, CODUFE, DSCBAI, DSCCID,    
    DSCEND, NUMEND, DSCCPL, ' ' IMGLOG,  
    CODESP, NUMCTR, NIDCTA, NUMBCO, NUMAGE, NUMCCT, NUMDVE, CODCMF, '' NOMBNF
	FROM TBREGBOL (NOLOCK) A
INNER JOIN TBCADEND (NOLOCK) B ON (B.CODUSU = A.CODUSU)
      
        ]]>

        </query>
      </item>
      <item script="true" alias="A." sql="" method="SlipsPaid" return="int" returnmode="1" procname="" desc ="Objeto de Retenção de Informações de Boletos Pagos" returnvalue="1">
        <query>
          <![CDATA[
 DECLARE @RESULT TABLE
      (PAGNRO SMALLINT,
       USUCED INT,
			 NOMUSU VARCHAR(70),
					  NIDBOL INT,
					  DATEMI DATETIME,
					  DATVCT DATETIME NULL,
					  DATPGT DATETIME NULL,
					  NOMSAC VARCHAR(70),
					  CODCMF VARCHAR(15),
					  STABOL SMALLINT,
					  DSCSTA VARCHAR(50),
					  VLRPAG MONEY DEFAULT 0,
					  VLRBOL MONEY DEFAULT 0,
					  VLRTED MONEY DEFAULT 0,
            PAGMAX SMALLINT)
SELECT * FROM @RESULT            
          ]]>
        </query>
      </item>

      <item script="true" alias="A." sql="" method="VoucherPaid" return="int" returnmode="1" procname="" desc ="Objeto de Retenção de Informações de Boletos Pagos" returnvalue="1">
        <query>
          <![CDATA[
SELECT top 1 CAST(0 AS smallint) AS PAGNRO
	  ,NIDBOL, VLRPAG
	  ,A.DATCAD
	  ,A.DATVCT
	  ,A.DATPGT
	  ,A.NOMSAC
	  ,A.CODCMF
	  ,B.CODSTA
	  ,C.DSCSTA
    ,CAST(0 AS SMALLINT) AS PAGMAX
 FROM TBREGBOL (NOLOCK) A
INNER JOIN TBCADSTA (NOLOCK) B ON (B.CODSTA = A.STABOL)
INNER JOIN TBCADSTA (NOLOCK) C ON (C.CODSTA = B.STAREF)
WHERE A.STAREC=2]]>
        </query>

      </item>
    </objectclass>

    <insertcommand key="Identity" exceptionparamns="'DATCAD','DATUPD', 'NIDBOL','KEYBOL'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[
SET @RETURN_VALUE=0        
IF(@RETURN_VALUE=0)
   BEGIN
      EXEC PRREGBOLVALBOL @CODUSU, 1, @TIPBOL, @VLRBOL, @RETURN_VALUE OUTPUT
   END
SET @ACPBOL = 1  -- Define para sempre permitir pagamento por boleto
      ]]>
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
        <return value="-3" message="" error="SLIPMAXIMUMACHIEVEDVALUE"/>
        <return value="-4" message="" error="SLIPMAXIMUMACHIEVEDUNIT"/>
        <return value="-5" message="" error="SLIP_MINVALUE"/>
        <return value="-6" message="" error="SLIP_MAXVALUE"/>
      </returns>
    </insertcommand>
    <updatecommand key="Identity" exceptionparamns="'DATCAD','KEYBOL'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[SET @DATUPD =GETDATE();]]>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </updatecommand>
    <selectcommand>
      <item script="true" alias="A." sql="" type="" method="Select" return="BankSlip" procname="" desc ="Seleciona o registro de acordo com o id de registro">
        <query>
          <![CDATA[SELECT A.* FROM TBREGBOL (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Boleto" name="NIDBOL" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="select TOP 1 * from vwbol246" method="GetSlip246" return="Boleto246" procname="PRREGBOLSEL246" desc ="Extrai o boleto especificamente para os parâmetros do banco ABC (246)">
        <query>
          <![CDATA[
    /*
  **********************************************************************************************************************************************
   NÚMERO SEQUENCIAL DO BOLETO : OBTIDO ATRAVES DA TABELA TBNXTNUM (CODTBI = 22)
   PARAMETROS DE CONFIGURAÇÃO DO BOLETO
	     OBTIDO ATRAVÉS DA CONFIGURACAO DA TABELA GERAL
		   CÓDIGO DE TABELA 949 
		   CÓDIGO CHAVE       1
		   O CAMPO KEYTXT DEFINE O CODIGO DO CLIENTE
		   O CAMPO DSCTAB DEFINE O CODIGO Identificação do header CNAB da
			operação à qual o cliente solicita que o título seja incluído. Permitido apenas para operações de produtos da família TER – Cobrança de Terceiros (Cobranças Simples e Cobranças de legados do próprio banco
      
   Ajustes 
      20/03/2020 - AJUSTE DO CODIGO DE ATRIBUTO DE ENDERECO
      14/04/2020 - AJUSTE DA PROCEDURE DE PROXIMO NUMERO
  **********************************************************************************************************************************************      
*/
DECLARE @CODATR INT
DECLARE @CODUSU INT
DECLARE @NIDBOL INT
DECLARE @CODVER SMALLINT
DECLARE @NOSNUM INT
DECLARE @NUMAGE VARCHAR(11)
DECLARE @NUMBCO VARCHAR(4)
DECLARE @DV VARCHAR(1)
DECLARE @CODCLI VARCHAR(10)
DECLARE @NUMCTH VARCHAR(100)
DECLARE @TIPEND TINYINT
DECLARE @CODCMF VARCHAR(15)


SELECT @NIDBOL = NIDBOL, @NOSNUM=NOSNUM FROM TBREGBOL (NOLOCK) WHERE KEYBOL= @KEYBOL
SELECT @CODUSU = CODUSU FROM TBREGBOL (NOLOCK) WHERE NIDBOL = @NIDBOL

/* AJS20032020 */
SELECT @CODATR = CODATR, @CODCMF = LTRIM(RTRIM(ISNULL(CODCMF,''))) FROM TBCADUSU (NOLOCK) WHERE CODUSU=@CODUSU

SET @TIPEND=2
IF(LEN(@CODCMF)=11)
   SET @TIPEND = 1

DECLARE @XUCADEND TABLE ( STAREC TINYINT DEFAULT 1
						 ,REGATV TINYINT DEFAULT 1
						 ,CODUSU INT DEFAULT 0
				   		 ,TIPEND TINYINT DEFAULT 1
					     ,TIPLOG TINYINT DEFAULT 1
					     ,DSCEND VARCHAR(70) DEFAULT ''
					     ,DSCCPL VARCHAR(70) DEFAULT ''
					     ,NUMEND INT DEFAULT 0
					     ,DSCCID VARCHAR(40) DEFAULT ''
				   	     ,DSCBAI VARCHAR(40) DEFAULT ''
				         ,CODCEP VARCHAR(8)
				         ,CODPAI SMALLINT
				         ,CODUFE VARCHAR(2)
				         ,CODATR INT
				         ,USUATR INT)

DECLARE @CODEND INT =0
SELECT @CODEND = COALESCE(CODEND,0)
  FROM TBCADEND(NOLOCK) F
 WHERE F.STAREC=1 
   AND F.TIPEND=@TIPEND  
   AND F.REGATV=1 
   AND RIGHT('00000000' + LTRIM(RTRIM(ISNULL(F.CODCEP,''))),8)<>'00000000'
   AND LTRIM(RTRIM(ISNULL(F.CODUFE,'')))<>''
   AND F.CODATR=@CODATR
   AND F.CODUSU=@CODUSU

IF (@CODEND=0)
	BEGIN
		INSERT INTO @XUCADEND (STAREC,REGATV,CODUSU,TIPEND,TIPLOG,DSCEND,DSCCPL,NUMEND,DSCCID,DSCBAI,CODCEP,CODPAI,CODUFE,CODATR,USUATR)
		SELECT                STAREC,REGATV,@CODUSU,@TIPEND,TIPLOG,DSCEND,DSCCPL,NUMEND,DSCCID,DSCBAI,CODCEP,CODPAI,CODUFE,CODATR,USUATR               
		  FROM TBCADEND (NOLOCK) F
		 WHERE F.CODUSU= 54 
		   AND F.STAREC = 1 
		   AND F.TIPEND=2  
		   AND 1 = F.REGATV
    END
ELSE	
	BEGIN
		INSERT INTO @XUCADEND (STAREC,REGATV,CODUSU,TIPEND,TIPLOG,DSCEND,DSCCPL,NUMEND,DSCCID,DSCBAI,CODCEP,CODPAI,CODUFE,CODATR,USUATR)
		SELECT                STAREC,REGATV,CODUSU,@TIPEND,TIPLOG,DSCEND,DSCCPL,NUMEND,DSCCID,DSCBAI,CODCEP,CODPAI,CODUFE,CODATR,USUATR               
		  FROM TBCADEND (NOLOCK) F
		 WHERE F.CODEND = @CODEND
	END

/* **************************************************************************** 
   14/04/2020 - Substituida a execucao da procedure 'sps_proximonumero_selecionar'
 ****************************************************************************  */

IF(@APLSEQ=1)
    BEGIN
		  EXEC PRGETNXTNUM 22, @NOSNUM OUTPUT

			UPDATE TBREGBOL 
			   SET CODESP = @CODESP,
             NUMCTR = @NUMCTR,
             NOSNUM = @NOSNUM
			WHERE NIDBOL = @NIDBOL
		END

SELECT @NUMAGE = RIGHT('0000' + LTRIM(RTRIM(SUBSTRING(NUMAGE,1,4))),4), @NUMBCO = RIGHT('0000' + LTRIM(RTRIM(NUMBCO)),4) FROM TBCADCTA (NOLOCK) WHERE CODUSU=246

SELECT @CODCLI = LTRIM(RTRIM(KEYTXT)), @NUMCTH = DSCTAB FROM TBTABGER (NOLOCK) WHERE NUMTAB=949 AND KEYCOD=1

SELECT @NUMCTR = NUMCTR, @CODUSU = CODUSU FROM TBREGBOL (NOLOCK) WHERE NIDBOL = @NIDBOL

SELECT @DV = dbo.NossoNumero246(@NUMAGE + @NUMCTR + RIGHT('0000000000' + CONVERT(VARCHAR(10),@NOSNUM),10) )
			
SELECT @CODCLI AS CODCLI,
			@NUMCTH AS NUMCTH,
			NUMCTR,
			RIGHT('0000000000' + CONVERT(VARCHAR(10),NOSNUM),10) + @DV AS NOSNUM,
			@NUMBCO AS CODBCO,
			'' AS CODMBC,
			'' AS NOSNBC,
			CODESP,
			(A.VLRBOL + CASE WHEN A.RSPTAR=2 THEN A.VLRTAR ELSE 0 END  + CASE WHEN A.APLTDP=2 THEN VLRTDP ELSE 0 END ) VLRBOL,

			0 AS VLRABT,
			FORMAT(A.DATEMI,'dd/MM/yyyy') DATEMI,
			FORMAT(A.DATVCT,'dd/MM/yyyy') DATVCT,
			CONVERT(VARCHAR(11),A.NIDBOL) AS NIDBOL,
			'NAO' AS DSCACT,
			LTRIM(RTRIM(REPLACE(REPLACE(REPLACE(CASE WHEN ISNULL(A.CODCMF,'')= '' THEN SAC.CODCMF ELSE A.CODCMF END,'/',''),'-',''),'.',''))) AS CPFSAC,
			CASE WHEN LEN(REPLACE(REPLACE(REPLACE( CASE WHEN ISNULL(A.CODCMF,'')= '' THEN SAC.CODCMF ELSE A.CODCMF END,'/',''),'-',''),'.',''))=11 THEN '1' ELSE '2' END AS TIPPES,
	    	SAC.NOMUSU AS NOMSAC,
			LTRIM(RTRIM(ISNULL(F.DSCEND,''))) + CASE WHEN ISNULL(F.NUMEND,'')<>'' THEN ',' + CONVERT(VARCHAR(6),F.NUMEND) ELSE '' END AS DSCEND,
			ISNULL(F.DSCBAI,'') DSCBAI,
			ISNULL(F.DSCCID,'') DSCCID,
			ISNULL(F.CODUFE,'') CODUFE,
			ISNULL(F.CODCEP,'') CODCEP,
			CASE WHEN ISNULL(A.SACMAL,'')= '' THEN ISNULL(H.DSCEND,'') ELSE A.SACMAL END AS SACMAL,
			ISNULL(I.NUMDDD,0) NUMDDD,
			ISNULL(I.NUMTEL,'') NUMTEL,
			'' AS CPOLIV,
			'' AS TIPCED,
			'' AS CPFCED,
			'' AS CEDNOM,
			'' AS CEDEND,
	    	'' AS CEDBAI,
			'' AS CEDCEP,
			'' AS CEDCID,
			'' AS CEDUFE,
	  		ISNULL(A.INSBC1,'') INSBC1,
	  		ISNULL(A.INSBC2,'') INSBC2,
	  		ISNULL(A.INSBC3,'') INSBC3,
	  		'' INSBC4,
	  		'' INSBC5,
	  		'0' AS DSCCD1,
	  		0 AS DSCVL1,
	  		0 AS DSCTX1,
	  		'' AS DSCDT1,
	  		'0' AS DSCCD2,
	  		0 AS DSCVL2,
	  		0 AS DSCTX2,
	  		'' AS DSCDT2,
	  		'0' AS DSCCD3,
	  		0 AS DSCVL3,
	  		0 AS DSCTX3,
	  		'' AS DSCDT3,
	  		'0' AS CODMUL,
	  		'' AS DATMUL,
	  		0 AS TXAMUL,
	  		0 AS VLRMUL,
	  		'3' AS CODMOR,
	  		'' AS DATMOR,
	  		0 AS TXAMOR,
	  		0 AS VLRMOR,
	  		'NAO' AS HASAGE,
	  		'' AS TIPAGE,
	  		'' AS CRIDIA,
	  		0 AS NUDAGE,
	  		'' AS CODMOE,
	  		'N' AS INDPAG,
	  		0 AS NUMPCL,
	  		'2' AS VLRPMI,
	  		(A.VLRBOL + CASE WHEN A.RSPTAR=2 THEN A.VLRTAR ELSE 0 END  + CASE WHEN A.APLTDP=2 THEN VLRTDP ELSE 0 END ) AS VLRTMI,
	  		'2' AS  VLRPMA,
			(A.VLRBOL + CASE WHEN A.RSPTAR=2 THEN A.VLRTAR ELSE 0 END  + CASE WHEN A.APLTDP=2 THEN VLRTDP ELSE 0 END ) AS VLRTMA, 	  		
	  		'3' AS RECDIV,
			A.LINDIG,
			A.IMGSAV,
			A.DATREG,
			ISNULL(IMG.IMGSTR,'') IMGSTR
	  FROM TBREGBOL (NOLOCK) A
 	 left JOIN TBUSUPRO (NOLOCK) B 
 	    ON (A.USUPRO = B.USUPRO)
	 LEFT JOIN TBUSUCFG (NOLOCK) C 
	    ON (A.CODUSU = C.USUCFG AND 2 = C.NIVCFG)
	 left JOIN TBCADUSU (NOLOCK) SAC 
	 	ON (A.CODUSU = SAC.CODUSU)
	 left JOIN TBCADUSU (NOLOCK) CED 
	    ON (A.USUCED = CED.CODUSU)
	  LEFT JOIN @XUCADEND  F 
	  	ON (A.CODUSU = F.CODUSU)
	  LEFT JOIN TBCADCTO (NOLOCK) I 
	    ON (A.CODUSU = I.CODUSU AND 3 = I.TIPCTO AND 1 = I.REGATV AND 1 = I.STAREC)
	  LEFT JOIN TBCADEND (NOLOCK) H 
	    ON (A.CODUSU = H.CODUSU AND 3 = H.TIPEND AND 1 = H.REGATV AND 1 = H.STAREC)
	  LEFT JOIN TBIMGBOL (NOLOCK) IMG 
	    ON (A.NIDBOL = IMG.NIDBOL)
	 WHERE A.CODVER=2
	   AND A.STAREC=1
	   AND A.NIDBOL=@NIDBOL
	   AND F.CODCEP <>'00000000'
        ]]>
        </query>
        <parameters>
          <parameter input="true" apply="false" desc ="Chave do Boleto" name="KEYBOL" type="System.Guid" default="" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Espécie" name="CODESP" type="System.String" size="3" default="" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Carteira" name="NUMCTR" type="System.String" size="3" default="" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Efetuar Registro de Sequencia" name="APLSEQ" type="System.Byte"  default="0" output="" null="false"/>
        </parameters>
      </item>
      <item script="false" alias="A." sql="SELECT TOP 1 * FROM XLREGBOL" method="GetSlip" return="SlipTransaction" procname="PRREGBOLSELPRT" desc ="Extrai o boleto dentro dos parâmetros do banco Bradesco">
        <query>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Chave do Boleto" name="KEYBOL" type="System.Guid" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="SELECT TOP 1 * FROM TXBOLVAL" method="GetNextValue" return="NextValueSlip" procname="PRREGBOLNXTVAL" desc ="Obtêm o próximo valor para um boleto de Recarga por TED">
        <query>
          <![CDATA[
    /*
      REMOVIDA CONDICAO DE CHAVE ONDE ERA INCLUIDO O CODUSU DO SOLICITANTE EM 26/3/2020 POR ANDRE
    */
DECLARE @DATFIN DATETIME
DECLARE @DATATU DATETIME = GETDATE()
DECLARE @NUMDAY INT=1
IF(EXISTS(SELECT 1 FROM TBTABGER (NOLOCK) WHERE NUMTAB=75 AND KEYCOD=1))
   SELECT @NUMDAY = ISNULL(NUMREF,1) FROM TBTABGER (NOLOCK) WHERE NUMTAB=75 AND KEYCOD=1
   
IF(EXISTS(SELECT 1 FROM TXBOLVAL WHERE NIDCTA=@NIDCTA AND VLRBAS=@VLRBAS))
  BEGIN
	  SELECT @DATFIN = DATFIN FROM TXBOLVAL WHERE NIDCTA=@NIDCTA AND VLRBAS=@VLRBAS
		IF(@DATATU>@DATFIN)
		  BEGIN
			  UPDATE TXBOLVAL 
				   SET DATINI = @DATATU, 
				       DATFIN = DATEADD(hh,@NUMDAY,@DATATU),
						   LSTVAL = @VLRBAS
			   WHERE NIDCTA=@NIDCTA AND VLRBAS=@VLRBAS
			END
	  END
  ELSE
		INSERT INTO TXBOLVAL (CODUSU, NIDCTA, VLRBAS,DATINI, DATFIN, LSTVAL) VALUES (0, @NIDCTA, @VLRBAS, @DATATU, DATEADD(HH,@NUMDAY,@DATATU), @VLRBAS)
	
	DECLARE @VAL1 MONEY
	SELECT @VAL1=MIN(LSTVAL)-0.01 FROM TXBOLVAL WHERE NIDCTA=@NIDCTA AND VLRBAS=@VLRBAS
	UPDATE TXBOLVAL SET LSTVAL = @VAL1 FROM TXBOLVAL WHERE NIDCTA=@NIDCTA AND VLRBAS=@VLRBAS
	SELECT * FROM TXBOLVAL WHERE NIDCTA=@NIDCTA AND VLRBAS=@VLRBAS
]]>
        </query>
        <parameters>
          <parameter input="true" apply="false" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="false" desc ="ID da Conta Corrente" name="NIDCTA" type="System.Int32"  default="" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Valor Base do Boleto" name="VLRBAS" type="System.Double" default="" output="" null="false"/>
        </parameters>
      </item>

    </selectcommand>

    <methods>

      <item script="true" alias="A." sql="" type="DataTableList" method="VoucherPaid" return="VoucherPaid" procname="PRREGBOLLSTPAY0" desc ="Obtêm a lista de Boletos pagos de acordo com os parâmetros informados">
        <query merge="true">
          <![CDATA[
          
	IF(@DATMOV1='')
	   SET @DATMOV1=NULL;
	IF(@DATMOV2='')
	   SET @DATMOV2=NULL;

    DECLARE @RESULT TABLE (PAGNRO SMALLINT, 
                 NIDBOL INT, 
				 VLRPAG MONEY, 
				 DATCAD DATETIME,
				 DATVCT DATE,
				 DATPGT DATE,
				 NOMSAC VARCHAR(100),
				 CODCMF VARCHAR(25),
				 CODSTA SMALLINT,
				 DSCSTA VARCHAR(70))

INSERT INTO @RESULT (PAGNRO, NIDBOL, VLRPAG, DATCAD, DATVCT, DATPGT,NOMSAC,CODCMF,CODSTA,DSCSTA)
  SELECT PAGNRO = ((((ROW_NUMBER() OVER(ORDER BY NIDBOL DESC))-1)/@PAGSIZ))+1
	  ,A1.NIDBOL, A1.VLRPAG
	  ,A1.DATCAD
	  ,A1.DATVCT
	  ,A1.DATPGT
	  ,LTRIM(RTRIM(A1.NOMSAC))
	  ,dbo.FormatCMF(A1.codcmf) AS CODCMF
	  ,B1.STAREF AS CODSTA
	  ,C1.DSCSTA
 FROM TBREGBOL (NOLOCK) A1
INNER JOIN TBCADSTA (NOLOCK) B1 ON (B1.CODSTA = A1.STABOL)
INNER JOIN TBCADSTA (NOLOCK) C1 ON (C1.CODSTA = B1.STAREF)
WHERE ((@TIPREL = 1 AND A1.STAREC IN (1,2)) 
   OR (@TIPREL= 2 AND A1.STAREC=2))
  AND (@TIPBOL IS NULL OR A1.TIPBOL=@TIPBOL)
  AND A1.USUCED=@USUCED
  AND ( (@DATMOV1 IS  NULL AND @DATMOV2 IS NULL) or (A1.DATCAD BETWEEN @DATMOV1 AND @DATMOV2))    
ORDER BY A1.NIDBOL DESC

DECLARE @PAGMAX INT 
SELECT @PAGMAX = MAX(ISNULL(PAGNRO,0)) FROM @RESULT
SELECT A.*, @PAGMAX PAGMAX FROM @RESULT A WHERE(1=1)
]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" omit="true" desc ="Código do Cedente" name="USUCED" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Página" name="PAGNRO" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" apply="false" omit="true" desc ="Data Inicial de Cadastro (yyyyMMdd)" name="DATMOV1" size="20" type="System.String" default="" output="" null="true"/>
          <parameter input="true" apply="false" omit="true" desc ="Data Final de Cadastro (yyyyMMdd HH:mm:ss )"  name="DATMOV2" size="20" type="System.String" default="" output="" null="true"/>
          <parameter input="true" apply="true"  omit="true" desc ="Tipo de Boleto" name="TIPBOL" type="System.Byte" sysnull="true" default="" output="" null="true"/>
          <parameter input="true" apply="false" desc ="Tamanho de Página"  name="PAGSIZ" type="System.Int32" default="100" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Tipo de Relatório (1 - Inclusões, 2 - Pagamentos)"  name="TIPREL" type="System.Int32" default="2" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" type="DataTableList" method="SlipsPaid" return="SlipsPaid" returnmode="1" procname="PRREGBOLLSTPAY1" desc ="Obtêm a lista de boletos pagos de acordo com o tipo de boleto" returnvalue="1">
        <query merge="true">
          <![CDATA[
  IF(@DATMOV1='')
	   SET @DATMOV1=NULL;
	ELSE
	   SET @DATMOV1 = DATEADD(dd,-1,@datmov1)
	IF(@DATMOV2='')
	   SET @DATMOV2=NULL;
	ELSE
	   SET @DATMOV2 = DATEADD(dd,+1,@datmov2)

	DECLARE @PAGMAX SMALLINT
	DECLARE @RESULT TABLE(PAGNRO SMALLINT,
                      USUCED INT,
					  NOMUSU VARCHAR(70),
					  NIDBOL INT,
					  DATEMI DATETIME,
					  DATVCT DATETIME NULL,
					  DATPGT DATETIME NULL,
					  NOMSAC VARCHAR(70),
					  CODCMF VARCHAR(15),
					  STABOL SMALLINT,
					  DSCSTA VARCHAR(50),
					  VLRPAG MONEY DEFAULT 0,
					  VLRBOL MONEY DEFAULT 0,
					  VLRTED MONEY DEFAULT 0)

	INSERT INTO @RESULT (PAGNRO,USUCED,NOMUSU,NIDBOL,DATEMI,DATVCT,DATPGT,NOMSAC,CODCMF,STABOL,DSCSTA,VLRPAG,VLRBOL,VLRTED)
	SELECT PAGNRO = ((((ROW_NUMBER() OVER(ORDER BY NIDBOL DESC))-1)/50))+1
            ,USUCED
            ,D1.NOMUSU
            ,NIDBOL
            ,A1.DATEMI
            ,DATVCT
            ,DATPGT
            ,NOMSAC = CASE WHEN E1.NOMUSU IS NULL THEN A1.NOMSAC ELSE E1.NOMUSU END
            ,CODCMF = CASE WHEN E1.CODCMF IS NULL THEN A1.CODCMF ELSE E1.CODCMF END 
            ,A1.STABOL
            ,B1.DSCSTA
            ,A1.VLRPAG
            ,CASE WHEN A1.RSPTAR=1 THEN A1.VLRBOL ELSE (VLRBOL+VLRTAR) END + CASE WHEN (APLTDP=2) THEN VLRTDP ELSE 0 END AS VLRBOL
            ,A1.VLRTED
       FROM TBREGBOL (NOLOCK) A1
      INNER JOIN TBCADSTA (NOLOCK) B1 ON (B1.CODSTA = A1.STABOL)
      INNER JOIN TBCADUSU (NOLOCK) D1 ON (D1.CODUSU = A1.USUCED)
       LEFT JOIN TBCADUSU (NOLOCK) E1 ON (E1.CODUSU = A1.CODUSU)    
      WHERE A1.STAREC NOT IN (0,13)
        AND A1.TIPBOL=@TIPBOL
        AND A1.USUCED = @USUCED
        AND ( (@DATMOV1 IS NULL AND @DATMOV2 IS NULL) OR (A1.DATEMI BETWEEN @DATMOV1 AND @DATMOV2))

	SELECT @PAGMAX=MAX(ISNULL(PAGNRO,0)) FROM @RESULT
	SELECT *,@PAGMAX PAGMAX FROM @RESULT A WHERE (1=1)
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" omit="true" desc ="Tipo de Boleto" name="TIPBOL" type="System.Byte" default="" output="" null="true"/>
          <parameter input="true" apply="true" omit="true" desc ="Código do Cedente" name="USUCED" type="System.Int32" default="" output="" null="true"/>
          <parameter input="true" apply="true" omit="true" desc ="Data Inicial de Movimento (yyyyMMdd)" name="DATMOV1" size="10" type="System.String" default="" output="" null="false"/>
          <parameter input="true" apply="true" omit="true" desc ="Data Final de Movimento (yyyyMMdd HH:mm:ss )"  name="DATMOV2" size="10" type="System.String" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Página" name="PAGNRO" type="System.Int16" default="" output="" null="true"/>
          <parameter input="true" apply="true" omit="true" desc ="Tamanho de Página" name="PAGSIZ" type="System.Int16"  sysnull="" default="50" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="ClosePaymentSlip" return="int" returnmode="1" procname="PRREGBOLCLOPAYSLP" desc ="Fecha um registro de baixa de boleto" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=1          
UPDATE TBBXABOL 
   SET LOTFIN = @LOTFIN, 
       STAREC =@STAREC, 
       UPDUSU =@UPDUSU, 
       DATUPD =GETDATE() 
 WHERE NIDRBB =@NIDRBB        
 RETURN @RETURN_VALUE
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Lote Financeiro" name="LOTFIN" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Id do Registro de Baixa do Boleto" name="NIDRBB" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Status do Registro" name="STAREC" type="System.Byte" default="9" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="CloseSlipProcess" return="int" returnmode="1" procname="PRREGBOLCLOSLPPRC" desc ="Executa instruções de fechamento de Boleto" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE = 1
IF(@LOTFIN<=0)
   SET @RETURN_VALUE = -1
IF(@UPDUSU<=0)
   SET @RETURN_VALUE = -2
  
BEGIN TRANSACTION   

IF(@RETURN_VALUE=1)
  BEGIN
    BEGIN TRY
	    UPDATE TBGSTLOT
   	     SET STALOT = 44,
		         DATUPD = GETDATE(),
		         UPDUSU = @UPDUSU
	     WHERE NIDBOL IN (SELECT NIDBOL FROM TBBXABOL (NOLOCK) WHERE LOTFIN = @LOTFIN )
	       AND STALOT <> 44

	    UPDATE TBCTRMEN 
   	     SET STAMEN = 262,
		         STAREC = 14,
		         DATUPD = GETDATE(),
		         UPDUSU = @UPDUSU,
		         LOTFIN = @LOTFIN
	     WHERE NIDBOL IN (SELECT NIDBOL FROM TBBXABOL (NOLOCK) WHERE	LOTFIN = @LOTFIN AND TIPREG = 3	AND NIDBOL IN(SELECT NIDBOL FROM TBREGBOL (NOLOCK)))
	       AND STAMEN = 261

	    UPDATE TBCTRMEN
   	     SET STAMEN = 262,
		         STAREC = 15,
			       DATUPD = GETDATE(),
			       UPDUSU = @UPDUSU,
			       LOTFIN = @LOTFIN
	     WHERE NIDBOL IN (SELECT NIDBOL FROM TBBXABOL WHERE	LOTFIN = @LOTFIN AND TIPREG = 4 AND NIDBOL IN(SELECT NIDBOL FROM TBREGBOL (NOLOCK)))
		     AND STAMEN = 261

	    UPDATE TBCTRMEN
   	     SET STAMEN = 272, 
		         STAREC = 14,
			       DATUPD = GETDATE(),
			       UPDUSU = @UPDUSU,
			       LOTFIN = @LOTFIN
	     WHERE NIDBOL IN (SELECT NIDBOL 
					                FROM TBBXABOL WHERE		LOTFIN = @LOTFIN 
									         AND TIPREG IN (1,2)	
									         AND NIDBOL IN(SELECT NIDBOL FROM TBREGBOL (NOLOCK)))
		     AND STAMEN = 261

	    UPDATE TBLRECAD
   	     SET STAREG = CASE WHEN ISRPOS = 1 THEN 99 ELSE 25 END,
		         DATUPD = GETDATE(),
		         UPDUSU = @UPDUSU
	     WHERE NIDBOL IN (SELECT NIDBOL 
					                FROM TBBXABOL 
					               WHERE LOTFIN = @LOTFIN 
						               AND TIPREG IN (1,2)	
						               AND NIDBOL IN(SELECT NIDBOL FROM TBREGBOL (NOLOCK)))
	    UPDATE TBREGROT
         SET STAACT = 206,
				     DATUPD = GETDATE(),
				     STAREC = 2,
				     UPDUSU = @UPDUSU
	     WHERE NUMLOT IN (SELECT NIDLOT FROM TBGSTLOT (NOLOCK) WHERE NIDBOL IN(SELECT NIDBOL FROM TBBXABOL WHERE LOTFIN = @LOTFIN))
		     AND CODACT=10
			
	    UPDATE TBCADUSU WITH (UPDLOCK)
		     SET STAUSU = 61,
				     DATUPD = GETDATE(),
	           UPDUSU = @UPDUSU
	     WHERE CODUSU IN (SELECT USUCED FROM TBBXABOL WHERE LOTFIN = @LOTFIN AND NIDBOL IN (SELECT NIDBOL FROM TBREGBOL WHERE TIPBOL=8))
		     AND STAUSU <> 61

    END TRY

    BEGIN CATCH
      SET @RETURN_VALUE=-1
    END CATCH
  END

IF(@RETURN_VALUE=1)
   COMMIT TRANSACTION
ELSE
   ROLLBACK TRANSACTION

RETURN @RETURN_VALUE
        
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Lote Financeiro" name="LOTFIN" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="SLIPINVALIDID"/>
          <return value="-2" message="" error="INVALIDUSERUPDATE"/>
          <return value="-3" message="" error="EMPTYPROCESS"/>
        </returns>
      </item>
      <item script="true" alias="A." sql="" method="ChangeStatus" return="int" returnmode="1" procname="PRREGBOLCHGSTA" desc ="Altera o Status de Registro de um boleto" returnvalue="1">
        <query>
          <![CDATA[
    SET @RETURN_VALUE=0;
    IF(@NIDBOL <= 0)
       SET @RETURN_VALUE=-1
    IF(@STAREC <= -1)
       SET @RETURN_VALUE=-2
    IF(@UPDUSU <= 0)
       SET @RETURN_VALUE=-3
       
    IF(@STAREC=13)
      SET @STABOL=3;
      
    IF(@RETURN_VALUE=0)
      BEGIN
        UPDATE TBREGBOL 
           SET STAREC=@STAREC, 
               UPDUSU=@UPDUSU,
               STABOL=@STABOL
         WHERE NIDBOL=@NIDBOL AND STAREC<>@STAREC
        IF(@@ERROR=0)
          BEGIN
            DECLARE @AUDDSC VARCHAR(100) = N'ALTEROU O STATUS DO BOLETO PARA ' + CAST(@STAREC AS VARCHAR(3))
            INSERT INTO TBAUDDAT (UPDUSU, AUDDAT, AUDKEY, AUDIDR, AUDIMS, AUDDSC, NIDTOK, NUMIPA) VALUES (@UPDUSU,GETDATE(),41,@NIDBOL,2,@AUDDSC,0,@NUMIPA)
            SET @RETURN_VALUE=@NIDBOL
          END
      END     
    RETURN @RETURN_VALUE
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Boleto" name="NIDBOL" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Status do Registro" name="STAREC" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="ID do Host Solicitante" name="NUMIPA" type="System.String" size="50" default="" output="" null="false"/>
          <parameter input="true" desc ="Status do Boleto" name="STABOL" type="System.Int16"  default="1" output="" null="false"/>
        </parameters>
        <returns>
          <return value="0" message="" error="EMPTYPROCESS"/>
          <return operator=">" value="0" message="" error="OK"/>
          <return value="-1" message="" error="SLIPINVALIDID"/>
          <return value="-2" message="" error="STATUSINVALIDID"/>
          <return value="-3" message="" error="INVALIDUSERUPDATE"/>
        </returns>
      </item>
      <item script="true" alias="A." sql="" method="ChangeConciliation" return="int" returnmode="1" procname="PRREGBOLCHGCNC" desc ="Altera o Indicador de Conciliação de un Boleto" returnvalue="1">
        <query>
          <![CDATA[
    SET @RETURN_VALUE=0;
    IF(@NIDBOL <= 0)
       SET @RETURN_VALUE=-1
    IF(@UPDUSU <= 0)
       SET @RETURN_VALUE=-3
    IF(@RETURN_VALUE=0)
      BEGIN
        UPDATE TBREGBOL SET INDCNC=@INDCNC, UPDUSU=@UPDUSU WHERE NIDBOL=@NIDBOL
        IF(@@ERROR=0)
          BEGIN
            DECLARE @AUDDSC VARCHAR(100) = N'ALTEROU O STATUS DO BOLETO PARA ' + CAST(@INDCNC AS VARCHAR(10))
            INSERT INTO TBAUDDAT (UPDUSU, AUDDAT, AUDKEY, AUDIDR, AUDIMS, AUDDSC, NIDTOK, NUMIPA) VALUES (@UPDUSU,GETDATE(),41,@NIDBOL,2,@AUDDSC,0,@NUMIPA)
            SET @RETURN_VALUE=@NIDBOL
          END
      END     
    RETURN @RETURN_VALUE
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Boleto" name="NIDBOL" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Indicador de Conciliação" name="INDCNC" type="System.Boolean" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="ID do Host Solicitante" name="NUMIPA" type="System.String" size="50" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="0" message="" error="EMPTYPROCESS"/>
          <return operator=">" value="0" message="" error="OK"/>
          <return value="-1" message="" error="SLIPINVALIDID"/>
          <return value="-3" message="" error="INVALIDUSERUPDATE"/>
        </returns>
      </item>

      <item script="true" alias="A." sql="" method="SetSlipTo" return="int" returnmode="2" procname="PRREGBOLSETCTA" desc ="Atribui o boleto à uma conta virtual (Banco) de cobrança" returnvalue="0">
        <query>
          <![CDATA[
          IF(@NIDCTA>0 AND @NIDBOL>0)
            BEGIN
              UPDATE TBREGBOL SET NIDCTA = @NIDCTA WHERE NIDBOL=@NIDBOL
              SELECT NIDCTA FROM TBREGBOL WHERE NIDBOL=@NIDBOL
            END
          ELSE
              SELECT 0 AS NIDCTA
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Boleto" name="NIDBOL" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="ID da Conta Virtual do Banco Cobrador" name="NIDCTA" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="RegisterSlipPayment" return="int" returnmode="1" procname="PRREGBOLREGBXABOL" desc ="Efetua o registro efetivo de baixa do boleto" returnvalue="1">
        <query>
          <![CDATA[
    SET @RETURN_VALUE = 0
	DECLARE @STABOL SMALLINT
	DECLARE @VIAPGT TINYINT
	DECLARE @DATPGT DATE
	DECLARE @NIDTRB INT
	DECLARE @FILNAM VARCHAR(100)
	DECLARE @LOTFIN INT
	DECLARE @BOLANT BIT
	DECLARE @ALTCPG TINYINT
	DECLARE @NIDRTR INT
	DECLARE @VLRPAG MONEY

  IF(@FRCREC=1 AND @RETURN_VALUE=0)
		BEGIN
			IF(EXISTS(SELECT 1 FROM TBREGBOL (NOLOCK) WHERE NIDBOL=@NIDBOL AND STAREC = @STAREC))
			   SET @RETURN_VALUE = -2
		END
	IF(@RETURN_VALUE=0)
		BEGIN
			IF(NOT EXISTS(SELECT 1 FROM TBBXABOL (NOLOCK) WHERE NIDBOL =@NIDBOL AND TIPBXA=1 AND STAREC=1))
				SET @RETURN_VALUE = -1
		END

	IF(@RETURN_VALUE=0)
		BEGIN
			SELECT  @STABOL =STABOL,
					@VIAPGT =VIAPGT,
					@DATPGT =DATPGT,
					@NIDTRB = NIDTRB,
					@FILNAM = FILNAM,
					@LOTFIN = LOTFIN,
					@BOLANT = BOLANT,
					@ALTCPG = ALTCPG,
					@NIDRTR = NIDRTR,
					@VLRPAG = VLRPAG
			  FROM TBBXABOL 
			 WHERE NIDBOL=@NIDBOL
			   AND TIPBXA=1

			 IF((@VLRPAG IS NULL) OR (@VLRPAG=0))
				SET @RETURN_VALUE=-3
        
			 IF(@RETURN_VALUE=0)
				BEGIN
					UPDATE TBREGBOL 
						SET STAREC = @STAREC,
							STABOL = @STABOL,
							VIAPGT = @VIAPGT,
							DATPGT = @DATPGT,
							DATUPD = GETDATE(),
							NIDTRB = @NIDTRB,
							FILNAM = @FILNAM,
							LOTFIN = @LOTFIN,
							BOLANT = @BOLANT,
							ALTCPG = @ALTCPG,
							NIDRTR = @NIDRTR,
							VLRPAG = @VLRPAG
					  WHERE NIDBOL = @NIDBOL
			  	END

				IF(@@ERROR=0)
					SET @RETURN_VALUE = @NIDBOL
				ELSE
				    SET @RETURN_VALUE =-4
		END
	RETURN @RETURN_VALUE
]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Boleto" name="NIDBOL" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Status de Registro" name="STAREC" type="System.Byte" default="2" output="" null="false"/>
          <parameter input="true" desc ="Forçar Validação do Status Registro" name="FRCREC" type="System.Byte" default="1" output="" null="false"/>
        </parameters>
        <returns>
          <return operator=">" value="0" message="" error="OK"/>
          <return value="-1" message="" error="RECORDNOTFOUND"/>
          <return value="-2" message="" error="SLIPLOWINVALIDRECORD"/>
          <return value="-3" message="" error="SLIPNOVALUELOW"/>
          <return value="-4" message="" error="SLIPFAILUPDATELOW"/>
        
        </returns>
      </item>

      <item script="true" alias="A." sql="" method="RevertLowBillet" return="int" returnmode="1" procname="PRREGBOLREVBXABOL" desc ="Reverte a baixa de boleto" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0

IF(@UPDUSU=0)
   SET @RETURN_VALUE=-4
   
BEGIN TRAN

	IF(@LOTFIN>0 AND @RETURN_VALUE=0)
		BEGIN
			UPDATE TBREGBOL 
			   SET STAREC = 1,
					STABOL = CASE WHEN TIPBOL =8 THEN 4 ELSE 1 END,
					VIAPGT = 1,
					DATPGT = NULL,
					DATUPD = GETDATE(),
					NIDTRB = 0,
					FILNAM = 'BAIXA REVERTIDA',
					LOTFIN = 0,
					BOLANT = 0,
					ALTCPG = 0,
					NIDRTR = 0,
					VLRPAG = 0, UPDUSU=@UPDUSU
		     WHERE NIDBOL IN (SELECT DISTINCT NIDBOL FROM TBREGCCR (NOLOCK) WHERE LOTFIN=@LOTFIN)

			IF(@@ERROR=0)
				BEGIN
					UPDATE TBREGCCR SET STAREC=0, UPDUSU=@UPDUSU
					 WHERE LOTFIN = @LOTFIN
					IF(@@ERROR=0)
						BEGIN						   
							UPDATE TBBXABOL 
							   SET STAREC=13, TIPBXA=0,	TIPREG=0, UPDUSU=@UPDUSU
			                 WHERE NIDBOL IN (SELECT DISTINCT NIDBOL FROM TBREGCCR (NOLOCK) WHERE LOTFIN=@LOTFIN)
              IF(@@ERROR=0)                       
                SET @RETURN_VALUE = 1
              ELSE
	              SET @RETURN_VALUE=-1                       
						END
					ELSE
						SET @RETURN_VALUE=-2
				END
			ELSE
				SET @RETURN_VALUE=-3
		END

IF(@RETURN_VALUE=1)
   COMMIT TRAN
ELSE   
   ROLLBACK TRAN
RETURN @RETURN_VALUE
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Lote Financeiro" name="LOTFIN" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="-1" message="FALHA NA ATUALIZACAO DO REGISTRO DE BAIXA DO BOLETO" error="SLIPFAILUPDATEREVERSELOW"/>
          <return value="-2" message="FALHA NA ATUALIZAÇÃO NO REGISTRO DE CONTA CORRENTE" error="SLIPFAILUPDATEREVERSELOW"/>
          <return value="-3" message="FALHA NA ATUALIZAÇÃO NO REGISTRO DE BOLETO" error="SLIPFAILUPDATEREVERSELOW"/>
          <return value="-4" message="" error="INVALIDUSERUPDATE"/>
        </returns>


      </item>

      <item script="true" alias="A." sql="" method="GetSlipId" return="int" returnmode="2" procname="PRREGBOLGETNUM" desc ="Retorna o ID do Boleto a partir da chave de identificação" returnvalue="0">
        <query>
          <![CDATA[SELECT NIDBOL FROM TBREGBOL (NOLOCK) A WHERE KEYBOL=@KEYBOL]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Chave do Boleto" name="KEYBOL" type="System.Guid" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="AddCodeBar" return="int" returnmode="2" procname="PRREGBOLADDCODBAR" desc ="Grava o código de barras em tabela específica de imagem do boleto" returnvalue="0">
        <query>
          <![CDATA[
          DECLARE @RETURN_VALUE INT =0
          INSERT INTO TBIMGBOL (NIDBOL,CODIMG,IMGSTR ) VALUES (@NIDBOL, @CODIMG, @IMGSTR)
          IF(@@ERROR=0)
              BEGIN
                  UPDATE TBREGBOL SET IMGSAV=1 WHERE NIDBOL=@NIDBOL;
                  SET @RETURN_VALUE = 1
              END
          SELECT @RETURN_VALUE RETURN_VALUE;
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Boleto" name="NIDBOL" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="ID da Imagem" name="CODIMG" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" desc ="Imagem (string)" name="IMGSTR" type="System.String" size="32000" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="ValidateSlip" return="int" returnmode="1" procname="PRREGBOLVALBOL" desc ="Valida a Emissão do Boleto de acordo com a parametrização de configuração do usuário" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE = 0 
DECLARE @QTDBOL INT = 0 
DECLARE @SUMBOL INT = 0 
DECLARE @VALEBO INT = 0 
DECLARE @VLRMAX FLOAT = 0 
DECLARE @QTDMAX INT = 0 
DECLARE @CODTAR INT = 0 	
 /*
  * Verifica o parametro de validação de entrada de boleto (VALEBO)
  */
SELECT @VALEBO = COALESCE(VALEBO, 0) FROM TBUSUCFG (NOLOCK) WHERE USUCFG = @CODUSU AND NIVCFG = @NIVCFG AND STAREC=1

IF(@VALEBO > 0) 
   BEGIN
       SELECT @SUMBOL = SUMBOL,
              @QTDBOL = QTDBOL,
              @VLRMAX = VLRMAX,
              @QTDMAX = @QTDMAX 
         FROM VWSUMBOL (NOLOCK) A 
         WHERE CODUSU = @CODUSU 
           AND TIPBOL = @TIPBOL 
           AND NUMANO = YEAR(GETDATE()) 
           AND NUMMES = MONTH(GETDATE()) 
           AND NIVSUM = @NIVCFG 
            
        IF(@@ROWCOUNT > 0) 
           BEGIN
              if (@VALEBO = 1 OR @VALEBO = 3) 
	               BEGIN
                     IF ((@SUMBOL + @VLRBOL) > @VLRMAX) 
					              SET @RETURN_VALUE =- 3 
                 END
              if (@VALEBO = 2 OR @VALEBO = 3) 
                 BEGIN
                     IF ((@QTDBOL + 1) > @QTDMAX) 
			                  SET @RETURN_VALUE =- 4 
                 END
           END
        IF(@RETURN_VALUE = 0) 
           BEGIN
               SELECT @CODTAR = ISNULL(CODREF, 0) 
                 FROM TBINSBXA (NOLOCK) 
                WHERE TIPBOL = @TIPBOL 
                    AND INSBXA = 15 
                    AND STAREC = 1 
                    AND TIPREG = 1 
           END
        /*  VALOR MINIMO DO BOLETO */
        IF(@RETURN_VALUE = 0 AND @CODTAR > 0) 
              BEGIN
                 SELECT @VLRMAX = ISNULL(VLRINF, 0) 
                   FROM TBCADTAR (NOLOCK) 
                  WHERE USUPRO = @CODUSU 
                    AND NIVTAR = @NIVCFG IF(@@ROWCOUNT > 0 
                    AND @VLRMAX > 0) 
                    BEGIN
                       IF(@VLRBOL < @VLRMAX) 
                        SET @RETURN_VALUE =- 5 
                    END
              END
         /*  VALOR MAXIMO DO BOLETO */
         IF(@RETURN_VALUE = 0 AND @CODTAR > 0) 
              BEGIN
                 SELECT @VLRMAX = ISNULL(VLRMAX, 0) 
                   FROM TBCADTAR (NOLOCK) 
                  WHERE USUPRO = @CODUSU 
                    AND NIVTAR = @NIVCFG IF(@@ROWCOUNT > 0 
                    AND @VLRMAX > 0 ) 
                 BEGIN
                    IF(@VLRBOL > @VLRMAX) 
				              SET @RETURN_VALUE = -6 
                 END
              END
      END
      RETURN @RETURN_VALUE
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Nível de Configuração" name="NIVCFG" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" desc ="Tipo de Boleto" name="TIPBOL" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" desc ="Valor do Boleto" name="VLRBOL" type="System.Double" default="" output="" null="false"/>
        </parameters>

        <returns>
          <return value="0" message="" error="COMPLETED"/>
          <return value="-3" message="" error="SLIPMAXIMUMACHIEVEDVALUE"/>
          <return value="-4" message="" error="SLIPMAXIMUMACHIEVEDUNIT"/>
          <return value="-5" message="" error="SLIP_MINVALUE"/>
          <return value="-6" message="" error="SLIP_MAXVALUE"/>

        </returns>

      </item>


      <!--<item script="true" alias="A." sql="" method="UpdateSlipWithDefaults" return="int" returnmode="1" procname="PRREGBOLUPDDFT" desc ="Atualiza os parâmetros básicos do boleto de acordo com a configuração do usuário cedente do boleto" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0        
IF(@UPDUSU=0)
    SET @RETURN_VALUE=-1

IF(@RETURN_VALUE=0)
  BEGIN
    IF(EXISTS (SELECT 1 FROM TBREGBOL WHERE NIDBOL = @NIDBOL AND STAREC=1))
		    BEGIN
			    UPDATE TBREGBOL 
			       SET URLRET = isnull(B.urlret,'')
						    ,prcmul = B.PRCMUL
						    ,maxpcl = B.MAXPCL
						    ,codtra = B.CODTRA
						    ,ACPCRC = B.acpcrt 
						    ,ANTCRC = B.antcrc 
						    ,ACPBOL = B.acpbol 
						    ,ACPDEB = case when B.acpdeb=1 then 1 else 0 end 
						    ,ACPPST = case when B.acppst=1 then 1 else 0 end 
						    ,ACPMAL = case when B.acpmal=1 then 1 else 0 end 
						    ,ACPSMS = case when B.acpsms=1 then 1 else 0 end 
						    ,APLTDP = case when B.aPLTDP=1 then 1 else 0 end 
						    ,INSBC1 = isnull(B.insbc1,'')
						    ,INSBC2 = isnull(B.insbc2,'')
						    ,INSBC3 = isnull(B.insbc3,'')
						    ,UPDUSU = @UPDUSU
						    ,DATUPD = GETDATE()
			      FROM TBREGBOL A 
			     INNER JOIN TBUSUCFG B
				      ON (B.USUCFG = A.USUCED AND B.NIVCFG = 2)
			     WHERE A.NIDBOL=@NIDBOL
             AND A.STAREC=1

          IF(@@ROWCOUNT>0)
			      SET @RETURN_VALUE=1
        END 
    ELSE
        SET @RETURN_VALUE=-2
  END        
RETURN @RETURN_VALUE       
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Boleto" name="NIDBOL" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
        </parameters>

        <returns>
          <return value="0" message="" error="EMPTYDATARECORDS"/>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="REQUIREDUSEROPERATION"/>
          <return value="-2" message="" error="SLIPNOTFOUND"/>

        </returns>
      </item>-->


      <item script="true" alias="A." sql="" method="UpdateSlipWithDefaults" return="int" returnmode="1" procname="PRREGBOLUPDDFT" desc ="Atualiza os parâmetros básicos do boleto de acordo com o usuário de configuração informado" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0        
IF(@UPDUSU=0)
    SET @RETURN_VALUE=-1
IF(@RETURN_VALUE=0)
    BEGIN
      IF(EXISTS (SELECT 1 FROM TBREGBOL WHERE NIDBOL = @NIDBOL AND STAREC=1))
		      BEGIN
		          WITH T1
			          (
				          URLRET,
				          PRCMUL,
				          MAXPCL,
				          CODTRA,
				          ACPCRT,
				          ANTCRC,
				          ACPBOL,
				          ACPDEB,
				          ACPPST,
				          ACPMAL,
				          ACPSMS,
				          APLTDP,
				          INSBC1,
				          INSBC2,
				          INSBC3
			          )	AS ( SELECT
				                  URLRET,
				                  PRCMUL,
				                  MAXPCL,
				                  CODTRA,
				                  ACPCRT,
				                  ANTCRC,
				                  ACPBOL,
				                  ACPDEB,
				                  ACPPST,
				                  ACPMAL,
				                  ACPSMS,
				                  APLTDP,
				                  INSBC1,
				                  INSBC2,
				                  INSBC3
			                  FROM
				                  TBUSUCFG
			                  WHERE
				                   (USUCFG = @USUCFG AND NIVCFG = @NIVCFG)
		                )

		              UPDATE TBREGBOL 
		                 SET URLRET = isnull(T1.urlret,'')
				              ,prcmul = T1.PRCMUL
				              ,maxpcl = T1.MAXPCL
				              ,codtra = T1.CODTRA
				              ,ACPCRC = T1.acpcrt 
			              ,ANTCRC = T1.antcrc 
			              ,ACPBOL = T1.acpbol 
			              ,ACPDEB = case when T1.acpdeb=1 then 1 else 0 end 
			              ,ACPPST = case when T1.acppst=1 then 1 else 0 end 
			              ,ACPMAL = case when T1.acpmal=1 then 1 else 0 end 
			              ,ACPSMS = case when T1.acpsms=1 then 1 else 0 end 
			              ,APLTDP = case when T1.aPLTDP=1 then 1 else 0 end 
			              ,INSBC1 = isnull(T1.insbc1,'')
			              ,INSBC2 = isnull(T1.insbc2,'')
			              ,INSBC3 = isnull(T1.insbc3,'')
			              ,UPDUSU = @UPDUSU
			              ,DATUPD = GETDATE()

		              FROM TBREGBOL, T1 
		              WHERE NIDBOL=@NIDBOL
                    AND STAREC=1
				              IF(@@ROWCOUNT>0)
					              SET @RETURN_VALUE=1
          END
      ELSE
          SET @RETURN_VALUE=-2
     END
RETURN @RETURN_VALUE     
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Boleto" name="NIDBOL" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Configuracao" name="USUCFG" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Nível de Configuração" name="NIVCFG" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
        </parameters>

        <returns>
          <return value="0" message="" error="EMPTYDATARECORDS"/>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="REQUIREDUSEROPERATION"/>
          <return value="-2" message="" error="SLIPNOTFOUND"/>

        </returns>
      </item>


    </methods>

    <selectallcommand>

      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRREGBOLSELALL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query>
          <![CDATA[
SELECT a.*, isnull(c.DSCTAB,'') as dscrec,b.urltok
  FROM TBREGBOL A (NOLOCK)
 inner join tbwrttok b  (nolock)
    on (a.nidtok = b.numtok)
  left join tbtabger c with (nolock) 
    on (7 = C.NUMTAB AND a.starec = c.keycod)
]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Usuário" name="CODUSU" type="int" sysnull="true" default="null" output="" null="true"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="Collect" return="DataTable" procname="PRREGBOLPSQALL" desc ="Coleta todos os registros com base nos parâmetros fornecidos">
        <query order="A.NIDBOL DESC" append="SELECT @PAGMAX = MAX(ISNULL(PAGNRO,0)) FROM @RESULT
SELECT A.*, @PAGMAX PAGMAX FROM @RESULT A WHERE(1=1) AND  (A.PAGNRO=@PAGNRO)">
          <![CDATA[
DECLARE @PAGMAX INT=0          
IF(@VLRBOL=0)
  SET @VLRBOL=NULL
  
IF(@TIPPSD=0)
  SET @TIPPSD=1
  
IF(@DATMOV1='')
  SET @DATMOV1=NULL
IF(@DATMOV2='')
  SET @DATMOV2=NULL
  
DECLARE @RESULT TABLE (
	[PAGNRO] [int] NOT NULL,
	[NIDBOL] [int] NOT NULL,
	[BOLANT] [bit] NOT NULL,
	[STAREC] [int] NOT NULL,
	[VIAPGT] [tinyint] NOT NULL,
	[CODVER] [smallint] NOT NULL,
	[REGPRO] [int] NOT NULL,
	[NIDLIM] [int] NOT NULL,
	[DATCAD] [datetime] NOT NULL,
	[KEYBOL] [uniqueidentifier] NOT NULL,
	[NUMIPA] [varchar](50) NOT NULL,
	[NIDTOK] [int] NOT NULL,
	[NUMDEL] [int] NOT NULL,
	[ORGBOL] [int] NOT NULL,
	[TIPBOL] [int] NOT NULL,
	[NUMMES] [tinyint] NOT NULL,
	[NUMANO] [smallint] NOT NULL,
	[NOMCED] [varchar](100) NULL,
	[NOMSAC] [varchar](100) NULL,
	[SACMAL] [varchar](100) NULL,
	[CODCMF] [varchar](100) NULL,
	[USUPRO] [int] NOT NULL,
	[USUCED] [int] NOT NULL,
	[CODFAT] [int] NOT NULL,
	[CODATR] [int] NOT NULL,
	[CODUSU] [int] NOT NULL,
	[PRCBOL] [smallint] NOT NULL,
	[DSCBOL] [varchar](255) NULL,
	[URLRET] [varchar](255) NULL,
	[VLRBOL] [money] NOT NULL,
	[VLRTAR] [money] NOT NULL,
	[PRCMUL] [money] NOT NULL,
	[PRCJUR] [money] NOT NULL,
	[DATREG] [datetime] NOT NULL,
	[DATEMI] [datetime] NOT NULL,
	[DATVCT] [date] NULL,
	[DATPGT] [date] NULL,
	[DATVAL] [date] NULL,
	[STABOL] [int] NOT NULL,
	[UPDUSU] [int] NOT NULL,
	[DATUPD] [datetime] NOT NULL,
	[CODCED] [varchar](25) NULL,
	[VLRPAG] [money] NOT NULL,
	[CODRET] [int] NOT NULL,
	[NIDTRB] [int] NOT NULL,
	[CODMOE] [int] NOT NULL,
	[VLRFRT] [money] NOT NULL,
	[REGAGV] [tinyint] NOT NULL,
	[LOTFIN] [int] NOT NULL,
	[ACPCRC] [bit] NOT NULL,
	[ANTCRC] [bit] NOT NULL,
	[CODTRA] [smallint] NOT NULL,
	[ACPBOL] [bit] NOT NULL,
	[ACPDEB] [bit] NOT NULL,
	[ACPPST] [bit] NOT NULL,
	[ACPMAL] [bit] NOT NULL,
	[ACPSMS] [bit] NOT NULL,
	[MAXPCL] [tinyint] NOT NULL,
	[ALTCPG] [tinyint] NOT NULL,
	[NIDRTR] [int] NOT NULL,
	[APLTDP] [tinyint] NOT NULL,
	[APLTOW] [bit] NOT NULL,
	[CODPRT] [int] NOT NULL,
	[NUMBCO] [varchar](5) NOT NULL,
	[NIDCTA] [int] NOT NULL,
	[NUMAGE] [varchar](30) NOT NULL,
	[NUMCCT] [varchar](30) NOT NULL,
	[NUMDVE] [varchar](1) NOT NULL,
	[RSPTAR] [tinyint] NOT NULL,
	[INSBC1] [varchar](30) NULL,
	[INSBC2] [varchar](30) NULL,
	[INSBC3] [varchar](30) NULL,
	[ALTENV] [bit] NOT NULL,
	[ALTNPG] [bit] NOT NULL,
	[ACPSAC] [bit] NOT NULL,
	[ATVREC] [bit] NOT NULL,
	[TIPREC] [tinyint] NOT NULL,
	[MAXREC] [tinyint] NOT NULL,
	[NUMDVF] [smallint] NOT NULL,
	[PEDCLI] [varchar](15) NULL,
	[LINDIG] [varchar](64) NULL,
	[CODESP] [varchar](3) NOT NULL,
	[NUMCTR] [varchar](3) NOT NULL,
	[NOSNUM] [int] NOT NULL,
	[IMGSAV] [bit] NULL,
	[INDCNC] [bit] NOT NULL,
	[DSCREC] [varchar](100) NOT NULL,
	[DSCUSP] [varchar](100) NULL,
	[DSCSTA] [varchar](70) NOT NULL,
	[CONTA] [char](11) NOT NULL,
	[DIGITO] [char](1) NOT NULL,
	[DSCBLT] [varchar](100) NOT NULL,
	[DSPEMI] [varchar](10) NULL,
	[DSPVCT] [varchar](10) NULL,
	[DSPPGT] [varchar](10) NULL
)
  
    
INSERT INTO @RESULT
           ([PAGNRO]
           ,[NIDBOL]
           ,[BOLANT]
           ,[STAREC]
           ,[VIAPGT]
           ,[CODVER]
           ,[REGPRO]
           ,[NIDLIM]
           ,[DATCAD]
           ,[KEYBOL]
           ,[NUMIPA]
           ,[NIDTOK]
           ,[NUMDEL]
           ,[ORGBOL]
           ,[TIPBOL]
           ,[NUMMES]
           ,[NUMANO]
           ,[NOMCED]
           ,[NOMSAC]
           ,[SACMAL]
           ,[CODCMF]
           ,[USUPRO]
           ,[USUCED]
           ,[CODFAT]
           ,[CODATR]
           ,[CODUSU]
           ,[PRCBOL]
           ,[DSCBOL]
           ,[URLRET]
           ,[VLRBOL]
           ,[VLRTAR]
           ,[PRCMUL]
           ,[PRCJUR]
           ,[DATREG]
           ,[DATEMI]
           ,[DATVCT]
           ,[DATPGT]
           ,[DATVAL]
           ,[STABOL]
           ,[UPDUSU]
           ,[DATUPD]
           ,[CODCED]
           ,[VLRPAG]
           ,[CODRET]
           ,[NIDTRB]
           --,[FILNAM]
           ,[CODMOE]
           ,[VLRFRT]
           ,[REGAGV]
           ,[LOTFIN]
           ,[ACPCRC]
           ,[ANTCRC]
           ,[CODTRA]
           ,[ACPBOL]
           ,[ACPDEB]
           ,[ACPPST]
           ,[ACPMAL]
           ,[ACPSMS]
           ,[MAXPCL]
           ,[ALTCPG]
           ,[NIDRTR]
           ,[APLTDP]
           ,[APLTOW]
           ,[CODPRT]
           ,[NUMBCO]
           ,[NIDCTA]
           ,[NUMAGE]
           ,[NUMCCT]
           ,[NUMDVE]
           ,[RSPTAR]
           ,[INSBC1]
           ,[INSBC2]
           ,[INSBC3]
           ,[ALTENV]
           ,[ALTNPG]
           ,[ACPSAC]
           ,[ATVREC]
           ,[TIPREC]
           ,[MAXREC]
           ,[NUMDVF]
           ,[PEDCLI]
           ,[LINDIG]
           ,[CODESP]
           ,[NUMCTR]
           ,[NOSNUM]
           ,[IMGSAV]
           ,[INDCNC]
           ,[DSCREC]
           ,[DSCUSP]
           ,[DSCSTA]
           ,[CONTA]
           ,[DIGITO]
           ,[DSCBLT]
           ,[DSPEMI]
           ,[DSPVCT]
           ,[DSPPGT])
 
SELECT ((((ROW_NUMBER() OVER(ORDER BY A.NIDBOL DESC))-1)/@PAGSIZ))+1
      ,A.NIDBOL,A.BOLANT
      ,A.STAREC,A.VIAPGT
      ,A.CODVER,A.REGPRO
      ,A.NIDLIM,A.DATCAD
      ,A.KEYBOL,A.NUMIPA
      ,A.NIDTOK,A.NUMDEL
      ,A.ORGBOL,A.TIPBOL
      ,A.NUMMES,A.NUMANO
      ,A.NOMCED,A.NOMSAC
      ,A.SACMAL,dbo.FormatCmf(A.CODCMF) CODCMF
      ,A.USUPRO,A.USUCED
      ,A.CODFAT,A.CODATR
      ,A.CODUSU,A.PRCBOL
      ,A.DSCBOL,A.URLRET
      ,A.VLRBOL,A.VLRTAR
      ,A.PRCMUL,A.PRCJUR
      ,A.DATREG,A.DATEMI
      ,A.DATVCT,A.DATPGT
      ,A.DATVAL,A.STABOL
      ,A.UPDUSU,A.DATUPD
      ,A.CODCED,A.VLRPAG
      ,A.CODRET,A.NIDTRB
      --,A.FILNAM
      ,A.CODMOE
      ,A.VLRFRT,A.REGAGV
      ,A.LOTFIN,A.ACPCRC
      ,A.ANTCRC,A.CODTRA
      ,A.ACPBOL,A.ACPDEB
      ,A.ACPPST,A.ACPMAL
      ,A.ACPSMS,A.MAXPCL
      ,A.ALTCPG,A.NIDRTR
      ,A.APLTDP,A.APLTOW
      ,A.CODPRT,A.NUMBCO
      ,A.NIDCTA,A.NUMAGE
      ,A.NUMCCT,A.NUMDVE
      ,A.RSPTAR,A.INSBC1
      ,A.INSBC2,A.INSBC3
      ,A.ALTENV,A.ALTNPG
      ,A.ACPSAC,A.ATVREC
      ,A.TIPREC,A.MAXREC
      ,A.NUMDVF,A.PEDCLI
      ,A.LINDIG,A.CODESP
      ,A.NUMCTR
      ,A.NOSNUM,A.IMGSAV,A.INDCNC
	    ,b.dsctab as DSCREC
	    ,(CASE WHEN LTRIM(RTRIM(NOMSAC))<>'' THEN LTRIM(RTRIM(NOMSAC)) ELSE H.NOMUSU END) as DSCUSP
      ,I.DSCSTA
 ,isnull(f.numcta,'') as CONTA, isnull(f.numdve,'') DIGITO
 ,isnull(g.dsctab,'') as DSCBLT
 ,CONVERT(VARCHAR(10), A.DATEMI,103) AS DSPEMI
 ,CONVERT(VARCHAR(10), A.DATVCT,103) AS DSPVCT
 ,CASE WHEN A.DATPGT IS NULL THEN '' ELSE CONVERT(VARCHAR(10), A.DATPGT, 103) END  AS DSPPGT
 from tbregbol (nolock) a 
 inner join tbtabger (nolock) b on (b.numtab = 7 and b.keycod = a.starec)
 inner join tbcadusu (nolock) d on (a.usuced = d.codusu)
 inner join tbcadsta (nolock) e on (a.stabol = e.codsta)
 inner join tbcadsta (nolock) i on (i.codsta = E.STAREF) 
 inner join tbcadcta (nolock) f on (a.usuced = f.codusu)
 inner join tbtabger (nolock) g on (g.numtab = 16 and g.keycod = a.tipbol)
 left join tbcadusu (nolock) h on (H.CODUSU = A.CODUSU)
 WHERE (a.STAREC IN (1,2,13))
 AND (f.orgcta=1)          
 AND (E.CODMOD=1)
 AND (I.CODMOD=1)          
 AND ( 
         (@TIPPSD = 1 AND (@DATMOV1 IS NULL AND @DATMOV2 IS NULL  OR (DATEMI>=@DATMOV1 AND DATEMI<=@DATMOV2)))
      OR (@TIPPSD = 2 AND (@DATMOV1 IS NULL AND @DATMOV2 IS NULL  OR (DATVCT>=@DATMOV1 AND DATVCT<=@DATMOV2))) 
      OR (@TIPPSD = 3 AND (@DATMOV1 IS NULL AND @DATMOV2 IS NULL  OR (DATPGT>=@DATMOV1 AND DATPGT<=@DATMOV2)))  
    )
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="false" desc ="Tipo de Pesquisa de Dados" name="TIPPSD" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" desc ="ID do Boleto" name="NIDBOL" type="int" sysnull="true" default="null" output="" null="true"/>
          <parameter input="true" desc ="ID do Usuário Gestor de Produto" name="USUPRO" type="int" sysnull="true" default="null" output="" null="true"/>
          <parameter input="true" desc ="Cedente" name="USUCED" type="int" sysnull="true" default="null" output="" null="true"/>
          <parameter input="true" desc ="Status do Boleto" name="STABOL" alias="I" fieldname="CODSTA" type="System.Int16" sysnull="true" default="null" output="" null="true"/>
          <parameter input="true" desc ="Tipo de Boleto" name="TIPBOL" type="System.Byte" sysnull="true" default="null" output="" null="true"/>
          <parameter input="true" islike="true" desc ="Código do CMF" name="CODCMF" type="System.String"  size="15" sysnull="true" default="null" output="" null="true"/>
          <parameter input="true" islike="true" desc ="Sacado" name="NOMSAC" type="System.String"  size="70" sysnull="true" default="null" output="" null="true"/>
          <parameter input="false" islike="true" desc ="Sacado" name="NOMSAC" alias="H." fieldname="NOMUSU" type="System.String"  size="70" sysnull="true" default="null" output="" null="true"/>
          <parameter input="true" desc ="Valor do Boleto" name="VLRBOL"  operator="&gt;=" type="System.Double" sysnull="true" default="null" output="" null="true"/>
          <parameter input="true" apply="false" desc ="Data de Pesquisa Inicial (yyyyMMdd)"  operator="&gt;=" fieldname="DATMOV" name="DATMOV1" type="System.String" size="20" sysnull="" default="null" output="" null="true"/>
          <parameter input="true" apply="false" desc ="Data de Pesquisa Final (yyyyMMdd)"  operator="&lt;=" fieldname="DATMOV" name="DATMOV2" type="System.String" size="20" sysnull="" default="null" output="" null="true"/>          
          <parameter input="true" desc ="Indicador de Conciliacao" name="INDCNC" type="System.Boolean" sysnull="" default="null" output="" null="true"/>
          <parameter input="true" apply="false" desc ="Número da Página" name="PAGNRO"  type="System.Int32"  default="1" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Tamanho de Página" name="PAGSIZ"  type="System.Int32" default="100" output="" null="false"/>
        </parameters>
      </item>

    </selectallcommand>


  </item>
  <item create="true"  id="30" name="TBUSRLOG" friendlyname="UserLog" modelversion="3">
    <UpdateKey></UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>True</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1100000000011111111</procedure>
    <asp>100000000011111111</asp>
    <csharp>11000000011111111</csharp>

    <insertcommand key="Identity" exceptionparamns="'DATCAD','NIDACE'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[
         
      ]]>
      </pre>
      <body></body>
      <pos>
        IF(@RETURN_VALUE>0)
          BEGIN
            UPDATE TBCADUSU WITH (UPDLOCK) SET ULTACE = GETDATE() WHERE CODUSU = @CODUSU
         END
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    
    <updatecommand key="Identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[
         
      ]]>
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>
      
    <selectcommand>
      <item script="true" alias="A." sql="" type="" method="Select" return="UserLog" procname="" desc ="Obtêm os dados do registro de acesso">
        <query>
          <![CDATA[SELECT A.* FROM TBUSRLOG (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Acesso" name="NIDACE" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    </item>

  <item create="true"  id="31" name="TBCADKEY" friendlyname="Chave de Usuario" modelversion="3">
    <UpdateKey>Identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable>SELECT TOP 1 NIDKEY,CODUSU,STAREC,DATCAD,UPDUSU,KEYUSU,DATUPD,EXERL1,CODPRO,NUMDEL,USETOK FROM TBCADKEY (NOLOCK)</SqlTable>
    <extendedmodel>SELECT TOP 1 NIDKEY,CODUSU,STAREC,DATCAD,UPDUSU,KEYUSU,DATUPD,EXERL1,CODPRO,NUMDEL,USETOK FROM TBCADKEY (NOLOCK)</extendedmodel>
    <fieldreturn></fieldreturn>
    <procedure>11100000000</procedure>
    <asp>1110000000</asp>
    <csharp>111000000</csharp>
    <selectcommand>
      <item script="true" alias="A." sql="" type="" method="Select" return="ChaveUsuario" procname="" desc ="Seleciona o registro de acordo com o id de registro">
        <query>
          <![CDATA[SELECT * FROM TBCADKEY (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Conta Corrente" name="NIDKEY" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>

    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRCADKEYSELALL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query>
          <![CDATA[
SELECT A.NIDKEY,A.CODUSU,A.STAREC,A.DATCAD,A.UPDUSU,A.KEYUSU,A.DATUPD,A.EXERL1,A.CODPRO,A.NUMDEL,A.USETOK
      ,E.NOMUSU 
      ,ISNULL(B.DSCTAB,'Não definido') AS DSCREC
      ,ISNULL(C.LGNUSU,'') AS DSCUPD
      ,ISNULL(D.DSCPRO,'') AS DSCPRO
  FROM TBCADKEY (NOLOCK) A
  INNER JOIN TBCADUSU (NOLOCK) E
     ON (A.CODUSU = E.CODUSU)
   LEFT JOIN TBTABGER (NOLOCK) B
    ON (7 = B.NUMTAB AND A.STAREC = B.KEYCOD)
  LEFT JOIN TBCADUSU (NOLOCK)  C
    ON (A.UPDUSU = C.CODUSU)
  LEFT JOIN TBCADPRO (NOLOCK) D
    ON (A.CODPRO = D.CODPRO)
   
]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Usuário" name="CODUSU" type="int" sysnull="true" default="null" output="" null="true"/>
        </parameters>
      </item>
    </selectallcommand>
    <insertcommand key="Identity" exceptionparamns="'DATCAD','DATUPD', 'NIDKEY','KEYUSU'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="Identity" exceptionparamns="'DATCAD','KEYUSU'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[SET @DATUPD =GETDATE();]]>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </updatecommand>

  </item>

  <item create="true"  id="32" name="TBCADOPT">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>True</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>111000000000</procedure>
    <asp>1110000000</asp>
    <csharp>111000000</csharp>
    <SelectAllList></SelectAllList>
    <StringSqlSelectAll></StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll></CreateSelectionAll>
    <SelectAllAlias></SelectAllAlias>
    <MaxFields>NIDOPT</MaxFields>
  </item>
  <item create="true"  id="33" name="TBREGCCR" friendlyname="Controle CC" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>False</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>True</CSharpPartial>
    <SqlTable></SqlTable>
    <extendedmodel>
      <![CDATA[SELECT TOP 1 NIDCCR,	REFNID,	REGHAB,	STAREC,	TIPLCT,	REGPRO,	LOTFIN,	CODAPR,	ORGLCT,	DATCAD,	DATUPD,	UPDUSU,	REFLOT,	CODSOL,	CODPRT,	CODUSU,	USUPRO,	NIDBOL,	SIGOPE,	LINREF,	TIPLIN,	IDEPRE,	CODMOV,	DATPCL,	NUMPCL,	TIPVAL,	VLRMOV,	DSCMOV,	DATVEN,	DATMOV,	CONUSU,	STAREG,	NUMBOR,	STABOR,	DATPRC,	NIDUCT,	INDLCT,	NIDCTA,	NIDTRA,	CANTRA,	NIDTRB,	NUMIPA,	NIDTOK,	CODMOE,	NUMREX,	TIPRFE,	NIDRVM,	NIDPAG,	CODTRM, '' AS NUMNSU, CODMCC, OPRCRT FROM TBREGCCR (NOLOCK)]]>
    </extendedmodel>
    <fieldreturn></fieldreturn>
    <procedure>111100000000</procedure>
    <asp>1110000000</asp>
    <csharp>111100000</csharp>
    <interface>
      <item script="false" alias="A." sql="" method="ProcessarRegistroPagamento" return="int" returnmode="2" procname="" desc ="Processa a inclusão de um registro de pagamento" returnvalue="0">
        <query>
        </query>
        <parameters>
          <parameter input="true" desc ="Classe de Registro de Pagamentos" name="objeto" type="PaymentRegister" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualização" name="pUPDUSU" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>

    </interface>

    <objectproperty>
      <parameters>
        <parameter input="true" apply="true" desc ="ID da Transação" name="NIDTRA" type="System.String" default="" output="" null="false"/>
        <parameter input="true" apply="true" desc ="Lote Financeiro" name="LOTFIN" type="System.Int32" default="" output="" null="false"/>
      </parameters>
    </objectproperty>

    <insertcommand key="Identity" exceptionparamns="'DATCAD','DATUPD', 'NIDCCR'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="Identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[SET @DATUPD =GETDATE();]]>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </updatecommand>

    <selectcommand>
      <item script="true" alias="A." sql="" type="" method="Select" return="ControleCC" procname="" desc ="Seleciona o registro de acordo com o id de registro do conta corrente">
        <query>
          <![CDATA[SELECT * FROM TBREGCCR (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Conta Corrente" name="NIDCCR" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>

    <methods>

      <item  webtype="POST" script="true" alias="A." sql="" method="CloseRecord" return="int" returnmode="2" returnvalue="1" procname="PRREGCCRCLOREC" desc ="Executa o Fechamento do Registro do Conta Corrente" remarks="Código de Acesso : 087 - Fechar Registro" >
        <query>
          <![CDATA[
SET @RETURN_VALUE=0
DECLARE @NIDTRA VARCHAR(13)   
DECLARE @TIPRFE TINYINT
DECLARE @NIDRVM INT
IF(@RETURN_VALUE=0)
  BEGIN
    IF(@UPDUSU>0)
        SET @RETURN_VALUE=-1
  END

IF( NOT EXISTS(SELECT 1 FROM TBUSUACE (NOLOCK) WHERE CODUSU= @UPDUSU AND STAREC=1 AND CODACE=87))
	SET @RETURN_VALUE=-5

IF(@RETURN_VALUE=0)  
  BEGIN
    IF(@NIDCCR>0)
      SET @RETURN_VALUE=-2
  END

IF(@RETURN_VALUE=0)  
  BEGIN
    IF(@STABOR>0)
      SET @RETURN_VALUE=-3
  END

IF(@RETURN_VALUE=0)
  BEGIN
    IF(EXISTS(SELECT 1 FROM TBREGCCR (NOLOCK) WHERE NIDCCR=@NIDCCR AND (CODAPR=0 OR CODAPR=@UPDUSU)))  
       BEGIN
          SELECT @NIDTRA = NIDTRA, @TIPRFE = TIPRFE, @NIDRVM =NIDRVM FROM TBREGCCR (NOLOCK) WHERE NIDCCR =@NIDCCR
          
          /* REGISTRO DE PAGAMENTO */
          IF(@TIPRFE = 21 AND @NIDRVM>0)
              UPDATE TBREGPAG SET STAPAG=@STABOR,DATUPD=GETDATE(),UPDUSU=@UPDUSU WHERE NIDPAG=@NIDRVM
          /* REGISTRO DO CONTA CORRENTE */              
          UPDATE TBREGCCR SET STABOR=@STABOR,DATUPD=GETDATE(),CODAPR=@UPDUSU, UPDUSU=@UPDUSU WHERE NIDCCR=@NIDCCR
          SET @RETURN_VALUE = @@ROWCOUNT
       END
   END      
ELSE
   SET @RETURN_VALUE=-4
  
RETURN @RETURN_VALUE  
        ]]>

        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Conta Corrente" name="NIDCCR" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Status de Fechamento" name="STABOR" type="System.Int16" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="0" message="" error="APPROVALFAIL"/>
          <return operator=">" value="0" message="" error="OK"/>
          <return value="-1" message="USUARIO PARA BLOQUEIO NAO INFORMADO" error="FAILALL"/>
          <return value="-2" message="IDENTIFICADOR DE REGISTRO NAO INFORMADO" error="FAILALL"/>
          <return value="-3" message="STATUS DE FECHAMENTO NAO INFORMADO" error="FAILALL"/>
          <return value="-4" message="O REGISTRO E INVALIDO OU ESTA BLOQUEADO PARA OUTRA PESSOA" error="FAILALL"/>
          <return value="-5" message="O USUARIO NAO POSSUI PERMISSAO PARA FECHAMENTO DE REGISTRO (087)" error="APPROVALUSERNOTALLOWED"/>          
        </returns>
      </item>


      <item  webtype="POST" script="true" alias="A." sql="" method="LockRecord" return="int" returnmode="1" returnvalue="1" procname="PRREGCCRLOKREC" desc ="Bloqueia o registro para o usuário informado">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0
IF(@TIPBLO NOT IN (1,2))
   SET @RETURN_VALUE=-3
   
IF(@RETURN_VALUE=0)
  BEGIN
    IF(@UPDUSU>0)
        SET @RETURN_VALUE=-1
  END
  
IF(@RETURN_VALUE=0)  
  BEGIN
    IF(@NIDCCR>0)
      SET @RETURN_VALUE=-2
  END

IF(@RETURN_VALUE=0)
  BEGIN
    IF(EXISTS(SELECT 1 FROM TBREGCCR (NOLOCK) WHERE NIDCCR=@NIDCCR AND CODAPR=0))
        SET @RETURN_VALUE = -3
    ELSE
      BEGIN
          IF(@TIPBLO=1)
              UPDATE TBREGCCR SET CODAPR=@UPDUSU WHERE NIDCCR=@NIDCCR AND CODAPR=0
          ELSE
              UPDATE TBREGCCR SET CODAPR=0 WHERE NIDCCR=@NIDCCR AND CODAPR=@UPDUSU     
          SET @RETURN_VALUE = @@ROWCOUNT              
      END      
  END
RETURN @RETURN_VALUE  
        ]]>

        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Tipo de Bloqueio (1 - Bloqueio, 2 - Desbloqueio)" name="TIPBLO" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="ID do Registro de Conta Corrente" name="NIDCCR" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Bloqueio" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="0" message="" error="APPROVALFAIL"/>
          <return operator=">" value="0" message="" error="OK"/>
          <return value="-1" message="USUARIO PARA BLOQUEIO NAO INFORMADO" error="FAILALL"/>
          <return value="-2" message="IDENTIFICADOR DE REGISTRO NAO INFORMADO" error="FAILALL"/>
          <return value="-3" message="TIPO DE BLOQUEIO NAO INFORMADO" error="FAILALL"/>
        </returns>
      </item>      
      
      
      <item script="true" alias="A." sql="" method="ApproveOperation" return="int" returnmode="2" procname="PRREGCCRAPROPE" desc ="Efetua o Registro de Aprovação de uma operação">
        <query>
          <![CDATA[
DECLARE @RETURN_VALUE INT = 0
DECLARE @VLRAPR MONEY=0
DECLARE @NIDTRA VARCHAR(13)
DECLARE @STAREC TINYINT
DECLARE @OLDAPR TINYINT
DECLARE @OLDBOR SMALLINT
DECLARE @CODAPR INT

SELECT @STAREC = STAREC,
			@OLDAPR = CODAPR,
			@OLDBOR = STABOR,
			@VLRAPR = VLRMOV,
			@NIDTRA = NIDTRA
  FROM TBREGCCR (NOLOCK) 
 WHERE NIDCCR = @NIDCCR

IF(@STAREC=0)
	SET @RETURN_VALUE=-1

IF(@OLDAPR>0)
	SET @RETURN_VALUE=-2

IF( NOT EXISTS(SELECT 1 FROM TBUSUACE WHERE CODUSU= @UPDUSU AND STAREC=1 AND CODACE=@CODACE))
	SET @RETURN_VALUE=-3


	 IF(@RETURN_VALUE=0)
		BEGIN
			INSERT 
	  		 INTO TBREGAPR (STAREC, UPDUSU, NIDTRA, NIDCCR, USUAPR,  DATAPR,  VLRAPR)  VALUES (1,@UPDUSU,@NIDTRA,@NIDCCR,@UPDUSU,GETDATE(),@VLRAPR)
         IF(@@ERROR=0)
			      BEGIN
					    SET @CODAPR = @@IDENTITY
						UPDATE TBREGCCR
					     SET CODAPR = @CODAPR,
						       STABOR = @STABOR
				     WHERE NIDCCR = @NIDCCR
					  IF(@@ERROR=0)
						   SET @RETURN_VALUE = @CODAPR
					END
				ELSE
					BEGIN
						SET @RETURN_VALUE=-4
						UPDATE TBREGCCR
						   SET CODAPR = @OLDAPR,
							   STABOR = @OLDBOR
						 WHERE NIDCCR = @NIDCCR
						 IF(@@ERROR<>0)
						    SET @RETURN_VALUE = -5
					END	
		END
	SELECT @RETURN_VALUE
        
        ]]>

        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Conta Corrente" name="NIDCCR" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Status da Operação" name="STABOR" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Aprovação" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Codigo de Acesso" name="CODACE" type="System.Int32" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="0" message="" error="APPROVALFAIL"/>
          <return operator=">" value="0" message="" error="OK"/>
          <return value="-1" message="" error="APPROVALFAILRECORD"/>
          <return value="-2" message="" error="APPROVALEXISTING"/>
          <return value="-3" message="" error="APPROVALUSERNOTALLOWED"/>
          <return value="-4" message="" error="APPROVALFAIL"/>
          <return value="-5" message="" error="APPROVALFAIL"/>

        </returns>
      </item>
      <item script="true" alias="A." sql="" method="GetSaldoContaCorrente" return="double"  returnmode="2" procname="PRREGCCRSALUSU" desc ="Obtêm o saldo da conta do indicador de lançamento do usuário">
        <query>
          <![CDATA[
DECLARE @SQL VARCHAR(500)
SET @SQL = N'SELECT COALESCE(SUM((VLRMOV*SIGOPE)),0) AS VLRTRA FROM TBREGCCR A (NOLOCK) WHERE (A.STAREC >0)'
SET @SQL = @SQL + ' AND (A.TIPVAL IN (' + @TIPVAL +'))'
SET @SQL = @SQL + ' AND (A.CODUSU = ' + CAST(@CODUSU AS VARCHAR(10))+ ')'
SET @SQL = @SQL + ' AND (A.INDLCT = ' + CAST(@INDLCT AS VARCHAR(3)) + ')'
SET @SQL = @SQL + ' AND (A.REGHAB=1)'
EXEC (@SQL)]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Usuário"       name="CODUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Tipo de Valor"  name="TIPVAL" size="30" type="System.String" default="1" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Indicador de Lançamento" name="INDLCT" type="System.Byte" default="2" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="GetCurrentAccountMovement" return="DataTable" procname="PRREGCCRSELCCT" desc ="Recupera os registros do conta corrente de acordo com os parâmetros fornecidos">
        <query>
          <![CDATA[
DECLARE @SLDANT float
DECLARE @TBLSLD TABLE (
  CODUSU int,
  SLDANT money DEFAULT 0
)
DECLARE @NIDBOL int = NULL
DECLARE @NIDTRA varchar(13) = NULL
DECLARE @DSCMOV varchar(150) = NULL
DECLARE @DATFIL varchar(20) = NULL

IF (@DATMOV1 = '')
  SET @DATMOV1 = NULL
IF (@DATMOV2 = '')
  SET @DATMOV2 = NULL

IF ((@DATMOV1 IS NOT NULL)
  AND (@DATMOV2 IS NOT NULL))
BEGIN
  INSERT @TBLSLD (CODUSU, SLDANT)
    SELECT
      @CODUSU,
      SUM(VLRMOV * SIGOPE) SLDANT
    FROM TBREGCCR
    WHERE STAREC = 1
    AND INDLCT = @INDLCT
    AND CODUSU = @CODUSU
    AND DATMOV < @DATMOV1

  SET @NUMDAY = NULL
END
ELSE
  INSERT @TBLSLD (CODUSU, SLDANT)
    VALUES (@CODUSU, 0)

IF (@NUMDAY IS NOT NULL)
  SET @DATFIL = CONVERT(varchar(10), DATEADD(DD, @NUMDAY * -1, GETDATE()), 112)

IF (@TIPSEL = 1
  AND (@ARGSEL IS NOT NULL))
  SET @NIDBOL = CAST(@ARGSEL AS int)

IF (@TIPSEL = 2
  AND (@ARGSEL IS NOT NULL))
  SET @NIDTRA = @ARGSEL

IF (@TIPSEL = 3
  AND (@ARGSEL IS NOT NULL))
  SET @DSCMOV = '%' + RTRIM(@ARGSEL) + '%'


SELECT
  DATNUM = CONVERT(INT, DATMOV),
  NIDCCR,
  REFNID,
  REGHAB,
  A.STAREC,
  ISNULL(b.DSCTAB, '''') AS DSCREC,
  TIPLCT,
  REGPRO,
  LOTFIN,
  A.DATCAD,
  A.DATMOV,
  CONVERT(varchar(10), A.DATMOV, 103) AS PRNDCA,
  CONVERT(varchar(8), A.DATCAD, 8) AS PRNHCA,
  A.DATUPD,
  A.UPDUSU,
  ISNULL(e.LGNUSU, '''') AS DSCUPD,
  A.REFLOT,
  A.CODSOL,
  A.CODPRT,
  A.CODUSU,
  A.USUPRO,
  ISNULL(I.NOMUSU, '''') AS USUNOM,
  A.NIDBOL,
  A.SIGOPE,
  ISNULL(c.dsctab, '''') AS DSCOPE,
  A.LINREF,
  A.TIPLIN,
  A.IDEPRE,
  A.CODMOV,
  (CASE
    WHEN A.CODTRM IN (2, 3) THEN LTRIM(RTRIM(M.DSCTAB)) + ' '
    ELSE ''
  END) + d.dscmov AS DSCCPR,
  A.DATPCL,
  A.NUMPCL,
  A.TIPVAL,
  A.VLRMOV,
  (a.vlrmov * a.sigope) AS VLRTRA,
  CASE
    WHEN a.tipval = 7 THEN (a.vlrmov * a.sigope)
    ELSE 0
  END AS VLRBLO,
  CASE
    WHEN a.tipval = 2 THEN (a.vlrmov * a.sigope)
    ELSE 0
  END AS VLRVIN,
  A.DSCMOV,
  A.DATVEN,
  A.DATMOV,
  CONVERT(varchar, A.DATMOV, 103) AS PRNDMV,
  A.CONUSU,
  A.STAREG,
  ISNULL(G.DSCSTA, '') AS DSCSTA,
  A.NUMBOR,
  A.STABOR,
  ISNULL(K.DSCSTA, '') AS DSCBOR,
  A.DATPRC,
  A.NIDUCT,
  A.INDLCT,
  ISNULL(L.DSCTAB, '') AS DSCLCT,
  A.NIDCTA,
  A.NIDTRA,
  A.CANTRA,
  A.CODMOE,
  A.TIPRFE,
  A.NIDRVM,
  A.NIDPAG,
  ISNULL(F.NOMUSU, '') AS NOMUSU,
  ISNULL(dbo.NomeContaUsuario(A.NIDUCT), '') AS DSCUCT,
  '' AS DSCCTA,
  ISNULL(N.SLDANT, 0) SLDANT
FROM TBREGCCR A (NOLOCK)
INNER JOIN tbtipmov D (NOLOCK)
  ON (A.CODMOV = D.CODMOV)
LEFT JOIN tbtabger b (NOLOCK)
  ON (B.NUMTAB = 7
  AND B.KEYCOD = a.starec)
LEFT JOIN tbtabger c (NOLOCK)
  ON (C.NUMTAB = 10
  AND C.KEYCOD = a.sigope)
LEFT JOIN TBCADUSU e (NOLOCK)
  ON (A.UPDUSU = e.CODUSU)
LEFT JOIN TBCADUSU F (NOLOCK)
  ON (A.CODUSU = F.CODUSU)
INNER JOIN TBCADSTA G (NOLOCK)
  ON (A.STAREG = G.CODSTA)
INNER JOIN TBCADSTA K (NOLOCK)
  ON (A.STABOR = K.CODSTA)
LEFT JOIN TBUSUPRO H (NOLOCK)
  ON (A.USUPRO = H.USUPRO)
LEFT JOIN TBCADUSU I (NOLOCK)
  ON (H.CODUSU = I.CODUSU)
LEFT JOIN TBCADCTA J (NOLOCK)
  ON (A.NIDCTA = J.NIDCTA)
INNER JOIN TBTABGER L (NOLOCK)
  ON (L.NUMTAB = 39
  AND L.KEYCOD = A.INDLCT)
LEFT JOIN TBTABGER M (NOLOCK)
  ON (M.NUMTAB = 59
  AND M.KEYCOD = A.CODTRM)
LEFT JOIN @TBLSLD N
  ON (N.CODUSU = A.CODUSU)
WHERE (A.STAREC IN (1, 2))
AND (A.TIPVAL IN (1, 2, 4))
AND A.INDLCT = @INDLCT
AND A.CODUSU = @CODUSU
AND (@NIDBOL IS NULL OR A.NIDBOL = @NIDBOL)
AND (@NIDTRA IS NULL OR A.NIDTRA = @NIDTRA)
AND (@DSCMOV IS NULL OR A.DSCMOV LIKE @DSCMOV)
AND ((@DATMOV1 IS NULL AND @DATMOV2 IS NULL)
OR (A.DATMOV >= @DATMOV1 AND A.DATMOV <= @DATMOV2))
AND (@DATFIL IS NULL OR A.DATMOV >= @DATFIL)
ORDER BY CONVERT(INT, DATMOV) DESC 
]]>

        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Indicador de Lancamento"      name="INDLCT"  type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código do Usuário"            name="CODUSU" sysnull="true" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Data Inicial de Movimento (yyyyMMdd)"    name="DATMOV1" size="20" type="System.String" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Data Final de Movimento (yyyyMMdd)"      name="DATMOV2" size="20" type="System.String" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Argumento de Seleção"         name="ARGSEL" type="System.String" size="50" default=" " output="" null="true"/>
          <parameter input="true" apply="true" desc ="Tipo de Selecao"              name="TIPSEL" type="System.Byte"  sysnull="true" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Número Máximo de Registros"   name="TOPREC" type="System.Int32" sysnull="true" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Numero de Dias para Exibição" name="NUMDAY" type="System.Int32" sysnull="true" output="" null="true"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" type="" method= "GetCurrentAccountBalance" return="DataTable" procname="PRREGCCRSALACT" desc ="Obtêm o saldo da conta corrente do tipo de lançamento e usuário especificado">
        <query>
          <![CDATA[
	SET NOCOUNT ON
 SELECT SUM(a.vlrmov*a.sigope) AS VLRTRA, 
        SUM(case when a.tipval=2 then (a.vlrmov*a.sigope) else 0 end) AS VLRVIN,
        SUM(case when a.tipval=7 then (a.vlrmov*a.sigope) else 0 end) AS VLRBLO        
   FROM TBREGCCR A (nolock) 
	INNER JOIN tbtipmov D (nolock) 
	   on (A.CODMOV = D.CODMOV) 
 	 left join tbtabger b (nolock) 
	   on (7 = B.NUMTAB AND a.starec = b.keycod)
 	 left join tbtabger c (nolock) 
	   on (10 = C.NUMTAB AND a.sigope = c.keycod)
 	 LEFT JOIN TBCADUSU e (NOLOCK) 
	   ON (A.UPDUSU = e.CODUSU)
 	 LEFT JOIN TBCADUSU F (NOLOCK) 
	   ON (A.CODUSU = F.CODUSU)
	INNER JOIN TBCADSTA G (NOLOCK) 
	   ON (A.STAREG = G.CODSTA)
    INNER JOIN TBCADSTA K (NOLOCK) 
	   ON (A.STABOR = K.CODSTA)
     LEFT JOIN TBUSUPRO H (NOLOCK) 
	   ON (A.USUPRO = H.USUPRO)
	 LEFT JOIN TBCADUSU I (NOLOCK) 
	   ON (H.CODUSU = I.CODUSU)
	 LEFT JOIN TBCADCTA J (NOLOCK) 
	   ON (A.NIDCTA = J.NIDCTA)
	INNER JOIN TBTABGER L (NOLOCK) 
	   ON (39 = L.NUMTAB AND A.INDLCT = L.KEYCOD)
	 LEFT JOIN TBTABGER M (NOLOCK) 
	   ON (59 = M.NUMTAB AND A.CODTRM = M.KEYCOD)
	WHERE (A.STAREC IN (1,2))
	  AND (A.TIPVAL IN(1,2,4))
      AND (@INDLCT IS NULL OR A.INDLCT = @INDLCT)
      AND (@CODUSU IS NULL OR A.CODUSU = @CODUSU)
	      ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Indicador de Lançamento" name="INDLCT" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="RemoveTransaction" return="int" returnmode="1" procname="PRREGCCRREMTRA" desc ="Remove uma transação" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0
IF(@UPDUSU=0)
   SET @RETURN_VALUE=-2

IF(EXISTS(SELECT 1 FROM TBREGCCR (NOLOCK) WHERE NIDTRA = @NIDTRA AND STAREC<>1))
   SET @RETURN_VALUE=-3

IF(@RETURN_VALUE=0)
  BEGIN
    IF(EXISTS(SELECT 1 FROM TBREGCCR (NOLOCK) WHERE NIDTRA = @NIDTRA AND STAREC=1))
      BEGIN
        UPDATE TBREGCCR SET STAREC=0, DATUPD=GETDATE(), UPDUSU = @UPDUSU 
         WHERE NIDTRA = @NIDTRA        
         SET @RETURN_VALUE=@@ROWCOUNT
      END     
    ELSE
      SET @RETURN_VALUE=-1
  END
RETURN @RETURN_VALUE  
        ]]>

        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da Transação" name="NIDTRA" type="System.String" size="13" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="0" message="" error="EMPTYDATARECORDS"/>
          <return operator=">" value="0" message="" error="OK">
            <![CDATA[TrappedError.UserError = string.Format("{0} REGISTROS ATUALIZADOS", RETURN_VALUE);]]>
          </return>
          <return value="-1" message="" error="TRANSACTIONNOTHASRECORD"/>
          <return value="-2" message="" error="REQUIREDUSEROPERATION"/>
          <return value="-3" message="" error="TRANSACTIONNOTENABLED"/>
        </returns>
      </item>

      <item script="true" alias="A." sql="" method="ClassifyRecord" return="int" returnmode="1" procname="PRREGCCRLIBLAN" desc ="Libera Lançamento para agregação ao saldo do usuário e atualiza o registro de vendas, se aplicável" returnvalue="1" remarks="Esta opção define o campo TIPVAL para 1, posteriormente identifica se o registro é de origem de vendas, caso positivo, atualiza as informações pertinentes a origem da venda e registro">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0
DECLARE @NIDBXA int
IF(@UPDUSU=0)
   SET @RETURN_VALUE=-3

IF(@RETURN_VALUE=0)
  BEGIN
    UPDATE TBREGCCR 
       SET TIPVAL = 1, UPDUSU=@UPDUSU, DATUPD=GETDATE() 
     WHERE NIDCCR = @NIDCCR AND TIPVAL<>1 
    IF(@@ERROR<>0)
        BEGIN
          SET @RETURN_VALUE=1        
          INSERT INTO TBAUDDAT (UPDUSU, AUDDAT, AUDKEY, AUDIDR, AUDIMS,AUDDSC) 
          VALUES (@UPDUSU,GETDATE(),43,@NIDCCR,100,'LANCAMENTO LIBERADO')  
  	    END
	ELSE
		SET @RETURN_VALUE=-1
   END	

IF(@RETURN_VALUE=0)
   BEGIN
		/* ATUALIZA REGISTRO DE VENDAS POS */
		SELECT @NIDBXA=NIDRVM 
          FROM TBREGCCR (NOLOCK) 
         WHERE NIDCCR = @NIDCCR AND TIPRFE = 1 AND STAREC<>0
   
        IF(@NIDBXA > 0)
          BEGIN
             UPDATE TBREGPOS 
                SET SITPGT = 2, UPDUSU = @UPDUSU, LIBPGT = GETDATE(), DATUPD = GETDATE()
              WHERE NIDRVM = @NIDBXA           
          END    
    END				
RETURN @RETURN_VALUE
          
        ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Conta Corrente" name="NIDCCR" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Tipo de Valor" name="TIPVAL" type="System.Byte" default="1" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" default="0" output="" null="false"/>

        </parameters>
        <returns>
          <return value="0" message="" error="">
            <![CDATA[TrappedError.UserError = "NAO FOI POSSIVEL EXECUTAR A OPERACAO";]]>
          </return>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="">
            <![CDATA[TrappedError.UserError = "PARAMETROS INCORRETOS";]]>
          </return>
          <return value="-2" message="" error="">
            <![CDATA[TrappedError.UserError = "FALHA NA ATUALIZAÇÃO DO REGISTRO DE LANÇAMENTO";]]>
          </return>
          <return value="-3" message="" error="REQUIREDUSEROPERATION"/>
        </returns>
      </item>

      <item script="true" alias="A." sql="" method="ChangeTrustLevel" return="int" returnmode="1" procname="PRREGCCRCHGREGHAB" desc ="Altera a condição de registro habilitado para processamento (Trust Level)" returnvalue="1" remarks="Esta função só opera em nivel de transação" >
        <query>
          <![CDATA[
SET @RETURN_VALUE = 0
IF(@UPDUSU=0)
   SET @RETURN_VALUE=-1

IF(EXISTS(SELECT 1 FROM TBREGCCR (NOLOCK) WHERE NIDTRA = @NIDTRA AND STAREC<>1))
   SET @RETURN_VALUE=-2

IF(@RETURN_VALUE=0)
  BEGIN
    UPDATE TBREGCCR 
       SET REGHAB = @REGHAB 
     WHERE NIDTRA = @NIDTRA AND STAREC = 1
    IF(@@ERROR=0)
	    SET @RETURN_VALUE = 1
  END      
RETURN @RETURN_VALUE          
        ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da Transação" name="NIDTRA" size="13" type="System.String" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Marcador de Atualização do Registro" name="REGHAB" type="System.Byte" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="0" message="" error="">
            <![CDATA[TrappedError.UserError = "NAO FOI POSSIVEL EXECUTAR A OPERACAO";]]>
          </return>
          <return value="1" message="REGISTRO ATUALIZADO COM SUCESSO" error="OK"/>
          <return value="-1" message="" error="REQUIREDUSEROPERATION"/>
          <return value="-2" message="" error="TRANSACTIONNOTENABLED"/>
        </returns>
      </item>

      <item script="true" alias="A." sql="" method="RevertTransaction" return="int" returnmode="1" procname="PRREGCCRREVTRA" desc ="Reverte uma transação para estorno ou cancelamento" returnvalue="1" remarks="Operação            Status Registro     Status Bordero@2 - Estorno         25                  23      @3 - Cancelamento    23                  25" >
        <query>
          <![CDATA[
    SET @RETURN_VALUE = 0
    IF(@NIDTRA='')
       SET @RETURN_VALUE=-1
    IF(@UPDUSU=0)
       SET @RETURN_VALUE=-3
       
--    IF(EXISTS(SELECT 1 FROM TBREGCCR (NOLOCK) WHERE NIDTRA = @NIDTRA AND STAREC<>1))
--      SET @RETURN_VALUE=-4
       

    DECLARE @RESULT TABLE (
        [REFNID] INT           DEFAULT 0 NOT NULL,
        [REGHAB] TINYINT       DEFAULT ((1)) NOT NULL,
        [STAREC] TINYINT       DEFAULT ((1)) NOT NULL,
        [TIPLCT] SMALLINT      DEFAULT 0 NOT NULL,
        [REGPRO] INT           DEFAULT 0 NOT NULL,
        [LOTFIN] INT           DEFAULT 0 NOT NULL,
        [CODAPR] INT           DEFAULT ((1)) NOT NULL,
        [ORGLCT] TINYINT       DEFAULT ((1)) NOT NULL,
        [DATCAD] DATETIME      DEFAULT getdate() NOT NULL,
        [DATUPD] DATETIME      DEFAULT getdate() NOT NULL,
        [UPDUSU] INT           DEFAULT 0 NOT NULL,
        [REFLOT] VARCHAR (10)  NULL,
        [CODSOL] VARCHAR (15)  DEFAULT ('') NOT NULL,
        [CODPRT] INT           NOT NULL,
        [CODUSU] INT           NOT NULL,
        [USUPRO] INT           NOT NULL,
        [NIDBOL] INT           NOT NULL,
        [SIGOPE] SMALLINT      DEFAULT 0 NOT NULL,
        [LINREF] SMALLINT      DEFAULT 0 NOT NULL,
        [TIPLIN] SMALLINT      DEFAULT 0 NOT NULL,
        [IDEPRE] TINYINT       DEFAULT 0 NOT NULL,
        [CODMOV] INT           NOT NULL,
        [DATPCL] DATE          NULL,
        [NUMPCL] INT           DEFAULT 0 NOT NULL,
        [TIPVAL] TINYINT       DEFAULT 0 NOT NULL,
        [VLRMOV] MONEY         NOT NULL,
        [DSCMOV] VARCHAR (150) NOT NULL,
        [DATVEN] DATE          NULL,
        [DATMOV] DATETIME      NOT NULL,
        [CONUSU] TINYINT       DEFAULT 0 NOT NULL,
        [STAREG] INT           NOT NULL,
        [NUMBOR] VARCHAR (14)  DEFAULT ('') NOT NULL,
        [STABOR] INT           DEFAULT 0 NOT NULL,
        [DATPRC] DATETIME      NULL,
        [NIDUCT] INT           DEFAULT 0 NOT NULL,
        [INDLCT] TINYINT       DEFAULT ((1)) NOT NULL,
        [NIDCTA] INT           DEFAULT 0 NOT NULL,
        [NIDTRA] VARCHAR (13)  DEFAULT ('') NOT NULL,
        [CANTRA] VARCHAR (13)  DEFAULT ('') NOT NULL,
        [NIDTRB] INT           DEFAULT 0 NOT NULL,
        [NUMIPA] VARCHAR (50)  DEFAULT ('') NOT NULL,
        [NIDTOK] INT           DEFAULT 0 NOT NULL,
        [CODMOE] INT           DEFAULT ((1)) NOT NULL,
        [NUMREX] VARCHAR (20)  NULL,
        [TIPRFE] TINYINT       DEFAULT 0 NOT NULL,
        [NIDRVM] INT           DEFAULT 0 NOT NULL,
        [NIDPAG] INT           DEFAULT 0 NOT NULL,
        [CODTRM] TINYINT       DEFAULT ((1)) NOT NULL
    )

IF(@RETURN_VALUE=0)
        BEGIN
        INSERT INTO @RESULT (
                    REFNID,
                    REGHAB,
                    STAREC,
                    TIPLCT,
                    REGPRO,
                    LOTFIN,
                    CODAPR,
                    ORGLCT,
                    DATCAD,
                    DATUPD,
                    UPDUSU,
                    REFLOT,
                    CODSOL,
                    CODPRT,
                    CODUSU,
                    USUPRO,
                    NIDBOL,
                    SIGOPE,
                    LINREF,
                    TIPLIN,
                    IDEPRE,
                    CODMOV,
                    DATPCL,
                    NUMPCL,
                    TIPVAL,
                    VLRMOV,
                    DSCMOV,
                    DATVEN,
                    DATMOV,
                    CONUSU,
                    STAREG,
                    NUMBOR,
                    STABOR,
                    DATPRC,
                    NIDUCT,
                    INDLCT,
                    NIDCTA,
                    NIDTRA,
                    CANTRA,
                    NIDTRB,
                    NUMIPA,
                    NIDTOK,
                    CODMOE,
                    NUMREX,
                    TIPRFE,
                    NIDRVM,
                    NIDPAG,
                    CODTRM)
        SELECT
                    NIDCCR,
                    REGHAB,
                    STAREC,
                    999 TIPLCT,
                    REGPRO,
                    LOTFIN,
                    CODAPR,
                    ORGLCT,
                    DATCAD,
                    DATUPD,
                    @UPDUSU,
                    REFLOT,
                    CODSOL,
                    CODPRT,
                    CODUSU,
                    USUPRO,
                    NIDBOL,
                    CASE WHEN SIGOPE=1 THEN -1 ELSE 1 END  SIGOPE,
                    LINREF,
                    TIPLIN,
                    IDEPRE,
                    CODMOV,
                    DATPCL,
                    NUMPCL,
                    TIPVAL,
                    VLRMOV,
                    DSCMOV,
                    DATVEN,
                    CASE WHEN @CHGDAT=0 THEN DATMOV ELSE GETDATE()END,
                    CONUSU,
                    STAREG,
                    NUMBOR,
                    STABOR,
                    DATPRC,
                    NIDUCT,
                    INDLCT,
                    NIDCTA,
                    '' NIDTRA,
                    NIDTRA CANTRA,
                    0 NIDTRB,
                    '' NUMIPA,
                    0 NIDTOK,
                    CODMOE,
                    NUMREX,
                    0 TIPRFE,
                    0 NIDRVM,
                    0 NIDPAG,
                    @CODTRM
                FROM TBREGCCR (NOLOCK)
                WHERE NIDTRA = @NIDTRA
                  AND STAREC=1

            IF(@@ROWCOUNT>0)
                BEGIN
                    DECLARE @LOTFIN INT
                    DECLARE @NXTTRA INT
                    DECLARE @NEWTRA VARCHAR(13)
                    EXEC PRGETNXTNUM 12, @LOTFIN OUTPUT
                    EXEC PRGETNXTNUM  6, @NXTTRA OUTPUT
                    SET @NEWTRA = '999' + RIGHT('00000000' + CAST(@NXTTRA AS VARCHAR(8)),8)
                    UPDATE @RESULT 
					   SET LOTFIN=@LOTFIN, 
					       NIDTRA = @NEWTRA
                    DELETE FROM @RESULT WHERE IDEPRE=0 AND @CODTRM=3

                INSERT INTO TBREGCCR(
                    REFNID,
                    REGHAB,
                    STAREC,
                    TIPLCT,
                    REGPRO,
                    LOTFIN,
                    CODAPR,
                    ORGLCT,
                    UPDUSU,
                    REFLOT,
                    CODSOL,
                    CODPRT,
                    CODUSU,
                    USUPRO,
                    NIDBOL,
                    SIGOPE,
                    LINREF,
                    TIPLIN,
                    IDEPRE,
                    CODMOV,
                    DATPCL,
                    NUMPCL,
                    TIPVAL,
                    VLRMOV,
                    DSCMOV,
                    DATVEN,
                    DATMOV,
                    CONUSU,
                    STAREG,
                    NUMBOR,
                    STABOR,
                    DATPRC,
                    NIDUCT,
                    INDLCT,
                    NIDCTA,
                    NIDTRA,
                    CANTRA,
                    NIDTRB,
                    NUMIPA,
                    NIDTOK,
                    CODMOE,
                    NUMREX,
                    TIPRFE,
                    NIDRVM,
                    NIDPAG,
                    CODTRM)

                SELECT
                    REFNID,
                    REGHAB,
                    STAREC,
                    TIPLCT,
                    REGPRO,
                    LOTFIN,
                    CODAPR,
                    ORGLCT,
                    UPDUSU,
                    REFLOT,
                    CODSOL,
                    CODPRT,
                    CODUSU,
                    USUPRO,
                    NIDBOL,
                    SIGOPE,
                    LINREF,
                    TIPLIN,
                    IDEPRE,
                    CODMOV,
                    DATPCL,
                    NUMPCL,
                    TIPVAL,
                    VLRMOV,
                    DSCMOV,
                    DATVEN,
                    DATMOV,
                    CONUSU,
                    STAREG,
                    NUMBOR,
                    STABOR,
                    DATPRC,
                    NIDUCT,
                    INDLCT,
                    NIDCTA,
                    NIDTRA,
                    CANTRA,
                    NIDTRB,
                    NUMIPA,
                    NIDTOK,
                    CODMOE,
                    NUMREX,
                    TIPRFE,
                    NIDRVM,
                    NIDPAG,
                    CODTRM
                FROM @RESULT

				IF(@@ERROR=0)
					BEGIN
						UPDATE TBREGCCR 
						   SET STAREG = CASE WHEN @CODTRM = 2 THEN 25 ELSE 23 END,
						       STABOR = CASE WHEN @CODTRM = 2 THEN 23 ELSE 25 END
						 WHERE NIDTRA = @NIDTRA
						   AND STAREC = 1
						SET @RETURN_VALUE=1
					END
                END
            ELSE      
                SET @RETURN_VALUE=-2

    END
    RETURN @RETURN_VALUE;    
          
        ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da Transação" name="NIDTRA" size="13" type="System.String" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Operação de Reversão" name="CODTRM" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Alterar data do movimento" name="CHGDAT" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="0" message="" error="">
            <![CDATA[TrappedError.UserError = "NAO FOI POSSIVEL EXECUTAR A OPERACAO";]]>
          </return>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="TRANSACTIONNOTFOUND"/>
          <return value="-2" message="" error="TRANSACTIONNOTHASRECORD"/>
          <return value="-3" message="" error="REQUIREDUSEROPERATION"/>
          <return value="-4" message="" error="TRANSACTIONNOTENABLED"/>
        </returns>
      </item>

      <item webtype="POST" script="true" alias="A." sql="" method="CloseTransaction" return="int" returnmode="1" procname="PRREGCCRCLONIDTRA" desc ="Altera a condição de status de bordero para 29 (Fechamento da Transacao)" returnvalue="1" remarks="" >
        <query>
          <![CDATA[
SET @RETURN_VALUE =0

IF(@UPDUSU=0)
  SET @RETURN_VALUE=-1
IF(@NIDTRA='' OR @NIDTRA IS NULL)
  SET @RETURN_VALUE=-2
IF(@STABOR<=0)
  SET @RETURN_VALUE=-3

IF(@RETURN_VALUE=0)
  BEGIN
      UPDATE TBREGCCR
         SET STABOR = @STABOR,
             UPDUSU = @UPDUSU,
	           DATUPD = GETDATE()
       WHERE NIDTRA = @NIDTRA
         AND STAREC = 1          
       IF(@@ERROR=0)
          SET @RETURN_VALUE = @@ROWCOUNT
   END     
RETURN @RETURN_VALUE          
        ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da Transação" name="NIDTRA" size="13" type="System.String" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Status do Borderô" name="STABOR" type="System.Int16" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return operator=">" value="0" message="" error="OK">
            <![CDATA[TrappedError.UserError = string.Format("{0} REGISTROS COPIADOS", RETURN_VALUE);]]>
          </return>
          <return value="0" message="NAO FOI POSSIVEL EXECUTAR A OPERACAO" error=""/>
          <return value="-1" message="" error="REQUIREDUSEROPERATION"/>
          <return value="-2" message="" error="TRANSACTIONNOTGIVEN"/>
          <return value="-3" message="" error="INVALIDSTATUSRECORD"/>
          
        </returns>
      </item>
    </methods>


    <selectallcommand>
      <item script="true" alias="A." sql="" type="" method="Select" return="DataTable" procname="PRREGCCRSELTRA" desc ="Recupera os registros da transação informada">
        <query>
          <![CDATA[SELECT A.*, B.DSCMOV MOVDSC 
 FROM TBREGCCR (NOLOCK) A
INNER JOIN TBTIPMOV (NOLOCK) B
   ON (B.CODMOV = A.CODMOV)
]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da Transação" name="NIDTRA" type="System.String" size="13" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" type="" method="Select" return="DataTable" procname="PRREGCCRSELTIPIND" desc ="Seleciona o registro de acordo com o Tipo e Indicador de Lançamento">
        <query>
          <![CDATA[SELECT * FROM TBREGCCR (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Tipo de Lançamento" name="TIPLCT" type="System.Int16"  default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Indicador de Lançamento" name="INDLCT" type="System.Int16" default="" output="" null="false"/>
        </parameters>
      </item>

    </selectallcommand>
  </item>
  <item create="true"  id="34" name="TBREGMON">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>110000000000</procedure>
    <asp>1100000000</asp>
    <csharp>110000000</csharp>
    <SelectAllList></SelectAllList>
    <StringSqlSelectAll></StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll>true</CreateSelectionAll>
    <SelectAllAlias></SelectAllAlias>
    <MaxFields></MaxFields>
  </item>
  <item create="true"  id="35" name="TBAUDDAT" friendlyname="Auditoria" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>100000000</procedure>
    <asp>100000000</asp>
    <csharp>10000000</csharp>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <MaxFields></MaxFields>
    <insertcommand key="Identity" exceptionparamns="'DATCAD','DATUPD', 'AUDNUM'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>

  </item>
  <item create="true"  id="36" name="TBCADCTT">
    <UpdateKey>Identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>fALSE</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>111100000</asp>
    <csharp>11110000</csharp>
    <SelectAllList>CODUSU</SelectAllList>
    <StringSqlSelectAll></StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll>False</CreateSelectionAll>
    <SelectAllAlias></SelectAllAlias>
    <MaxFields></MaxFields>
  </item>
  <item create="true"  id="37" name="TBINSBXA" friendlyname="Instruction Low Billet" modelversion="3">
    <UpdateKey>Identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <procedure>1111000000</procedure>
    <asp>111100000</asp>
    <csharp>11110000</csharp>

    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query order="A.TIPBOL, A.TIPREG, A.INSBXA">
          <![CDATA[
 SELECT A.NIDINS, A.TIPBOL, A.INSBXA, A.STAREC, A.DATCAD, A.UPDUSU, A.CODREF, ISNULL(E.DSCTAB,'') AS DSCREG
    ,ISNULL(D.DSCTAB,'') AS DSCINS
    ,ISNULL(B.DSCTAB,'') AS DSCREC
    ,ISNULL(C.LGNUSU,'') AS DSCUPD
   FROM TBINSBXA (NOLOCK) A
   LEFT JOIN TBTABGER B (NOLOCK) ON (7 = B.NUMTAB AND A.STAREC = B.KEYCOD)
   LEFT JOIN TBCADUSU C (NOLOCK) ON (A.UPDUSU = C.CODUSU)
   LEFT JOIN TBTABGER D (NOLOCK) ON (35 = D.NUMTAB AND A.INSBXA = D.KEYCOD)
   LEFT JOIN TBTABGER E (NOLOCK) ON (907 = E.NUMTAB AND A.TIPREG = E.KEYCOD)
        ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Tipo de Boleto" name="TIPBOL" type="System.Byte" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectallcommand>

    <insertcommand key="Identity" exceptionparamns="'DATCAD','DATUPD', 'NIDINS'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="Identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[SET @DATUPD = GETDATE();]]>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="InstructionLowBillet" procname="" desc ="Seleciona O registro de instrução de baixa de acordo com o id de registro de instrução">
        <query>
          <![CDATA[SELECT * FROM TBINSBXA (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Instrução de Baixa" name="NIDINS" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
  </item>
  <item create="true"  id="38" name="TBCADTAR" friendlyname="Tarifacao" modelversion="3">
    <UpdateKey>Identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <extendedmodel>
      <![CDATA[select TOP 1 nidtar,nivtar,usupro,codtar,starec,codmoe,datcad,datupd,updusu,fmtcob,pcttar,vlrtar,tarbas,vlrinf, vlrmax, codbnd, tiplin, modcrt, tiplin parini, tiplin parfin, vlrmax as extvbs, vlrmax as extvlr from tbcadtar (nolock)]]>
    </extendedmodel>
    <procedure>1111000000</procedure>
    <asp>111100000</asp>
    <csharp>11110000</csharp>
    <selectcommand>
      <item script="true" alias="A." sql="SELECT top 1 a.*, b.parini, b.parfin FROM TBCADTAR (nolock) A INNER JOIN TBTARMOD (NOLOCK) B ON (A.MODCRT = B.MODCRT)" method="Select" return="Tarifacao" procname="PRCADTARSEL" desc ="Seleciona o ID de Tarifação de Acordo com o ID de Registro de Tarifação fornecido">
        <query>
          <![CDATA[SELECT * FROM TBCADTAR (nolock) A INNER JOIN TBTARMOD (NOLOCK) B ON (A.MODCRT = B.MODCRT)]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Tarifação" name="NIDTAR" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="Select" return="Tarifacao" procname="PRCADTARSELPAR" desc ="Seleciona o ID de Tarifação de Acordo com os parâmetros fornecidos">
        <query>
          <![CDATA[SELECT * FROM TBCADTAR (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Usuário/Gestor" name="USUPRO" type="int" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Nível de Tarifação" name="NIVTAR" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código de Tarifa" name="CODTAR" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Status de Registro" name="STAREC" type="System.Byte" default="1" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código de Bandeira" name="CODBND" type="System.Int16" default="0" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="Select" return="Tarifacao" procname="PRCADTARSELPAR" desc ="Seleciona o ID de Tarifação de Acordo com os parâmetros fornecidos">
        <query>
          <![CDATA[SELECT * FROM TBCADTAR (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Usuário/Gestor" name="USUPRO" type="int" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código de Tarifa" name="CODTAR" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Status de Registro" name="STAREC" type="System.Byte" default="1" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código de Bandeira" name="CODBND" type="System.Int16" default="0" output="" null="false"/>
        </parameters>
      </item>
      <item script="false" alias="A." sql="SELECT top 1 * FROM TBCADTAR (nolock) A" method="Select"  type="List" return="Tarifacao" procname="PRCADTARSELALL"   desc ="Seleciona todos os registros com base no usuario e nivel de tarifação">
        <query/>
        <parameters>
          <parameter input="true" desc ="Código do Usuario" name="USUPRO" type="int" sysnull="false" default="" output="" null="false"/>
          <parameter input="true" desc ="Nivel de Tarifação" name="NIVTAR" type="System.Byte" sysnull="false" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="select TOP 1 nidtar,nivtar,usupro,codtar,starec,codmoe,datcad,updusu,fmtcob,pcttar,vlrtar,tarbas,vlrinf, vlrmax, codbnd, tiplin, modcrt, tiplin parini, tiplin parfin, vlrmax as extvbs, vlrmax as extvlr from tbcadtar (nolock)" method="BilletTax" return="Tarifacao" procname="PRCADTARCALTARBOL" desc ="Calcula a Tarifa do Boleto" returnvalue="0">
        <query>
          <![CDATA[
IF(@CODTAR=0)
  BEGIN
    SELECT @CODTAR= ISNULL(CODREF,0) 
      FROM TBINSBXA (NOLOCK) 
     WHERE TIPBOL=@TIPBOL 
       AND INSBXA=15
       AND STAREC=1  
  END
IF(@CODTAR>0)
  EXEC PRCADTARCAL @USUPRO, @USUCED, @CODTAR, @VLRBOL, 1, 1,NULL, NULL, 1,@CODBND,0,0
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="false" desc ="Valor do Boleto" name="VLRBOL" type="System.Double" default="" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Usuário Cedente" name="USUCED" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Tipo de Boleto" name="TIPBOL" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Código da Tarifa" name="CODTAR" type="System.Int16" default="0" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Gestor" name="USUPRO" type="System.Int32" default="0" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Código da Bandeira" name="CODBND" type="System.Int16" default="0" output="" null="false"/>
        </parameters>
      </item>

    </selectcommand>
    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD', 'NIDTAR'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>SET @DATUPD=GETDATE()</pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </updatecommand>

    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRCADTARSELALL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query order="A.CODTAR, A.FMTCOB, A.CODBND, A.TIPLIN, A.MODCRT">
          <![CDATA[
SELECT A.*
	  ,ISNULL(D.DSCTAB,'') AS DSCTAR
  	  ,ISNULL(B.DSCTAB,'Não definido') AS DSCREC
      ,ISNULL(C.LGNUSU,'') AS DSCUPD
      ,ISNULL(E.DSCTAB,'N/D') AS DSCFCO
      ,ISNULL(F.DSCTAB,'N/A') AS DSCBND
      ,ISNULL(G.DSCTAB,'N/A') AS DSCLIN
      ,ISNULL(H.DSCMOD,'N/A') AS DSCMOD
  FROM TBCADTAR A WITH (NOLOCK) 
  LEFT JOIN TBTABGER B (NOLOCK) 
    ON (7 = B.NUMTAB AND A.STAREC = B.KEYCOD)
  LEFT JOIN TBCADUSU C (NOLOCK) 
    ON (A.UPDUSU = C.CODUSU)
  LEFT JOIN TBTABGER D (NOLOCK) 
    ON (24 = D.NUMTAB AND A.CODTAR = D.KEYCOD)
  LEFT JOIN TBTABGER E (NOLOCK) 
    ON (30 = E.NUMTAB AND A.FMTCOB = E.KEYCOD)          
 INNER JOIN TBTABGER F (NOLOCK) 
    ON (63 = F.NUMTAB AND A.CODBND = F.KEYCOD)    
 LEFT JOIN TBTABGER G (NOLOCK) 
    ON (44 = G.NUMTAB AND A.TIPLIN = G.KEYCOD)    
 INNER JOIN TBTARMOD H (NOLOCK) 
    ON (A.MODCRT = H.MODCRT)    
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Usuario" name="USUPRO" type="int" sysnull="false" default="" output="" null="false"/>
          <parameter input="true" desc ="Nivel de Tarifação" name="NIVTAR" type="System.Byte" sysnull="false" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectallcommand>
    <methods>
      <item script="true" alias="A." sql="" method="Copy" return="int" returnmode="2" procname="PRCADTARCPY" desc ="Copia os registros de configuração de tarifas de um usuário base para outro usuário">
        <query>
          <![CDATA[
DECLARE @RETURN_VALUE INT =0
INSERT 
  INTO TBCADTAR (NIVTAR, USUPRO, FMTCOB, TARBAS, CODMOE, CODTAR, VLRTAR, VLRINF, VLRMAX,UPDUSU,CODBND,TIPLIN,MODCRT ) 
SELECT @NIVTAR, @USUPRO, FMTCOB, TARBAS, CODMOE, CODTAR, vlrtar, vlrinf, vlrmax,@UPDUSU,CODBND,TIPLIN,MODCRT 
  FROM TBCADTAR (NOLOCK)
 WHERE STAREC = 1 
   AND USUPRO =@SRCUSU
   AND NIVTAR=@SRCNIV 
   AND RIGHT('000' + CONVERT(VARCHAR(3),CODTAR),3) 
		+ RIGHT('000' + CONVERT(VARCHAR(3),CODBND),3) 
		+ RIGHT('000' + CONVERT(VARCHAR(3),TIPLIN),3) 
		+ RIGHT('000' + CONVERT(VARCHAR(3),MODCRT),3) 
   NOT IN (SELECT RIGHT('000' + CONVERT(VARCHAR(3),CODTAR),3) 
              + RIGHT('000' + CONVERT(VARCHAR(3),CODBND),3) 
              + RIGHT('000' + CONVERT(VARCHAR(3),TIPLIN),3) 
                + RIGHT('000' + CONVERT(VARCHAR(3),MODCRT),3) 
             FROM TBCADTAR (NOLOCK) 
			WHERE USUPRO=@USUPRO AND NIVTAR=@NIVTAR)
SET @RETURN_VALUE = @@ROWCOUNT;
SELECT @RETURN_VALUE;
]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Usuário de Configuração de Destino" name="USUPRO" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Nivel de Configuração de Destino" name="NIVTAR" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Configuração de Origem" name="SRCUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Nivel de Configuração de Origem" name="SRCNIV" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código do Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return operator=">" value="0" message="" error="OK">
            <![CDATA[TrappedError.UserError = string.Format("{0} REGISTROS COPIADOS", RETURN_VALUE);]]>
          </return>
          <return value="0" message="" error="">
            <![CDATA[TrappedError.UserError= "NENHUM REGISTRO COPIADO";]]>

          </return>
          <return value="-2" message="" error="TRANSACTIONNOTHASRECORD"/>
        </returns>
      </item>

      <item script="true" alias="A." sql="" method="Find" return="int" returnmode="1" procname="PRCADTARFND" desc ="Procura por um registro de tarifação de acordo com os parâmetros fornecidos" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE =0
SELECT @RETURN_VALUE = ISNULL(NIDTAR ,0)
  FROM TBCADTAR (NOLOCK) 
 WHERE USUPRO =@USUPRO 
       AND CODTAR =@CODTAR 
  	   AND NIVTAR =@NIVTAR        
       AND CODBND =@CODBND
       AND TIPLIN =@TIPLIN
       AND MODCRT =@MODCRT
RETURN @RETURN_VALUE       
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Usuário de Configuração de Destino" name="USUPRO" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Nivel de Configuração de Destino" name="NIVTAR" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código da Tarifa" name="CODTAR" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código da Bandeira" name="CODBND" type="System.Int16" default="0" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código do Tipo de Linha de Venda" name="TIPLIN" type="System.Byte" default="0" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Modalidade de Cartão" name="MODCRT" type="System.Byte" default="0" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="LocateTarifacao" return="int" returnmode="1" procname="PRCADTARFNDTAR" desc ="Verifica o usuário detentor do registro de tarifa e obtêm um ID de Tarifação com base nos parâmetros fornecidos" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE = 0
EXEC PRCADTARFND @CODUSU, 2, @CODTAR, @CODBND, @TIPLIN, @MODCRT, @RETURN_VALUE OUTPUT
IF(@RETURN_VALUE=0)
  BEGIN
 		EXEC PRCADTARFND @USUPRO, 1, @CODTAR, @CODBND, @TIPLIN, @MODCRT, @RETURN_VALUE OUTPUT
 		IF(@RETURN_VALUE=0)
 			BEGIN
 				IF(@FINLIV=1)
 				   BEGIN
							EXEC PRCADTARFND 13, 1, @CODTAR, @CODBND, @TIPLIN, @MODCRT, @RETURN_VALUE OUTPUT   				   	   
 				   END
 			END
  END          
RETURN @RETURN_VALUE     
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Gestor" name="USUPRO" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código da Tarifa" name="CODTAR" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Define se localiza pelo gestor de produto plataforma" name="FINLIV" type="System.Boolean" default="true" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código da Bandeira" name="CODBND" type="System.Int16" default="0" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código do tipo de linha" name="TIPLIN" type="System.Byte" default="0" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Modalidade de Cartão" name="MODCRT" type="System.Byte" default="0" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="select TOP 1 nidtar,nivtar,usupro,codtar,starec,codmoe,datcad,updusu,fmtcob,pcttar,vlrtar,tarbas,vlrinf, vlrmax, codbnd, tiplin, modcrt, tiplin parini, tiplin parfin, vlrmax as extvbs, vlrmax as extvlr from tbcadtar (nolock)" method="Calculate" return="Tarifacao" returnmode="1" procname="PRCADTARCAL" desc ="Verifica o usuário detentor do registro de tarifa e obtêm um ID de Tarifação com base nos parâmetros fornecidos" returnvalue="0">
        <query>
          <![CDATA[
DECLARE @NIDTAR INT =0 
DECLARE @RETURN_VALUE INT =0 
DECLARE @NUMDYS INT =0 
DECLARE @FMTCOB TINYINT = 0 
DECLARE @EXTVLR MONEY = 0 
DECLARE @VLRTAR MONEY = 0 
DECLARE @TARBAS MONEY = 0 
DECLARE @PCTTAR MONEY = 0 
DECLARE @EXPTAR MONEY = 0   

EXEC PRCADTARFNDTAR @USUPRO, @CODUSU, @CODTAR,@FINLIV,@CODBND,@TIPLIN,@MODCRT, @NIDTAR OUTPUT 

IF(@NIDTAR>0)
		BEGIN
			SELECT @FMTCOB = fmtcob, 
				   @VLRTAR = vlrtar, 
				   @PCTTAR = pcttar 
			  FROM tbcadtar (nolock) 
			 WHERE nidtar = @NIDTAR 

      /* VERIFICA SE EXISTE EXPANSAO DA TARIFA E TRAZ A NOVA TARIFA */
      EXEC PRCADTARGETEXPTAR @NIDTAR, @EXPTAR OUTPUT
     
      IF(@EXPTAR>0)
         SET @VLRTAR = @EXPTAR
      

		/* TARIFA POR VALOR */ 
			IF( @FMTCOB = 1 ) 
				BEGIN 
					SET @EXTVLR = @VLRTAR 
				END		

		/* TARIFA POR PERCENTUAL */ 
			IF( @FMTCOB = 2 ) 
				BEGIN 
					SET @EXTVLR = Round(@VLRBAS * ( @VLRTAR / 100 ), 2) 
					IF ( @TARBAS > 0 ) 
						BEGIN 
							IF ( @EXTVLR < @TARBAS ) 
								BEGIN 
									SET @EXTVLR = @TARBAS; 
								END 
						END 
				END 
	
			IF ( @FMTCOB = 3 ) 
				BEGIN 
					SET @EXTVLR = Round(@VLRBAS * ( @VLRTAR / 100 ), 2) 
					IF ( @EXTVLR = 0 ) 
						BEGIN 
							IF ( @TARBAS > 0 ) 
								SET @EXTVLR = @TARBAS; 
						END 
				END 

			IF ( @FMTCOB = 4 ) 
				BEGIN 
					SET @NUMDYS = Datediff(dd, @DATVL1, @DATVL2); 
					SET @EXTVLR = Round(@VLRBAS * ( ( @VLRTAR / 100 ) / 30 ) * @NUMDYS, 2); 
				END 

			IF ( @FMTCOB = 5 ) 
				BEGIN 
					SET @EXTVLR = Round(@VLRBAS * ( ( @VLRTAR * @CURPCL ) / 100 ), 2); 
				END 

			IF ( @FMTCOB = 6 ) 
				BEGIN 
					SET @EXTVLR = Round(@VLRBAS * ( @PCTTAR / 100 ), 2); 
					SET @EXTVLR = @EXTVLR + @TARBAS; 
				END 

		END

	SELECT nidtar, nivtar, usupro, codtar, a.starec, codmoe, a.datcad, a.updusu, fmtcob, pcttar, vlrtar, tarbas, vlrinf, vlrmax, codbnd, tiplin, a.modcrt, 
       isnull(b.parini,0) parini, 
       isnull(b.parfin,0) parfin, 
       0       AS EXTVBS, 
       @EXTVLR as EXTVLR 
  from tbcadtar (nolock) a 
  left join tbtarmod (nolock) b
    on (a.modcrt = b.modcrt)
 WHERE nidtar = @NIDTAR           
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Gestor" name="USUPRO" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código da Tarifa" name="CODTAR" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Valor Base" name="VLRBAS" type="System.Decimal" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Número de Parcelas" name="NUMPCL" type="System.Byte" default="1" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Parcela Atual" name="CURPCL" type="System.Byte" default="1" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Data de Validação 1" name="DATVL1" sysnull="true" type="System.DateTime" default="null" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Data de Validação 2" name="DATVL2" sysnull="true" type="System.DateTime" default="null" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Marcar Livre como Gestor Padrao" name="FINLIV"  type="System.Boolean" default="false" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código da Bandeira" name="CODBND" type="System.Int16" default="0" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código do tipo de linha" name="TIPLIN" type="System.Byte" default="0" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Modalidade de Cartão" name="MODCRT" type="System.Byte" default="0" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="select TOP 1 nidtar,nivtar,usupro,codtar,starec,codmoe,datcad,updusu,fmtcob,pcttar,vlrtar,tarbas,vlrinf, vlrmax, codbnd, tiplin, modcrt, tiplin parini, tiplin parfin, vlrmax as extvbs, vlrmax as extvlr from tbcadtar (nolock)" method="Calculate" return="Tarifacao" returnmode="1" procname="PRCADTARCALNID" desc ="Verifica o usuário detentor do registro de tarifa e obtêm um ID de Tarifação com base nos parâmetros fornecidos" returnvalue="0">
        <query>
          <![CDATA[
          
	DECLARE @RETURN_VALUE INT =0 
	DECLARE @NUMDYS INT =0 
	DECLARE @FMTCOB TINYINT = 0 
	DECLARE @EXTVLR MONEY = 0 
	DECLARE @VLRTAR MONEY = 0 
	DECLARE @EXPTAR MONEY = 0   
	DECLARE @TARBAS MONEY = 0 
	DECLARE @PCTTAR MONEY = 0 

	IF(@NIDTAR>0)
		BEGIN
			SELECT @FMTCOB = fmtcob, 
				   @VLRTAR = vlrtar, 
				   @PCTTAR = pcttar 
			  FROM tbcadtar (nolock) 
			 WHERE nidtar = @NIDTAR 



     /* VERIFICA SE EXISTE EXPANSAO DA TARIFA E TRAZ A NOVA TARIFA */
      EXEC PRCADTARGETEXPTAR @NIDTAR, @EXPTAR OUTPUT
     
      IF(@EXPTAR>0)
         SET @VLRTAR = @EXPTAR

		/* TARIFA POR VALOR */ 
			IF( @FMTCOB = 1 ) 
				BEGIN 
					SET @EXTVLR = @VLRTAR 
				END		

		/* TARIFA POR PERCENTUAL */ 
			IF( @FMTCOB = 2 ) 
				BEGIN 
					SET @EXTVLR = Round(@VLRBAS * ( @VLRTAR / 100 ), 2) 
					IF ( @TARBAS > 0 ) 
						BEGIN 
							IF ( @EXTVLR < @TARBAS ) 
								BEGIN 
									SET @EXTVLR = @TARBAS; 
								END 
						END 
				END 
	
			IF ( @FMTCOB = 3 ) 
				BEGIN 
					SET @EXTVLR = Round(@VLRBAS * ( @VLRTAR / 100 ), 2) 
					IF ( @EXTVLR = 0 ) 
						BEGIN 
							IF ( @TARBAS > 0 ) 
								SET @EXTVLR = @TARBAS; 
						END 
				END 

			IF ( @FMTCOB = 4 ) 
				BEGIN 
					SET @NUMDYS = Datediff(dd, @DATVL1, @DATVL2); 
					SET @EXTVLR = Round(@VLRBAS * ( ( @VLRTAR / 100 ) / 30 ) * @NUMDYS, 2); 
				END 

			IF ( @FMTCOB = 5 ) 
				BEGIN 
					SET @EXTVLR = Round(@VLRBAS * ( ( @VLRTAR * @CURPCL ) / 100 ), 2); 
				END 

			IF ( @FMTCOB = 6 ) 
				BEGIN 
					SET @EXTVLR = Round(@VLRBAS * ( @PCTTAR / 100 ), 2); 
					SET @EXTVLR = @EXTVLR + @TARBAS; 
				END 

		END

	SELECT nidtar, nivtar, usupro, codtar, a.starec, codmoe, a.datcad, a.updusu, fmtcob, pcttar, vlrtar, tarbas, vlrinf, vlrmax, codbnd, tiplin, a.modcrt, 
       isnull(b.parini,0) parini, 
       isnull(b.parfin,0) parfin, 
       0       AS EXTVBS, 
       @EXTVLR as EXTVLR 
  from tbcadtar (nolock) a 
  left join tbtarmod (nolock) b
    on (a.modcrt = b.modcrt)
 WHERE nidtar = @NIDTAR           
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da Tarifa" name="NIDTAR" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Valor Base" name="VLRBAS" type="System.Double" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Número de Parcelas" name="NUMPCL" type="System.Byte" default="" output="1" null="false"/>
          <parameter input="true" apply="true" desc ="Parcela Atual" name="CURPCL" type="System.Byte" default="" output="1" null="false"/>
          <parameter input="true" apply="true" desc ="Data de Validação 1" name="DATVL1" sysnull="true" type="System.DateTime" default="null" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Data de Validação 2" name="DATVL2" sysnull="true" type="System.DateTime" default="null" output="" null="true"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="GetExpandeRate" return="double" returnmode="2" procname="PRCADTARGETEXPTAR" desc ="Obtêm a tarifa expandida de registro de tarifação" returnvalue="1" remarks="Retorna o valor da tarifa a ser aplicada de acordo com a tabela de cadastro de tarifas">
        <query>
          <![CDATA[
DECLARE @QTDREG INT
DECLARE @CODUSU INT =0
DECLARE @NIVSUM TINYINT=0
SET @RETURN_VALUE=-1

SELECT @CODUSU = USUPRO, @NIVSUM = NIVTAR  FROM TBCADTAR (NOLOCK) WHERE NIDTAR = @NIDTAR
IF(@CODUSU>0 AND @NIVSUM IN (1,2))
		BEGIN
			SELECT @QTDREG = QTDBOL 
			  FROM VWSUMBOL
 			 WHERE CODUSU = @CODUSU
			   AND NIVSUM = @NIVSUM
			   AND NUMANO = DATEPART(year,GETDATE())
			   AND NUMMES = DATEPART(month,GETDATE())

			IF(@QTDREG>0)
				BEGIN 
					SELECT @RETURN_VALUE = VLRTAR 
					  FROM TBEXPTAR
  		     WHERE STAREC=1 
				     AND LVLREG =1 
					   AND NIDTAR = @NIDTAR
					   AND @QTDREG BETWEEN QTDMIN AND QTDMAX
				END
	END
RETURN @RETURN_VALUE          
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Tarifação" name="NIDTAR" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="CopyManagersFee" return="int" returnmode="1" procname="PRCADTARGERCPY" desc ="Processa a cópia de tarifas de gestores" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0          
DECLARE @USUPRO INT
DECLARE @INICIO INT = 1
DECLARE @FIM INT = 1
DECLARE @TPLIST TABLE(ID INT IDENTITY, USUPRO INT)
INSERT INTO @TPLIST (USUPRO)  SELECT USUPRO FROM TBUSUPRO WHERE STAREC=1 AND USUPRO<>13
SELECT @FIM = MAX(ID) FROM @TPLIST
PRINT @FIM
WHILE (@INICIO <=@FIM)
	BEGIN
		SELECT @USUPRO = USUPRO FROM @TPLIST WHERE ID=@INICIO
		EXEC PRCADTARCPY @USUPRO,1,13,1,11
		SET @INICIO = @INICIO + 1 
    SET @RETURN_VALUE= @RETURN_VALUE+1
END
RETURN @RETURN_VALUE  
          ]]>
        </query>
      </item>
      <item script="true" alias="A." sql="" method="CopyUsersFee" return="int" returnmode="1" procname="PRCADTARUSRCPY" desc ="Processa a cópia de tarifas de usuarios" returnvalue="1">
        <query>
          <![CDATA[
DECLARE @USUPRO INT
DECLARE @INICIO INT = 1
DECLARE @FIM INT = 1
DECLARE @NUMREC INT 
SELECT @NUMREC = COUNT(1) FROM TBCADTAR (NOLOCK) WHERE USUPRO=13 AND NIVTAR=1
DECLARE @TPLIST TABLE (ID INT IDENTITY, CODUSU INT )
INSERT INTO @TPLIST (CODUSU) 
SELECT TOP 1000 USUPRO 
 FROM TBCADTAR (NOLOCK) 
WHERE NIVTAR=2 
  AND USUPRO NOT IN (SELECT CODUSU 
                       FROM TBCADUSU (NOLOCK)
					  WHERE STAREC=1 
					    AND CODATR NOT IN (2,3,5,4) 
						AND STAUSU=61)  
GROUP BY USUPRO HAVING COUNT(*) <> @NUMREC
SELECT @FIM = MAX(ID) FROM @TPLIST
WHILE (@INICIO <=@FIM)
BEGIN
  SELECT @USUPRO = CODUSU FROM @TPLIST WHERE ID=@INICIO
  EXEC PRCADTARCPY @USUPRO,2,13,1,11
  SET @INICIO = @INICIO + 1
  SET @RETURN_VALUE= @RETURN_VALUE+1  
END
RETURN @RETURN_VALUE          ]]>
        </query>
      </item>

      <item script="true" alias="A." sql="" method="InactiveRates" return="int" returnmode="1" procname="PRCADTARINAALL" desc ="Processa a inativação de registros de tarifas de usuarios ou gestores inativos" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0          
UPDATE TBCADTAR
   SET STAREC=0, UPDUSU = 11
 WHERE NIVTAR=2 AND USUPRO IN (SELECT CODUSU FROM TBCADUSU WHERE STAREC=0)
SET @RETURN_VALUE= @RETURN_VALUE + @@ROWCOUNT
UPDATE TBCADTAR
   SET STAREC=0, UPDUSU = 11
 WHERE NIVTAR=1 AND USUPRO IN (SELECT USUPRO TBUSUPRO WHERE STAREC=0)
SET @RETURN_VALUE= @RETURN_VALUE + @@ROWCOUNT
RETURN @RETURN_VALUE
          
          ]]>
        </query>
      </item>

      <item script="true" alias="" sql="" method="DeleteMemoryId" return="int" returnmode="1" procname="PRMEMCALDELREGTAR" desc ="Remove registro da memória de cálculo" returnvalue="1">
        <query merge="true" append="SELECT @RETURN_VALUE=@@ROWCOUNT">
          <![CDATA[DELETE FROM TBMEMCAL]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Tipo de Referência" name="TIPRFE" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" desc ="ID de Referência" name="NIDREF" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Código da Tarifa" name="CODTAR" type="System.Int16" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="" sql="" method="DeleteMemoryId" return="int" returnmode="1" procname="PRMEMCALDELREG" desc ="Remove registro da memória de cálculo" returnvalue="1">
        <query merge="true" append="SELECT @RETURN_VALUE=@@ROWCOUNT">
          <![CDATA[
          DELETE FROM TBMEMCAL
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Tipo de Referência" name="TIPRFE" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" desc ="ID de Referência" name="NIDREF" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </methods>


  </item>
  <item create="true"  id="39" name="TBCPLCRT">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1100000000</procedure>
    <asp>110000000</asp>
    <csharp>11000000</csharp>
    <SelectAllList></SelectAllList>
    <StringSqlSelectAll></StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll></CreateSelectionAll>
    <SelectAllAlias></SelectAllAlias>
    <MaxFields></MaxFields>
  </item>
  <item create="true"  id="40" name="TBCADCVL" friendlyname="Linked Accounts" modelversion="2">
    <UpdateKey>Key</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <procedure>1000000000</procedure>
    <asp>100000000</asp>
    <csharp>10000000</csharp>
    <insertcommand key="key" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        IF(EXISTS(SELECT 1 FROM TBCADCVL (NOLOCK) WHERE CODUSU=@CODUSU AND NIDCTA =@NIDCTA))
        SET @RETURN_VALUE=-2
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>

    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query>
          <![CDATA[
SELECT A.*, NUMCTA = B.NUMCTA + '-' + B.NUMDVE, C.NOMUSU FROM TBCADCVL (NOLOCK) A 
 INNER JOIN TBCADCTA (NOLOCK) B 
    ON (B.NIDCTA = A.NIDCTA)
 INNER JOIN TBCADUSU (NOLOCK) C 
    ON (C.CODUSU = B.CODUSU)
 WHERE A.STAREC=1            
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Usuario" name="CODUSU" type="int" sysnull="true" default="" output="" null="true"/>
        </parameters>
      </item>
    </selectallcommand>

    <methods>
      
      <item webtype="POST" script="true" alias="A." sql="" method="LocateAccount" return="int" returnmode="1" procname="PRCADCVLLSTACT" desc ="Localiza uma conta digital conforme os parâmetros fornecidos" returnvalue="1">
        <query>
          <![CDATA[
   SET @RETURN_VALUE=0
   DECLARE @NIDCTA INT=0
   SET @NOMPSQ= LTRIM(RTRIM(@NOMPSQ))
   IF(@NOMPSQ<>'')
		BEGIN
			IF(@METPSQ=1)
				SELECT @NIDCTA = NIDCTA 
  				  FROM tbcadcta 
	             where orgcta=1
                 and stacta=250
                 and starec=1
	               and codusu in (select codusu 
		                  from tbcadusu 
						 where codcmf = @NOMPSQ 
						   and starec=1 
						   and stausu=61)     	
			Else
				SELECT @NIDCTA = NIDCTA 
  				  FROM tbcadcta 
	             where orgcta=1 
	               AND STACTA=250
		           AND STAREC=1
	               and NUMCTA = @NOMPSQ
		END

	IF(@NIDCTA>0)
		BEGIN
			IF (EXISTS(SELECT 1 FROM TBCADCVL (NOLOCK) WHERE CODUSU=@CODUSU AND NIDCTA = @NIDCTA))
			    SET @RETURN_VALUE = -1
			ELSE
				SET @RETURN_VALUE = @NIDCTA
		END
	RETURN @RETURN_VALUE          
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="false" desc ="Método de Pesquisa" name="METPSQ" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Valor de Pesquisa" name="NOMPSQ" type="System.String" size="25" default="" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return operator=">" value="0" message="" error="OK"></return>
          <return value="0" message="" error="RECORDNOTFOUND"></return>
          <return value="-1" message="O REGISTRO JÁ ESTA VINCULADO AO USUARIO" error="INVALIDARGUMENT"></return>
        </returns>
      </item>
    </methods>
  </item>
  
  <item create="true"  id="41" name="TBCRTSAL" friendlyname="CardBalance" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <extendedmodel>SELECT TOP 1 A.*, cast('' as VARCHAR(16)) NUMCRT, CAST(0 AS SMALLINT) CODPRO, cast('' as VARCHAR(6)) SBLMOE FROM TBCRTSAL (NOLOCK) A</extendedmodel>
    <procedure>1111000000</procedure>
    <asp>111100000</asp>
    <csharp>11110000</csharp>

    <interface>
      <item script="false" alias="A." sql="" method="InsertOrUpdate" return="int" returnmode="2" procname="" desc ="Insere ou Atualiza um registro de controle de saldo de cartão" returnvalue="0">
        <query>
        </query>
        <parameters>
          <parameter input="true" desc ="Número do Cartão" name="pNUMCRT" type="String" default="" output="" null="false"/>
          <parameter input="true" desc ="Valor do Saldo" name="pVLRSAL" type="System.Double" default="" output="" null="false"/>
          <parameter input="true" desc ="Código da Moeda" name="pCODMOE" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" desc ="Tipo de Saldo" name="pTIPSAL" type="System.Byte" default="1" output="" null="false"/>
        </parameters>
      </item>

    </interface>

    <selectcommand>
      <item script="true" alias="A." sql="SELECT TOP 1 A.*, cast('' as VARCHAR(16)) NUMCRT, CAST(0 AS SMALLINT) CODPRO, cast('' as VARCHAR(6)) SBLMOE FROM TBCRTSAL (NOLOCK) A" method="Select" return="CardBalance" procname="" desc ="Seleciona o registro de saldo de acordo com os parâmetros fornecidos">
        <query>
          <![CDATA[
SELECT A.*, B.NUMCRT, D.CODPRO, E.SBLMOE FROM TBCRTSAL (NOLOCK) A
INNER JOIN TBREGCRT (NOLOCK) B
ON (A.CODCRT = B.CODCRT)
INNER JOIN TBADMCRT (NOLOCK) C
ON (C.CODCRT = B.CODCRT)
INNER JOIN TBUSUPRO (NOLOCK) D
ON (C.USUPRO = D.USUPRO)
INNER JOIN TBCADMOE (NOLOCK) E
ON (A.CODMOE = E.CODMOE)
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Cartão" name="CODCRT" type="int" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código da Moeda" name="CODMOE" type="System.Int16" default="1" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Tipo de Saldo" name="TIPSAL" type="System.Byte" default="1" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <insertcommand key="key" fieldreturn="CODCRT" exceptionparamns="'DATCAD','DATUPD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="key" fieldreturn="CODCRT" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD=GETDATE();
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </updatecommand>
    <deletecommand key="key" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </deletecommand>
  </item>

  <item create="true"  id="42" name="TBCADAGV">
    <UpdateKey>Identity</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn>@NIDAGV</fieldreturn>
    <procedure>1111000000</procedure>
    <asp>111100000</asp>
    <csharp>11110000</csharp>
    <SelectAllList>REGAGV</SelectAllList>
    <StringSqlSelectAll>18</StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll>TRUE</CreateSelectionAll>
    <SelectAllAlias>A.</SelectAllAlias>
    <MaxFields></MaxFields>
  </item>
  <item create="true"  id="43" name="TBCTRMEN" friendlyname="Mensalidades" modelversion="2">
    <UpdateKey>Identity</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>100000000</asp>
    <csharp>11110000</csharp>
    <SelectAllList>STAREC/V, TIPMEN/V, STAMEN, CODUSU, USRCOB</SelectAllList>
    <StringSqlSelectAll>30</StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll>true</CreateSelectionAll>
    <SelectAllAlias>A.</SelectAllAlias>
    <MaxFields></MaxFields>

    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="Mensalidades" procname="PRCTRMENSEL" desc ="Seleciona o registro de mensalidade de acordo com o ID">
        <query>
          <![CDATA[SELECT * FROM TBCTRMEN (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Mensalidade" name="NIDMEN" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD', 'NIDMEN'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD=GETDATE();
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </updatecommand>
    <deletecommand key="identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </deletecommand>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRCTRMENSELALL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query>
          <![CDATA[
            
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Status do Registro" name="STAREC" type="System.Byte" sysnull="false" default="" output="" null="false"/>
          <parameter input="true" desc ="Tipo de Mensalidade" name="TIPMEN" type="System.Int32" sysnull="false" default="" output="" null="false"/>
          <parameter input="true" desc ="Status da Mensalidade" name="STAMEN" type="System.Int32" sysnull="true" default="" output="" null="true"/>
          <parameter input="true" desc ="Código do Usuario" name="CODUSU" type="int" sysnull="true" default="" output="" null="true"/>
          <parameter input="true" desc ="Usuário de Cobrança" name="USRCOB" type="int" sysnull="true" default="" output="" null="true"/>

        </parameters>
      </item>
    </selectallcommand>



  </item>
  <item create="true"  id="44" name="TBUSUPLN">
    <UpdateKey>Identity</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>false</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>100000000</asp>
    <csharp>11110000</csharp>
    <SelectAllList></SelectAllList>
    <StringSqlSelectAll>19</StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll>TRUE</CreateSelectionAll>
    <SelectAllAlias></SelectAllAlias>
    <MaxFields></MaxFields>
  </item>
  <item create="true"  id="45" name="TBREGROT" friendlyname="RoteiroOperacao" modelversion="3">
    <UpdateKey>Identity</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1011000000</procedure>
    <asp>100000000</asp>
    <csharp>10110000</csharp>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="RoteiroOperacao" procname="PRREGROTSEL" desc ="Seleciona o registro de roteiro de acordo com o ID">
        <query>
          <![CDATA[SELECT * FROM TBREGROT (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Roteiro" name="NIDROT" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>

    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD', 'NIDROT'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>

    <deletecommand key="identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </deletecommand>

  </item>
  <item create="true"  id="46" name="TPIMPCSV" friendlyname="DadosExternos" modelversion="3">
    <UpdateKey>Identity</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1011000000</procedure>
    <asp>100000000</asp>
    <csharp>10110000</csharp>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="DadosExternos" procname="PRIMPCSVSEL" desc ="Seleciona o registro de importação de acordo com o ID">
        <query>
          <![CDATA[SELECT * FROM TBIMPCSV (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Importação" name="NIDDEX" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD', 'NIDDEX'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </updatecommand>
    <deletecommand key="identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </deletecommand>
  </item>
  <item create="true"  id="47" name="TBCADCAL">
    <UpdateKey>Identity</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>false</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1011000000</procedure>
    <asp>100000000</asp>
    <csharp>10110000</csharp>
    <SelectAllList></SelectAllList>
    <StringSqlSelectAll></StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll></CreateSelectionAll>
    <SelectAllAlias></SelectAllAlias>
    <MaxFields></MaxFields>
  </item>
  <item create="true"  id="48" name="TBLIGUSU" friendlyname="Ligacao Usuarios" modelversion="2">
    <UpdateKey select="both">Identity</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1110000000</procedure>
    <asp>100000000</asp>
    <csharp>11100000</csharp>

    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="LigacaoUsuarios" procname="PRLIGUSUSELPAR" desc ="Seleciona o registro de ligacao de usuarios de acordo com os parâmetros fornecidos">
        <query>
          <![CDATA[SELECT * FROM TBLIGUSU (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Usuário de Referência" name="USUREF" type="int" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código do Usuário" name="CODUSU" type="int" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Tipo de Ligação" name="TIPLIG" type="System.Byte" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="Select" return="LigacaoUsuarios" procname="PRLIGUSUSEL" desc ="Seleciona o registro de ligacao de usuarios de acordo com o id de ligação">
        <query>
          <![CDATA[SELECT * FROM TBLIGUSU (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID de ligação" name="NIDLIG" type="int" default="" output="" null="false"/>
        </parameters>
      </item>

    </selectcommand>
    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD', 'NIDLIG'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD=GETDATE();
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </updatecommand>

  </item>
  <item create="true"  id="49" name="TBREGPRO" friendlyname="Registro de Processamento" modelversion="2">
    <UpdateKey>Identity</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>false</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>100000000</asp>
    <csharp>11110000</csharp>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="RegistroProcessamento" procname="PRREGPROSEL" desc ="Seleciona o registro de processamento de acordo com o ID">
        <query>
          <![CDATA[SELECT * FROM TBREGPRO (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Transacao" name="NIDRTR" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD', 'NIDRTR'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD=GETDATE();
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </updatecommand>
    <deletecommand key="identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </deletecommand>

  </item>
  <!--<item create="true"  id="50" name="TBMONLOT" friendlyname="Monitor Lote">
    <UpdateKey>Identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>True</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <SelectAllList>STALOT</SelectAllList>
    <StringSqlSelectAll>21</StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll>true</CreateSelectionAll>
    <SelectAllAlias>A.</SelectAllAlias>
    <MaxFields></MaxFields>
  </item>-->
  <item create="true"  id="50" name="TBCADUPL">
    <UpdateKey>Identity</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>false</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>100000000</asp>
    <csharp>11110000</csharp>
    <SelectAllList>CODUSU, CODOPA</SelectAllList>
    <StringSqlSelectAll>22</StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll>true</CreateSelectionAll>
    <SelectAllAlias>A.</SelectAllAlias>
    <MaxFields></MaxFields>
  </item>
  <item create="true"  id="51" name="TBREGPOS" friendlyname="RegistroVendas" modelversion="3">
    <UpdateKey>Identity</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>100000000</asp>
    <csharp>11110000</csharp>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="RegistroVendas" procname="" desc ="Seleciona um registro de vendas de acordo com o ID de Registro de Vendas">
        <query>
          <![CDATA[SELECT * FROM TBREGPOS (NOLOCK) A WHERE STAREC<>11 ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Vendas" name="NIDRVM" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD', 'NIDRVM'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD=GETDATE();
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </updatecommand>
    <deletecommand key="identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </deletecommand>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRREGPOSSELALL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query order ="NUMNSU, INDREG, NUMPCL">
          <![CDATA[
SELECT A.*
      ,ISNULL(B.DSCTAB,'') AS DSCREC
      ,ISNULL(F.DSCTAB,'') AS DSCBND
      ,ISNULL(C.LGNUSU,'') AS DSCUPD
      ,CASE WHEN REGANT = 0 THEN 'Não' ELSE 'Sim' end as DSCADT
      ,ISNULL(E.NOMUSU,'') AS NOMUSU
	  ,CASE WHEN (INDREG IN (1,3) AND (PRVPGT<= GETDATE()) AND REGANT=0 AND LOTADT=0)  THEN  1 ELSE 0 END AS CAN_ADT
	  ,CASE WHEN LOTADT>0 THEN  1 ELSE 0 END AS CAN_RAD
	  ,CASE WHEN LOTFIN>0 THEN  1 ELSE 0 END AS CAN_RLF
  FROM TBREGPOS (NOLOCK) A
  LEFT JOIN TBTABGER (NOLOCK) B
    ON (7 = B.NUMTAB AND A.STAREC = B.KEYCOD)
  LEFT JOIN TBTABGER (NOLOCK) F
    ON (63 = F.NUMTAB AND A.CODBND = F.KEYCOD)
  LEFT JOIN TBCADUSU (NOLOCK) C
    ON (A.UPDUSU = C.CODUSU)
  LEFT JOIN TBUSUMAQ (nolock) D  
    ON (A.nidusm = D.CODUSM) 
  LEFT JOIN TBCADUSU (NOLOCK) E 
    ON (E.CODUSU = (CASE WHEN D.USUREF IS NULL THEN ISNULL(USUDLC,0)  ELSE D.USUREF END))          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Tipo de Linha" name="TIPLIN" sysnull="true" type="System.Int16" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Código do Usuário" name="USUDLC" sysnull="true" type="System.Int32" default="" output="" null="true"/>
        </parameters>
      </item>
    </selectallcommand>

    <methods>
      <item script="true" alias="A." sql="" method="RemoveBatchAdvance" return="int" procname="PRREGPOSREMLOTFINADT" desc ="Remover o registro de lote financeiro de adiantamento de Vendas" returnvalue="1">
        <query>
          <![CDATA[
	SET @RETURN_VALUE = 0
	DECLARE @LOTFIN INT
	IF(@NIDRVM>0)
		BEGIN
			SELECT @LOTFIN = LOTADT FROM TBREGPOS (NOLOCK) WHERE NIDRVM = @NIDRVM
			BEGIN TRAN
			IF(@LOTFIN>0)
				BEGIN
					UPDATE TBREGCCR 
					   SET STAREC=0,
						   UPDUSU = @UPDUSU,
						   DATUPD = GETDATE() 
					 WHERE		LOTFIN = @LOTFIN
						   AND	TIPRFE = 1
						   AND	NIDRVM = @NIDRVM

					IF(@@ERROR=0)
						BEGIN
							UPDATE TBREGPOS 
							   SET STAREC=1,
                  LOTADT=0,
									UPDUSU = @UPDUSU,
									DATUPD = GETDATE(),
									REGANT = 0,
									SITPGT = 0 							 
							 WHERE NIDRVM = @NIDRVM
               IF(@@ERROR=0)
                  BEGIN
                     DELETE FROM TBPOSDLT WHERE LOTFIN = @LOTFIN AND NIDRVM =@NIDRVM
                     IF(@@ERROR=0)                     
                        SET @RETURN_VALUE=1
                  END
               ELSE
                  SET @RETURN_VALUE=0
						END


					IF(@@ERROR=0)
						SET @RETURN_VALUE=1
				END

			IF(@RETURN_VALUE=1)
				COMMIT TRAN
			ELSE
				ROLLBACK TRAN		
		END          
    RETURN @RETURN_VALUE
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Registro de Vendas" name="NIDRVM" type="int" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualização" name="UPDUSU" type="int" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="1" message="" error="OK"></return>
          <return value="0" message="" error=""><![CDATA[TrappedError.UserError = "NAO FOI POSSIVEL REMOVER O LOTE";]]></return>
        </returns>
      </item>
      <item script="true" alias="A." sql="" method="RemoveBatchImport" return="int" procname="PRREGPOSDELLOTIMP" desc ="Remove o Lote de Importação de Dados de Vendas" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0
DECLARE @HASFIN INT
IF(@NIDLIM>0)
  BEGIN
    SELECT @HASFIN = ISNULL(COUNT(*),0)  FROM TBPOSDLT WHERE NIDLIM=@NIDLIM AND LOTFIN>0
    IF(@HASFIN=0)
      BEGIN
        DELETE FROM TBPOSDLT WHERE NIDLIM=@NIDLIM  
        IF(@@ERROR=0)
          BEGIN
            DELETE FROM TBREGPOS WHERE NIDLIM=@NIDLIM      
            IF (@@ERROR=0)      
  				     SET @RETURN_VALUE=@@ROWCOUNT
          END
      END
    ELSE
	    SET @RETURN_VALUE=-3;    
  END
ELSE
	 SET @RETURN_VALUE=-1;    
RETURN @RETURN_VALUE          
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Lote de Importação" name="NIDLIM" type="int" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualização" name="UPDUSU" type="int" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return operator=">" value="0" message="" error="OK"></return>
          <return value="-1" message="" error=""><![CDATA[TrappedError.UserError = "LOTE NAO INFORMADO";]]></return>
          <return value="-3" message="" error=""><![CDATA[TrappedError.UserError = "O LOTE POSSUI LANCAMENTOS VINCULADOS";]]></return>
          <return value="0" message="" error=""><![CDATA[TrappedError.UserError = "NAO FOI POSSIVEL REMOVER O LOTE";]]></return>
        </returns>
      </item>

      <item script="true" alias="A." sql="" method="RemoveBatchFinancial" return="int" procname="PRREGCCRREMPROFIN" desc ="Remove o Processamento de gravação de um lote FINANCEIRO" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE =0          
IF(@REGPRO>0 AND @LOTFIN>0)
    BEGIN
      UPDATE TBREGCCR 
         SET STAREC = 0 
       WHERE REGPRO = @REGPRO          
         AND LOTFIN = @LOTFIN
         SET @RETURN_VALUE = @@ROWCOUNT
    END
ELSE
    SET @RETURN_VALUE=-1;
RETURN @RETURN_VALUE          
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Registro de Processamento" name="REGPRO" type="int" default="" output="" null="false"/>
          <parameter input="true" desc ="ID do Lote Financeiro" name="LOTFIN" type="int" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return operator=">" value="0" message="" error="OK"></return>
          <return value="-1" message="REGISTRO DE PROCESSAMENTO NÃO INFORMADO" error=""/>
          <return value="0" message="NAO FOI POSSIVEL REMOVER O PROCESSAMENTO" error=""/>
        </returns>
      </item>
      <item script="true" alias="A." sql="" method="UpdateDataInputed" return="" returnmode="0" procname="PRREGPOSUPDDAT" desc ="Reatualiza os dados de importação de Registros" returnvalue="0">
        <query>
          <![CDATA[
    /*
		INDREG 
			  1 - REGISTRO DE TRANSACAO NORMAL
			  2 - REGISTRO RECALCULADO PARA INDREG=3 COM PARCELAMENTO
			  3 - REGISTRO DE RECALCULO DE PARCELAMENTO
	*/

    UPDATE TBREGPOS SET STAVEN =1 WHERE LTRIM(RTRIM(DSCSTO))='APPROVED' AND USROWN=1000
    UPDATE TBREGPOS SET STAVEN =13 WHERE LTRIM(RTRIM(DSCSTO))='DENIED'  AND USROWN=1000
    UPDATE TBREGPOS SET STAVEN =9 WHERE LTRIM(RTRIM(DSCSTO))='REFUNDED' AND USROWN=1000

	 /*
	  * 15/06/2020 - REGISTROS DUPLICADOS SEM A INFORMACAO DE LIBPGT E CODWAL DE IDENTIFICACAO
	  */	
	 UPDATE TBREGPOS 
	    SET STAREC=11
      WHERE NIDRVM IN (SELECT A1.NIDRVM 
                         FROM TBREGPOS (NOLOCK) A1 
					    INNER JOIN (SELECT NUMNSU, NIDUSM 
  								     FROM tbregpos 
									 WHERE PRVPGT IS NULL 
									   AND USROWN=1000 
									   AND STAREC<>13 
									   AND NIDUSM>0 
									   AND INDREG =1 
									   AND DSCSTO = 'APPROVED'
									   GROUP BY NUMNSU,NIDUSM HAVING COUNT(*) > 1) B 
 						   ON(A1.NUMNSU = B.NUMNSU AND A1.NIDUSM = B.NIDUSM) 
									   WHERE A1.INDREG NOT IN (2,3) 
									     AND A1.LIBPGT IS NULL AND ISNULL(A1.CODWAL,'')='')
		AND STAREC<>11


	  UPDATE TBREGPOS SET STAREC = 11
	   WHERE PRVPGT IS NULL
	     AND USROWN=1000 
		   AND STAREC IN (1,13) 
		   AND NIDUSM>0 
		   AND INDREG =1 
		   AND DSCSTO = 'APPROVED'
		   AND INDREG = 1
       AND LIBPGT IS NULL 
		   AND ISNULL(CODWAL,'')=''
     
     
	  UPDATE TBREGPOS 
	     SET NIDUSM = C.CODUSM,
		     USUDLC = C.USUREF 
	    FROM TBREGPOS (NOLOCK) A 
   	   INNER JOIN TBCADMAQ (NOLOCK) B 
		  ON (A.NUMPVE = B.NUMPVE AND A.NUMTER = B.NUMTER AND A.NUMSER = B.NUMSER)
	   INNER JOIN TBUSUMAQ (NOLOCK) C 
		  ON (B.NIDMAQ = C.NIDMAQ)
	   WHERE NIDUSM = 0
		 AND C.STAREC = 1
		 AND B.STAREC = 1

	  UPDATE TBREGPOS 
	     SET USUDLC = C.USUREF 
	    FROM TBREGPOS (NOLOCK) A 
		 INNER JOIN TBCADMAQ (NOLOCK) B 
				ON (A.NUMPVE = B.NUMPVE AND A.NUMTER = B.NUMTER AND A.NUMSER = B.NUMSER)
		 INNER JOIN TBUSUMAQ (NOLOCK) C 
		    ON (C.NIDMAQ = B.NIDMAQ AND C.CODWAL = A.CODWAL)
	   WHERE USUDLC = 0
    	   AND C.STAREC = 1
		   AND B.STAREC = 1

	  UPDATE TBREGPOS
         SET STAMOV = 1,
	         NIDCTA = B.NIDCTA
        FROM TBREGPOS (NOLOCK) A 
	   INNER JOIN TBCADCTA (NOLOCK) B
	      ON (A.USUDLC = B.CODUSU)
	   WHERE B.STACTA IN (250,252)
	     AND B.ORGCTA = 1
	     AND A.STAREC = 1
	     AND A.LOTFIN = 0
	     AND A.USUDLC > 0
		
	DECLARE @USUPRO INT
	SELECT @USUPRO = USUPRO FROM TBUSUPRO WHERE CODUSU = 54 AND CODPRO=12
	UPDATE TBREGPOS
	   SET USUPRO = @USUPRO
	 WHERE STAREC = 1
	   AND USROWN = 1000
	   AND LOTFIN = 0
	   AND USUPRO = 0

    UPDATE TBREGPOS
	   SET CODMOE = 1
     WHERE CODMOE=0
	   AND STAREC = 1

	UPDATE TBREGPOS
	   SET REGPAG =1, SITPGT =2, LIBPGT = prvpgt
   WHERE USROWN=1000 
	   AND INDREG IN(1,3) 
	   AND STAREC=1 
 	   AND CAST(convert(VARCHAR(10), prvpgt,112) AS INT) <= CAST(convert(VARCHAR(10), getdate(),112) AS INT)

	UPDATE TBREGPOS
	   SET REGPAG =1, SITPGT =2
   WHERE USROWN=1000 
	   AND INDREG IN(1,3) 
	   AND STAREC=1 
 	   AND CAST(convert(VARCHAR(10), prvpgt,112) AS INT) <= CAST(convert(VARCHAR(10), getdate(),112) AS INT)
     AND (REGANT = 1 AND TIPADT = 3)

          ]]>
        </query>
      </item>
      <item script="false" alias="A." sql="" method="RegisterAccounting" return="int" returnmode="2" procname="PRREGPOSCRTLCT" desc ="Efetua a gravação dos Registros de Contabilização de Vendas" returnvalue="1">
        <query></query>
        <parameters>
          <parameter input="true" desc ="ID do Lote de Importação" name="NIDLIM" type="int" default="" output="" null="false"/>
        </parameters>

      </item>
      <item script="true" alias="A." sql="" method="GetReleaseRecords" type="DataTable" return="DataTable" procname="PRREGPOSGETLAN" desc ="Obtêm os registros para registro de lançamento em conta corrente">
        <query>
          <![CDATA[
    SELECT RANK() OVER (ORDER BY A.NUMNSU, A.NUMSER DESC) AS RNKKEY,  
	  A.NIDRVM,
	  B.TIPLCT,
	  A.NUMNSU,
	  A.NUMSER,
	  A.CODWAL,
	  A.TOTPCL,
	  B.TIPRFE,
	  B.NIDLIM,
	  B.DATMOV,
	  B.USUPRO,
	  B.NUMPCL,
	  B.SIGOPE,
	  B.INDLCT,
	  A.NIDCTA,
	  B.CODMOV,
	  B.CODUSU,
	  B.VLRLAN,
	  B.CODTRM,
	  B.NIDBLT,
	  A.NIDBOL,
	  0 AS CODPRT,		 
	  '0000' AS MESANO
    FROM TBREGPOS (NOLOCK) A
   INNER JOIN TBPOSDLT (NOLOCK) B
   ON (A.NIDRVM = B.NIDRVM)
   WHERE B.LOTFIN = 0 
     AND B.NIDCTA>0
     AND B.CODMOV>0
     AND CONVERT(VARCHAR,B.DATMOV,112)+ REPLACE(A.DATTRA,':','') <= CONVERT(VARCHAR,GETDATE(),112) + REPLACE(CONVERT(VARCHAR,GETDATE(),8),':','')
     
     ]]>
        </query>
      </item>


      <item script="true" alias="A." sql="" method="ReconcileSale" return="int"  procname="PRREGPOSCNCVEN" desc ="Efetua o registro de confirmação de conciliação de venda" returnvalue="1">
        <query>
          <![CDATA[
	SET @RETURN_VALUE =0
	UPDATE TBREGPOS
	   SET INDCNC =@INDCNC,
	       UPDUSU =@UPDUSU,
		     DATUPD = GETDATE()
	 WHERE NIDRVM =@NIDRVM
	IF(@@ERROR=0)
		SET @RETURN_VALUE = 1
	RETURN @RETURN_VALUE          
        ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Registro de Vendas" name="NIDRVM" type="int" default="" output="" null="false"/>
          <parameter input="true" desc ="Código do Usuário Conciliador" name="UPDUSU" type="int" default="" output="" null="false"/>
          <parameter input="true" desc ="Indicador de Conciliação" name="INDCNC" type="System.Boolean" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="false" alias="A." sql="" method="GetSales" type="DataTable" return="DataTable" procname="PRREGPOSSELVEN" desc ="Pega todos os registros de venda conforme os parâmetros de entrada fornecidos">
        <query><![CDATA[]]></query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Usuário" name="CODUSU"  type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Tipo de Linha" name="TIPLIN" sysnull="true" type="System.Int16" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Tipo de Pesquisa por Data" name="TIPPSD"  type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Data Inicial de Movimento" name="DATMOV1" type="System.String" size="10"  default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Data Final de Movimento" name="DATMOV2" type="System.String" size="10" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Status de Venda" sysnull="true" name="STAREC" type="System.Byte" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Código da Bandeira" sysnull="true" name="CODBND" type="System.Int16" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="NSU" name="NUMNSU" size="20" type="System.String" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Cartão Externo" name="EXTCRT" size="16" type="System.String" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Alias Machine" name="ALSNAM" size="50" type="System.String" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Situação de Pagamento" name="SITPGT"  sysnull="true" type="System.Byte" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Indicador de Conciliação" name="INDCNC"  sysnull="true" type="System.Byte" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Número da Página" name="PAGNRO"  type="System.Int32" sysnull="true" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Tamanho de Página" name="PAGSIZ"  type="System.Int32" default="100" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="GetSalesXml" type="Xml" return="string" procname="PRREGPOSSELVEN" desc ="Pega todos os registros de venda conforme os parâmetros de entrada fornecidos e retorna uma string xml">
        <query>
          <![CDATA[
          
         
IF (@NUMNSU IS NOT NULL)
		SET @NUMNSU = '%' +@NUMNSU + '%'
IF (@EXTCRT is not null)
		SET @EXTCRT = '%' +@EXTCRT + '%'
IF (@ALSNAM is not null)
		SET @ALSNAM = '%' +@ALSNAM + '%'

IF(@TIPPSD IS NULL) 
		SET @TIPPSD=1
SET @DATMOV1 = CASE WHEN (@DATMOV1 IS NOT NULL) THEN (CASE WHEN @DATMOV1='' THEN NULL ELSE @DATMOV1 END) ELSE NULL END
SET @DATMOV2 = CASE WHEN (@DATMOV2 IS NOT NULL) THEN (CASE WHEN @DATMOV2='' THEN NULL ELSE @DATMOV2 END) ELSE NULL END

PRINT '#1 DATMOV1 ' + @DATMOV1
PRINT '#2 DATMOV2 ' + @DATMOV2
PRINT '#3 TIPPSD ' + CONVERT(VARCHAR(1),@TIPPSD)

	IF(@DATMOV1 IS NULL OR @DATMOV2 IS NULL)
		SET @TIPPSD=0

IF OBJECT_ID('tempdb..#TPMREGPOS') IS NOT NULL
DROP TABLE #TMPREGPOS

CREATE TABLE #TMPREGPOS (
	PAGOLD Tinyint default 0,
	PAGNRO int NOT NULL DEFAULT 0,
	nidrvm int NOT NULL default 0,
	refrvm int NOT NULL default 0,
	usrown int NOT NULL default 0,
	codwal varchar(20) NOT NULL default '',
	tiplct smallint NOT NULL default 0,
	prvpgt date NULL,
	prnpgt varchar(10) NULL default '',
	indcnc int NOT NULL default 0,
	indreg tinyint NOT NULL default 0,
	stamov smallint NOT NULL default 0,
	nidusm int NOT NULL default 0,
	usudlc int NOT NULL default 0,
	lotfin int NOT NULL default 0,
	lotadt int NOT NULL default 0,
	starec tinyint NOT NULL,
	nidlim int NOT NULL default 0,
	nidbco int NOT NULL default 0,
	tiplin smallint NOT NULL default 0,
	codcmf varchar(15) NOT NULL default '',
	nomusu varchar(70) NOT NULL default '',
	numnsu varchar(20) NOT NULL default '',
	numpve varchar(15) NULL default '',
	numaut varchar(15) NULL default '',
	numter varchar(15) NULL default '',
	numser varchar(25) NOT NULL default '',
	totpcl smallint NOT NULL default 0,
	numpcl smallint NOT NULL default 0,
	datmov date NOT NULL default getdate(),
	prnmov varchar(10) NULL default '',
	dattra char(8) NOT NULL default '',
	vlrbrt money NOT NULL  default 0,
	vlrliq money NOT NULL default 0,
	vlrpc1 money NOT NULL default 0,
	vlrpcu money NOT NULL default 0,
	modcap varchar(25) NOT NULL default '',
	txadsc money NOT NULL default 0,
	numlot varchar(10) NOT NULL default '',
	extcrt varchar(50) NULL default '',
	nomcrt varchar(50) NOT NULL default '',
	numtid varchar(30) NOT NULL default '',
	tipbor tinyint NOT NULL default 0,
	nidbol int NOT NULL  default 0,
	numped varchar(25) NOT NULL default '',
	dscprd varchar(30) NOT NULL default '',
	codbnd smallint NOT NULL  default 0,
	dscadq varchar(15) NOT NULL,
	dscsto varchar(15) NOT NULL,
	dscstt varchar(15) NOT NULL,
	regant int NOT NULL default 0,
	filnam varchar(255) NOT NULL,
	tipadt tinyint NOT NULL,
	fceant bit NOT NULL  default 0,
	tarint money NOT NULL default 0,
	recint money NOT NULL default 0,
	vlrdsp money NOT NULL default 0,
	regpag bit NOT NULL default 0,
	reglib tinyint NOT NULL default 0,
	indlct tinyint NOT NULL default 0,
	sitpgt tinyint NOT NULL default 0,
	libpgt date NULL,
	nidcta int NOT NULL default 0,
	usupro int NOT NULL default 0,
	bxabol int NOT NULL default 0,
	nomsac varchar(70) NOT NULL default '',
	codver smallint NOT NULL default 0,
	codmoe smallint NOT NULL default 1,
	valent int NOT NULL default 0,
	dsclin varchar(100) NOT NULL default '',
	dscrec varchar(100) NOT NULL default '',
	dscpct varchar(100) NOT NULL default '',
	datprv date NULL,
	dscspg varchar(3) NOT NULL default '',
	valdsp money NULL default 0,
	alsnam varchar(50) NOT NULL default '',
	staven tinyint NOT NULL,
)


INSERT INTO #TMPREGPOS
SELECT  0,0
,nidrvm
      ,refrvm
      ,usrown
      ,codwal
      ,tiplct
      ,prvpgt
      ,prnpgt
      ,indcnc
      ,indreg
      ,stamov
      ,nidusm
      ,usudlc
      ,lotfin
      ,lotadt
      ,starec
      ,nidlim
      ,nidbco
      ,tiplin
      ,codcmf
      ,nomusu
      ,numnsu
      ,numpve
      ,numaut
      ,numter
      ,numser
      ,totpcl
      ,numpcl
      ,datmov
      ,prnmov
      ,dattra
      ,vlrbrt
      ,vlrliq
      ,vlrpc1
      ,vlrpcu
      ,modcap
      ,txadsc
      ,numlot
      ,extcrt
      ,nomcrt
      ,numtid
      ,tipbor
      ,nidbol
      ,numped
      ,dscprd
      ,codbnd
      ,dscadq
      ,dscsto
      ,dscstt
      ,regant
      ,filnam
      ,tipadt
      ,fceant
      ,tarint
      ,recint
      ,vlrdsp
      ,regpag
      ,reglib
      ,indlct
      ,sitpgt
      ,libpgt
      ,nidcta
      ,usupro
      ,bxabol
      ,nomsac
      ,codver
      ,codmoe
      ,valent
      ,dsclin
      ,dscrec
      ,dscpct
      ,datprv
      ,dscspg
      ,valdsp
      ,alsnam
	  ,staven

 FROM VWREGPOS A
 WHERE USUDLC = @CODUSU
 AND STAREC IN (1,13)
 AND (@STAREC IS NULL OR (STAVEN=@STAREC)) 
 AND (@TIPLIN IS NULL OR (TIPLIN=@TIPLIN))
 AND (@CODBND IS NULL OR (CODBND=@CODBND))
 AND (@NUMNSU IS NULL OR (NUMNSU LIKE @NUMNSU))
 AND (@EXTCRT IS NULL OR (EXTCRT LIKE @EXTCRT))
 AND (@ALSNAM IS NULL OR ((ALSNAM LIKE @ALSNAM) OR (NUMSER LIKE @ALSNAM)))
 AND (@SITPGT IS NULL OR (SITPGT = @SITPGT))
 AND (@INDCNC IS NULL OR (INDCNC = @INDCNC))

IF(@TIPPSD=1)
	BEGIN
		IF(@DATMOV1 IS NOT NULL AND @DATMOV2 IS NOT NULL)
			DELETE FROM #TMPREGPOS WHERE DATMOV NOT BETWEEN @DATMOV1 AND @DATMOV2
	END
IF(@TIPPSD=2)
	BEGIN
		IF(@DATMOV1 IS NOT NULL AND @DATMOV2 IS NOT NULL)
			DELETE FROM #TMPREGPOS WHERE PRVPGT NOT BETWEEN @DATMOV1 AND @DATMOV2
	END


INSERT INTO #TMPREGPOS
SELECT  1
      ,((((ROW_NUMBER() OVER(ORDER BY NIDRVM DESC))-1)/@PAGSIZ))+1
,nidrvm
      ,refrvm
      ,usrown
      ,codwal
      ,tiplct
      ,prvpgt
      ,prnpgt
      ,indcnc
      ,indreg
      ,stamov
      ,nidusm
      ,usudlc
      ,lotfin
      ,lotadt
      ,starec
      ,nidlim
      ,nidbco
      ,tiplin
      ,codcmf
      ,nomusu
      ,numnsu
      ,numpve
      ,numaut
      ,numter
      ,numser
      ,totpcl
      ,numpcl
      ,datmov
      ,prnmov
      ,dattra
      ,vlrbrt
      ,vlrliq
      ,vlrpc1
      ,vlrpcu
      ,modcap
      ,txadsc
      ,numlot
      ,extcrt
      ,nomcrt
      ,numtid
      ,tipbor
      ,nidbol
      ,numped
      ,dscprd
      ,codbnd
      ,dscadq
      ,dscsto
      ,dscstt
      ,regant
      ,filnam
      ,tipadt
      ,fceant
      ,tarint
      ,recint
      ,vlrdsp
      ,regpag
      ,reglib
      ,indlct
      ,sitpgt
      ,libpgt
      ,nidcta
      ,usupro
      ,bxabol
      ,nomsac
      ,codver
      ,codmoe
      ,valent
      ,dsclin
      ,dscrec
      ,dscpct
      ,datprv
      ,dscspg
      ,valdsp
      ,alsnam
	  ,staven

 FROM #TMPREGPOS
WHERE PAGOLD=0
DELETE FROM #TMPREGPOS WHERE PAGOLD=0

DECLARE @PAGMAX INT
SELECT @PAGMAX = MAX(PAGNRO) FROM #TMPREGPOS

SELECT *, @PAGMAX PAGMAX  
  FROM #TMPREGPOS
 WHERE (@PAGNRO IS NULL OR (PAGNRO=@PAGNRO))

        ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Usuário" name="CODUSU"  type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Tipo de Linha" name="TIPLIN"  sysnull="true" type="System.Int16" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Tipo de Pesquisa por Data" name="TIPPSD"  type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Data Inicial de Movimento" name="DATMOV1" type="System.String" size="10"  default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Data Final de Movimento" name="DATMOV2" type="System.String" size="10" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Status de Venda" sysnull="true" name="STAREC" type="System.Byte" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Código da Bandeira" sysnull="true" name="CODBND" type="System.Int16" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="NSU" name="NUMNSU" size="20" type="System.String" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Cartão Externo" name="EXTCRT" size="16" type="System.String" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Alias Machine" name="ALSNAM" size="50" type="System.String" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Situação de Pagamento" name="SITPGT"  sysnull="true" type="System.Byte" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Indicador de Conciliação" name="INDCNC"  sysnull="true" type="System.Byte" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Número da Página" name="PAGNRO"  type="System.Int32" sysnull="true" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Tamanho de Página" name="PAGSIZ"  type="System.Int32" default="100" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="SalesAdvanceRecord" return="int" procname="PRREGPOSCRTADT" desc ="Registro de Adiantamento de Vendas" returnvalue="1">
        <query>
          <![CDATA[
	SET @RETURN_VALUE = 0
	DECLARE @CTLPRO TINYINT= 0
	DECLARE @NIDLIM INT= 0
	SELECT @NIDLIM =NIDLIM FROM TBREGPOS WHERE NIDRVM=@NIDRVM
	SELECT @CTLPRO =ISNULL(MAX(CTLPRO),0)+1 FROM TBPOSDLT WHERE NIDLIM=@NIDLIM
	DECLARE @TIPREG TINYINT = 0
	DECLARE @BXAREG TINYINT = 0

	SET @TIPREG=9
	SET @BXAREG=11
	IF(@TIPADT=2)
	   BEGIN	
		  SET @TIPREG=10
		  SET @BXAREG=12
	   END
	INSERT INTO TBPOSDLT 
		(TIPLCT, TIPREG, CTLPRO, NIDRVM, NIDLIM, USUPRO, CODPRT, SIGOPE, INDLCT, CODMOV, VLRLAN, NIDCTA,CODUSU, DATMOV, NUMPCL, TIPVAL,UPDUSU)     
	SELECT 95,
	       B.TIPREG,
		   @CTLPRO,
		   A.NIDRVM, 
		   A.NIDLIM,
	       A.USUPRO, 
		   0 AS CODPRT, 
		   B.SIGOPE, 
		   B.INDLCT, 
		   B.CODMOV, 
		   A.VLRBRT, 
		   dbo.GetVirtualAccount(A.USUDLC,1,1) AS NIDCTA, 
		   A.USROWN AS CODUSU,
		   GETDATE(),
		   A.NUMPCL,
		   B.TIPVAL,
		   @UPDUSU
      FROM TBREGPOS A
     INNER JOIN TBLANPOS B 
	    ON (    A.TIPLIN = B.TIPLIN 
	    	AND @TIPREG  = B.TIPREG 
	    	AND B.TIPVAL = 1)
	     WHERE A.NIDRVM = @NIDRVM
       AND A.STAREC IN (1)                 
       AND A.VLRBRT > 0
       AND A.TIPLCT > 0
	   AND A.INDREG IN (1,3)
	   AND A.STAMOV = 1
	   AND A.NIDCTA > 0
	   AND 	RIGHT('0000000000' + CONVERT(VARCHAR(10),A.NIDRVM),10) + 
			RIGHT('0000000000' + CONVERT(VARCHAR(10),A.NIDLIM),10) +  
			RIGHT('00' + CONVERT(VARCHAR(2),B.TIPREG),2) + 
			RIGHT('00' + CONVERT(VARCHAR(2),B.SIGOPE),2) + 
			RIGHT('000' + CONVERT(VARCHAR(3),A.NUMPCL),3) + 
			RIGHT('00' + CONVERT(VARCHAR(2),B.TIPVAL),2)  NOT IN 
			(	SELECT DISTINCT 
				       RIGHT('0000000000' + CONVERT(VARCHAR(10),NIDRVM),10) + 
					   RIGHT('0000000000' + CONVERT(VARCHAR(10),NIDLIM),10) +  
					   RIGHT('00' + CONVERT(VARCHAR(2),TIPREG),2) + 
					   RIGHT('00' + CONVERT(VARCHAR(2),SIGOPE),2) + 
					   RIGHT('000' + CONVERT(VARCHAR(3),NUMPCL),3) + 
					   RIGHT('00' + CONVERT(VARCHAR(2),TIPVAL),2) 
	              FROM TBPOSDLT)

	IF(@@ROWCOUNT >0)			
		BEGIN

			INSERT INTO TBPOSDLT 
				(TIPLCT, TIPREG, CTLPRO, NIDRVM, NIDLIM, USUPRO, CODPRT, SIGOPE, INDLCT, CODMOV, VLRLAN, NIDCTA,CODUSU, DATMOV, NUMPCL, TIPVAL,UPDUSU)     
			SELECT 95,
			       B.TIPREG,
				   @CTLPRO,
				   A.NIDRVM, 
				   A.NIDLIM,
			       A.USUPRO, 
				   0 AS CODPRT, 
				   B.SIGOPE, 
				   B.INDLCT, 
				   B.CODMOV, 
				   A.VLRBRT, 
				   dbo.GetVirtualAccount(A.USUDLC,1,1) AS NIDCTA, 
				   A.USROWN AS CODUSU,
				   A.PRVPGT,
				   A.NUMPCL,
				   B.TIPVAL,
				   @UPDUSU
		      FROM TBREGPOS A
		     INNER JOIN TBLANPOS B 
			    ON (    A.TIPLIN = B.TIPLIN 
			    	AND @BXAREG  = B.TIPREG 
			    	AND B.TIPVAL = 1)
			     WHERE A.NIDRVM = @NIDRVM
		       AND A.STAREC IN (1)                 
		       AND A.VLRBRT > 0
		       AND A.TIPLCT > 0
			   AND A.INDREG IN (1,3)
			   AND A.STAMOV = 1
			   AND A.NIDCTA > 0
			   AND 	RIGHT('0000000000' + CONVERT(VARCHAR(10),A.NIDRVM),10) + 
					RIGHT('0000000000' + CONVERT(VARCHAR(10),A.NIDLIM),10) +  
					RIGHT('00' + CONVERT(VARCHAR(2),B.TIPREG),2) + 
					RIGHT('00' + CONVERT(VARCHAR(2),B.SIGOPE),2) + 
					RIGHT('000' + CONVERT(VARCHAR(3),A.NUMPCL),3) + 
					RIGHT('00' + CONVERT(VARCHAR(2),B.TIPVAL),2)  NOT IN 
					(	SELECT DISTINCT 
						       RIGHT('0000000000' + CONVERT(VARCHAR(10),NIDRVM),10) + 
							   RIGHT('0000000000' + CONVERT(VARCHAR(10),NIDLIM),10) +  
							   RIGHT('00' + CONVERT(VARCHAR(2),TIPREG),2) + 
							   RIGHT('00' + CONVERT(VARCHAR(2),SIGOPE),2) + 
							   RIGHT('000' + CONVERT(VARCHAR(3),NUMPCL),3) + 
							   RIGHT('00' + CONVERT(VARCHAR(2),TIPVAL),2) 
			              FROM TBPOSDLT)
			SET @RETURN_VALUE=1					
		END
	RETURN @RETURN_VALUE		        
        ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Id do Registro de Vendas" name="NIDRVM"  type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU"  type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Tipo de Adiantamento" name="TIPADT"  type="System.Byte" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="UpdateRecordSaleAccounting" return="int" procname="PRREGPOSUPDACT" desc ="Efetua a atualização da tabela de registro de vendas com informações de contabilização" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE =0
BEGIN TRY
	UPDATE TBREGPOS
	   SET SITPGT = 3, LOTADT =B.LOTFIN
    FROM TBREGPOS A
   INNER JOIN (SELECT NIDRVM, LOTFIN
			           FROM TBPOSDLT (NOLOCK)
                WHERE LOTFIN=@LOTFIN AND TIPREG IN (9)) B
     ON (A.NIDRVM = B.NIDRVM)

 UPDATE TBREGPOS
    SET SITPGT = 4, LOTADT =B.LOTFIN
   FROM TBREGPOS A
  INNER JOIN (SELECT NIDRVM, LOTFIN
			          FROM TBPOSDLT (NOLOCK) 
               WHERE LOTFIN=@LOTFIN  AND TIPREG IN (11)) B
     ON (A.NIDRVM = B.NIDRVM)
  SET @RETURN_VALUE=1
END TRY
BEGIN CATCH
	SET @RETURN_VALUE=-1
END CATCH
SELECT @RETURN_VALUE 
        ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Lote Financeiro" name="LOTFIN"  type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>


      <item script="true" alias="A." sql="" method="LocateMachine" return="int" procname="PRREGPOSLOCMAQ" desc ="Localiza uma máquina com base no número do estabelecimento e o número do terminal" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE = 0
	DECLARE @CODUSM INT
	SET @CODUSM=0
	SELECT 
		@CODUSM = CODUSM 
	FROM TBUSUMAQ (NOLOCK) A 
		INNER JOIN TBCADMAQ (NOLOCK) B 
			ON (A.NIDMAQ = B.NIDMAQ) 
		INNER JOIN TBLIGUSU (NOLOCK) C 
			ON (A.USUREF = C.USUREF AND A.CODUSU = C.CODUSU)
	WHERE 
			LTRIM(RTRIM(B.NUMPVE)) = LTRIM(RTRIM(@NUMPVE))
		AND LTRIM(RTRIM(B.NUMTER)) = LTRIM(RTRIM(@NUMTER))
		AND B.STAMAQ=240
		AND B.STAREC=1
		AND C.TIPLIG=2
		AND C.STAREC=1
	SET @RETURN_VALUE=@CODUSM
	RETURN @RETURN_VALUE          
        ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Número do Estabelecimento" name="NUMPVE"  type="System.String"  size="15" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Número do Terminal" name="NUMTER"  type="System.String"  size="15" default="" output="" null="false"/>
        </parameters>
      </item>


      <item script="true" alias="A." sql="" method="ReportSales" type="DataTable" return="DataTable" procname="PRREGPOSRELVEN" desc ="Emite um relatório de informações de vendas baseadas em um período" returnvalue="0">
        <query>
          <![CDATA[
          
DECLARE @TMP TABLE (
	[USUDLC] [int] NOT NULL,
	[NOMUSU] [varchar](70) NULL,
	[NUMSER] [varchar](25) NOT NULL,
	[NUMVEN] [int] NULL,
	[SUMVEN] [money] NULL,
	[AVGVEN] [money] NULL,
	[DATATV] [datetime] NULL,
	[VALV30] [money] NULL,
	[CNTV30] [int] NULL,
	[ULTVEN] [date] NULL
) 

INSERT INTO @TMP (USUDLC,NOMUSU,NUMSER,NUMVEN,SUMVEN,AVGVEN,DATATV,VALV30,CNTV30,ULTVEN)
SELECT USUDLC, MAX(B.NOMUSU) AS NOMUSU, A.NUMSER
	,COUNT(*) AS NUMVEN 
	,SUM(VLRBRT) AS SUMVEN 
    ,AVG(VLRBRT) AS AVGVEN 
    ,MAX(C.DATCAD) AS DATATV 
    ,SUM(CASE WHEN A.DATMOV >= DATEADD(dd,-30,getdate()) AND A.DATMOV <= GETDATE() then vlrbrt else 0 end) AS ULTVEN
    ,SUM(CASE WHEN A.DATMOV >= DATEADD(dd,-30,getdate()) AND A.DATMOV <= GETDATE() then 1 else 0 end) AS CNTVEN
	,MAX(DATMOV) AS ULTVEN
  FROM TBREGPOS (NOLOCK) A
  LEFT JOIN TBCADUSU (NOLOCK) B
    ON (A.USUDLC = B.CODUSU)
  LEFT JOIN TBUSUMAQ (NOLOCK) C
    ON (A.NIDUSM = C.CODUSM)
 WHERE A.USROWN=1000
   AND A.INDREG IN (1,2)
   AND A.DATMOV >= @DATMOV1 AND A.DATMOV<=@DATMOV2
 GROUP BY A.USUDLC, A.NUMSER

INSERT INTO @TMP (USUDLC,NOMUSU,NUMSER,NUMVEN,SUMVEN,AVGVEN,DATATV,VALV30,CNTV30,ULTVEN)
SELECT DISTINCT USUREF, ISNULL(C.NOMUSU,'') NOMUSU, B.NUMSER,0,0,0,NULL,0,0,NULL 
  FROM TBUSUMAQ  (NOLOCK) A
  LEFT JOIN TBCADMAQ  (NOLOCK) B
    ON (A.NIDMAQ = B.NIDMAQ)
  LEFT JOIN TBCADUSU  (NOLOCK) C
    ON (A.USUREF = C.CODUSU)
 WHERE B.USUOWN=1000 and b.numser not in (select numser from @tmp)

SELECT * FROM @TMP
          
        ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Data Inicial de Movimento" name="DATMOV1"  type="System.String" size="20" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Data Final de Movimento" name="DATMOV2"  type="System.String" size="20" default="" output="" null="false"/>
        </parameters>
      </item>
    </methods>
  </item>
  <item create="true"  id="52" name="TBREGBCC">
    <UpdateKey>Key</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>false</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>100000000</asp>
    <csharp>11110000</csharp>
    <SelectAllList></SelectAllList>
    <StringSqlSelectAll></StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll>TRUE</CreateSelectionAll>
    <SelectAllAlias>A.</SelectAllAlias>
    <MaxFields></MaxFields>
  </item>
  <item create="true"  id="53" name="TBUSUMAQ" friendlyname="UserMachine" modelversion="3">
    <UpdateKey select="both">Key</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <procedure>1110000000</procedure>
    <asp>100000000</asp>
    <csharp>11100000</csharp>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="UserMachine" procname="" desc ="Seleciona o registro de associação usuário x máquina com base no id de identificação">
        <query>
          <![CDATA[SELECT * FROM TBUSUMAQ (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código de Associação Usuário Máquina" name="CODUSM" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="Select" return="UserMachine" procname="PRUSUMAQSELCEM" desc ="Seleciona o registro de associação usuário máquina com base no código do cliente, estabelecimento e código da máquina">
        <query>
          <![CDATA[SELECT * FROM TBUSUMAQ (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Cliente" name="USUREF" type="int" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código do Estabelecimento" name="CODUSU" type="int" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="ID da Máquina" name="NIDMAQ" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="B." sql="" method="Select" return="UserMachine" procname="PRUSUMAQSELSER" desc ="Seleciona o registro de associação usuário máquina com base no número de série da máquina">
        <query>
          <![CDATA[SELECT * FROM TBUSUMAQ (NOLOCK) A INNER JOIN TBCADMAQ (NOLOCK) B ON (A.NIDMAQ = B.NIDMAQ) WHERE A.STAREC=1 AND B.STAREC=1 ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Número de Série" name="NUMSER" type="System.String" size="30" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="SELECT TOP 1 * FROM TBUSUMAQ (NOLOCK)" method="List" type="List" return="UserMachine" procname="PRUSUMAQSELMAQ" desc ="Seleciona o registro de associação usuário máquina com base no id da máquina">
        <query>
          <![CDATA[SELECT * FROM TBUSUMAQ (NOLOCK) A WHERE A.STAREC=1]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da Máquina" name="NIDMAQ" type="int" default="" output="" null="false"/>
        </parameters>
      </item>

    </selectcommand>

    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD', 'CODUSM'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD=GETDATE();
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </updatecommand>
    <selectallcommand>
      <item script="true" alias="F." sql="" method="SelectAll" return="DataTable" procname="" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query>
          <![CDATA[
 SELECT A.*, 
       isnull(d.dsctab,'') DSCREC, 
       f.NUMSER, 
       f.NUMPVE,        
       f.NUMTER, 
       b.NOMUSU AS DSCREF, 
       isnull(c.nomusu,'ESTABELECIMENTO INVALIDO') as DSCEST, 
       isnull(e.lgnusu,'') as DSCUPD, 
       CASE WHEN A.CHKINT=0 THEN 'NAO' ELSE 'SIM' END AS DSCINT,
	   g.DSCSTA        
  from TBUSUMAQ (nolock) a 
 inner join tbcadusu (nolock) b 
    on (a.usuref = b.codusu)
  left join tbcadusu (nolock) c 
    on (5 = C.CODATR AND a.codusu =c.codusu)
  left join tbtabger (nolock) d 
    on (7 = D.NUMTAB AND a.starec = d.keycod)
 inner join TBCADMAQ (nolock) F 
    on (a.nidmaq = f.nidmaq)
  left join tbcadusu (nolock) e 
    on (a.updusu = e.codusu)
 INNER join tbcadsta (nolock) g 
    on (f.stamaq = g.codsta)
 WHERE A.STAREC=1    
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Usuário Proprietário" name="USUOWN" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="F." sql="" method="SelectMachine" return="DataTable" procname="PRUSUMADSELMAC" desc ="Seleciona todos os específicos à uma máquina">
        <query order="A.DATUPD DESC, A.STAREC DESC">
          <![CDATA[
 SELECT A.*, 
       isnull(d.dsctab,'') DSCREC, 
       f.NUMSER, 
       f.NUMPVE,        
       f.NUMTER, 
       b.NOMUSU, 
       isnull(c.nomusu,'ESTABELECIMENTO INVALIDO') as DSCEST, 
       isnull(e.lgnusu,'') as DSCUPD, 
       CASE WHEN A.CHKINT=0 THEN 'NAO' ELSE 'SIM' END AS DSCINT,
	   g.DSCSTA        
  from TBUSUMAQ (nolock) a 
 inner join tbcadusu (nolock) b 
    on (a.usuref = b.codusu)
  left join tbcadusu (nolock) c 
    on (5 = C.CODATR AND a.codusu =c.codusu)
  left join tbtabger (nolock) d 
    on (7 = D.NUMTAB AND a.starec = d.keycod)
 inner join TBCADMAQ (nolock) F 
    on (a.nidmaq = f.nidmaq)
  left join tbcadusu (nolock) e 
    on (a.updusu = e.codusu)
 INNER join tbcadsta (nolock) g 
    on (f.stamaq = g.codsta)
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da Máquina" name="NIDMAQ" type="int" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="ReportSales" return="DataTable" procname="PRUSUMAQREPVEN" desc ="Relatório Sintético de Vendas com base no ID de Associação de Usuário Máquina">
        <query>
          <![CDATA[
DECLARE @TB1 TABLE (NIDUSM INT DEFAULT 0, STAREC TINYINT DEFAULT 1, NUMSER VARCHAR(20) DEFAULT '', DATATV DATE DEFAULT NULL,NOMUSU VARCHAR(70) DEFAULT '', NUMVEN INT DEFAULT 0, SUMVEN FLOAT DEFAULT 0, AVGVEN FLOAT DEFAULT 0, ULTVEN FLOAT DEFAULT 0, CNTVEN INT DEFAULT 0, DTUVEN DATETIME DEFAULT NULL )
INSERT INTO @TB1 (NIDUSM,NUMSER,NOMUSU,NUMVEN,SUMVEN,AVGVEN,ULTVEN,CNTVEN,DTUVEN)
SELECT C.NIDUSM
,C.NUMSER
,MAX(B.NOMUSU) AS NOMUSU
,COUNT(*) AS NUMVEN
,SUM(VLRBRT) AS SUMVEN
    ,AVG(VLRBRT) AS AVGVEN
    ,SUM(CASE WHEN C.DATMOV >= DATEADD(dd,-30,getdate()) AND C.DATMOV <= GETDATE() then vlrbrt else 0 end) AS ULTVEN
    ,SUM(CASE WHEN C.DATMOV >= DATEADD(dd,-30,getdate()) AND C.DATMOV <= GETDATE() then 1 else 0 end) AS CNTVEN
,MAX(C.DATMOV) AS DTUVEN
 FROM TBREGPOS (NOLOCK) C
 LEFT JOIN TBCADUSU (NOLOCK) B
   ON (B.CODUSU = C.USUDLC)
WHERE C.USROWN=@USROWN
AND C.INDREG IN (1,2)
AND C.STAREC<>13
AND C.DATMOV >= @DATMOV1 AND C.DATMOV<=@DATMOV2
GROUP BY C.NIDUSM, C.NUMSER


INSERT INTO @TB1 (NIDUSM,DATATV, NUMSER,NOMUSU)
SELECT DISTINCT CODUSM, MAX(A1.DATCAD) DATCAD, NUMSER, MAX(A3.NOMUSU) 
  FROM TBUSUMAQ (NOLOCK) A1 
 INNER JOIN TBCADMAQ (NOLOCK) A2 
    ON (A1.NIDMAQ = A2.NIDMAQ) 
 INNER JOIN TBCADUSU (NOLOCK) A3 
    ON (A3.CODUSU = A1.USUREF)
WHERE USUOWN=@USROWN 
GROUP BY A1.CODUSM, A2.NUMSER

UPDATE @TB1 SET STAREC = B.STAREC
  FROM @TB1 A
 INNER JOIN TBUSUMAQ (NOLOCK) B
    ON (A.NIDUSM = B.CODUSM)

SELECT NIDUSM, STAREC,NUMSER, MAX(DATATV) DATATV, MAX(NOMUSU) NOMUSU, MAX(NUMVEN) NUMVEN, MAX(SUMVEN) SUMVEN, MAX(AVGVEN) AVGVEN, MAX(ULTVEN) ULTVEN, MAX(CNTVEN) CNTVEN, MAX(DTUVEN) DTUVN  FROM @TB1  GROUP BY NIDUSM, NUMSER, STAREC
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="false" desc ="Código do Proprietario"       name="USROWN"  type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Data Inicial de Movimento"    name="DATMOV1" type="System.String" size="20" default="" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Data Final de Movimento"      name="DATMOV2" type="System.String" size="20" default="" output="" null="false"/>
        </parameters>
      </item>

    </selectallcommand>

    <methods>

      <item webtype="POST" script="true" alias="A." sql="" method="AssociateUserMachine" return="int" returnmode="1" procname="PRUSUMAQASSMAQ" desc ="Associa uma máquina a um usuário" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE =0
DECLARE @NUMALO INT = 0
DECLARE @CODUSM INT = 0
DECLARE @ASSNUM TINYINT = 1
IF(@NIDMAQ<=0)
   SET @RETURN_VALUE = -1
IF(@USUREF<=0)
   SET @RETURN_VALUE = -2
IF(@CODUSU<=0)
   SET @RETURN_VALUE = -3
IF(@UPDUSU<=0)
   SET @RETURN_VALUE = -4
IF(@CODWAL='')
   SET @RETURN_VALUE = -5
IF(@ALSNAM='')
   SET @RETURN_VALUE = -6
   
BEGIN TRANSACTION   
  
IF(@RETURN_VALUE=0)
   BEGIN
      SELECT @NUMALO = ISNULL(COUNT(*),0) FROM TBUSUMAQ WHERE NIDMAQ=@NIDMAQ AND STAREC=1

      IF(@NUMALO=1 OR @NUMALO=0)
        BEGIN
          SELECT @CODUSM = ISNULL(CODUSM,0) FROM TBUSUMAQ (NOLOCK) WHERE NIDMAQ=@NIDMAQ AND STAREC=1
		      /*
		       * Verifica se ja existe uma associação existente e remove
		       */
          IF(@CODUSM > 0)
            BEGIN 
	            UPDATE TBUSUMAQ SET STAREC=0, DATUPD =GETDATE(), UPDUSU=@UPDUSU WHERE CODUSM=@CODUSM
				      IF(@@ERROR<>0)
				        SET @RETURN_VALUE=-8
            END 
		
		      IF(@RETURN_VALUE=0)
			      BEGIN
					    SELECT @ASSNUM = COALESCE(MAX(ISNULL(ASSNUM,0))+1,1)  FROM TBUSUMAQ (NOLOCK) WHERE NIDMAQ=@NIDMAQ AND USUREF=@USUREF AND CODUSU=@CODUSU AND TIPLIG=2
					    INSERT INTO TBUSUMAQ (NIDMAQ,USUREF,CODUSU,TIPLIG,STAREC,UPDUSU,CODWAL,ALSNAM,ASSNUM) VALUES(@NIDMAQ, @USUREF,@CODUSU,2,1,@UPDUSU,@CODWAL,@ALSNAM,@ASSNUM)                        
					    IF (@@ERROR=0)
 			            BEGIN
							      UPDATE TBCADMAQ SET STAMAQ =242, DATUPD=GETDATE(), UPDUSU=@UPDUSU WHERE NIDMAQ = @NIDMAQ
							      SET @RETURN_VALUE=1
					        END
			        ELSE
				        SET @RETURN_VALUE=-9
            END
       END
     ELSE
        SET @RETURN_VALUE=-7               
   END
   
IF(@RETURN_VALUE = 1)
   COMMIT TRAN
ELSE
   ROLLBACK TRAN
RETURN @RETURN_VALUE


          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da Máquina" name="NIDMAQ" type="System.Int32"  default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código do Usuário" name="USUREF" type="System.Int32"  default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código do Estabelecimento" name="CODUSU" type="System.Int32"  default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32"  default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Wallet ID" name="CODWAL" type="System.String" size="20" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Apelido" name="ALSNAM" type="System.String" size="50" default="" output="" null="false"/>          
        </parameters>
        <returns>
          <return value="0" message="" error="FAILALL"></return>          
          <return value="1" message="MAQUINA ALOCADA COM SUCESSO" error="OK"></return>
          <return value="-1" message="O ID DA MÁQUINA E INVALIDO OU NAO FOI FORNECIDO" error="INVALIDARGUMENT"></return>
          <return value="-2" message="O ID DO USUÁRIO E INVALIDO OU NAO FOI FORNECIDO" error="INVALIDARGUMENT"></return>
          <return value="-3" message="O ID DO ESTABELECIMENTO E INVALIDO OU NAO FOI FORNECIDO" error="INVALIDARGUMENT"></return>
          <return value="-4" message="" error="INVALIDUSERUPDATE"></return>
          <return value="-5" message="O ID DA CARTEIRA E INVALIDO OU NAO FOI FORNECIDO" error="INVALIDARGUMENT"></return>
          <return value="-6" message="O APELIDO FUNCIONAL E INVALIDO OU NAO FOI FORNECIDO" error="INVALIDARGUMENT"></return>
          <return value="-7" message="A MAQUINA POSSUI MAIS DE UM REGISTRO DE ALOCACAO" error="INVALIDARGUMENT"></return>
          <return value="-8" message="NAO FOI POSSIVEL REMOVER A ALOCACAO ANTERIOR DA MAQUINA" error="INVALIDARGUMENT"></return>
          <return value="-9" message="FALHA NA INSERCAO DA ALOCACAO ATUAL" error="INVALIDARGUMENT"></return>
        </returns>
      </item>

      <item webtype="POST" script="true" alias="A." sql="" method="DesassociateMachine" return="int" returnmode="1" procname="PRUSUMAQDESASSMAQ" desc ="Dessasocia uma máquina de um usuário" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE =0
DECLARE @NUMALO INT = 0
DECLARE @CODUSM INT = 0
IF(@NIDMAQ<=0)
   SET @RETURN_VALUE = -1
IF(@UPDUSU<=0)
   SET @RETURN_VALUE = -2

BEGIN TRANSACTION

IF(@RETURN_VALUE=0)
   BEGIN
      SELECT @CODUSM = ISNULL(CODUSM,0) FROM TBUSUMAQ (NOLOCK) WHERE NIDMAQ=@NIDMAQ AND STAREC=1
      IF(@CODUSM>0)
         BEGIN 
            UPDATE TBUSUMAQ SET STAREC=0, DATUPD =GETDATE(), UPDUSU=@UPDUSU WHERE CODUSM=@CODUSM
            IF(@@ERROR=0)
                 UPDATE TBCADMAQ SET STAMAQ =240, DATUPD=GETDATE(), UPDUSU=@UPDUSU WHERE NIDMAQ = @NIDMAQ
                 BEGIN
                    IF(@@ERROR=0)
                       SET @RETURN_VALUE=1
                 END
            END
          ELSE
            SET @RETURN_VALUE = -3 
    END            
   
IF(@RETURN_VALUE = 1)
   COMMIT TRAN
ELSE
   ROLLBACK TRAN
RETURN @RETURN_VALUE   
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da Máquina" name="NIDMAQ" type="System.Int32"  default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32"  default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="0" message="" error="FAILALL"></return>
          <return value="1" message="MAQUINA DESALOCADA COM SUCESSO" error="OK"></return>
          <return value="-1" message="O ID DA MÁQUINA E INVALIDO OU NAO FOI FORNECIDO" error="INVALIDARGUMENT"></return>
          <return value="-2" message="" error="INVALIDUSERUPDATE"></return>
          <return value="-3" message="NAO EXISTE ASSOCIACAO PARA ESTA MAQUINA" error="INVALIDARGUMENT"></return>
        </returns>
      </item>

    <item script="true" alias="A." sql="" method="CheckIntegrity" return="int" returnmode="2" procname="PRUSUMAQCHKINT" desc ="Checa a integridade de uma associação de máquina" returnvalue="0">
        <query>
          <![CDATA[
DECLARE @CODUSM INT = 0
SELECT @CODUSM = CODUSM
  FROM TBUSUMAQ (NOLOCK) A
 INNER JOIN TBCADMAQ (NOLOCK) B
    ON (A.NIDMAQ = B.NIDMAQ)
 WHERE A.STAREC = 1
   AND B.STAREC = 1
   AND B.STAMAQ = @STAMAQ   
   AND LTRIM(RTRIM(B.NUMSER)) = LTRIM(RTRIM(@NUMSER))
   AND LTRIM(RTRIM(A.CODWAL)) = LTRIM(RTRIM(@CODWAL))
IF(@CODUSM >0)
   UPDATE TBUSUMAQ SET CHKINT = 1 WHERE CODUSM = @CODUSM
SELECT @CODUSM   
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="false" desc ="Wallet ID" name="CODWAL" type="System.String" size="15" default="" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Número de Série" alias="B." name="NUMSER" type="System.String" size="15" default="" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Status da Associação" alias="" name="STAMAQ" type="System.Int16" default="242" output="" null="false"/>
        </parameters>
        <returns>
          <return operator=">" value="0" message="" error="OK"></return>
          <return value="0" message="" error="RECORDNOTFOUND"></return>
        </returns>
      </item>

    </methods>
  </item>
  <item create="true"  id="54" name="TBCADMAQ" friendlyname="Machine Registration" modelversion="3">
    <UpdateKey>Identity</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>false</CSharpPartial>
    <SqlTable></SqlTable>
    <procedure>1111000000</procedure>
    <asp>100000000</asp>
    <csharp>11110000</csharp>
    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD', 'NIDMAQ'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD=GETDATE();
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </updatecommand>

    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="MachineRegistration" procname="PRCADMAQSEL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query>
          <![CDATA[SELECT * FROM TBCADMAQ (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da Máquina" name="NIDMAQ" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="Select" return="MachineRegistration" procname="PRCADMAQSELSER" desc ="Seleciona o registro de máquina de acordo com o proprietário e o número de série da máquina">
        <query>
          <![CDATA[SELECT * FROM TBCADMAQ (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Usuário Proprietário" name="USUOWN" type="int" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Número de Série" name="NUMSER" size="30" type="System.String" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRCADMAQSELALL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query append="SELECT @PAGMAX = MAX(ISNULL(PAGNRO,0)) FROM @RESULT
SELECT A.*, @PAGMAX PAGMAX FROM @RESULT A WHERE(1=1) AND  (A.PAGNRO=@PAGNRO)
">
          <![CDATA[
DECLARE @PAGMAX INT          

DECLARE @RESULT TABLE (
	[PAGNRO] [SMALLINT] NOT NULL,
	[NIDMAQ] [int] NOT NULL,
	[TIPMAQ] [tinyint] NOT NULL,
	[STAMAQ] [int] NOT NULL,
	[STAREC] [tinyint] NOT NULL,
	[DATCAD] [datetime] NOT NULL,
	[DATUPD] [datetime] NOT NULL,
	[UPDUSU] [int] NOT NULL,
	[DATRCB] [date] NOT NULL,
	[NUMSER] [varchar](30) NULL,
	[DSCMDL] [varchar](30) NULL,
	[DSCFAB] [varchar](30) NULL,
	[NUMPVE] [varchar](15) NOT NULL,
	[NUMTER] [varchar](15) NOT NULL,
	[USUOWN] [int] NOT NULL,
	[NIDFOR] [int] NOT NULL,
	[NIDSXM] [int] NOT NULL,
	DSCSTA VARCHAR(100),
	DSCREC VARCHAR(100),
	NOMUSU VARCHAR(70),
	NOMEST VARCHAR(70),
	NOMFOR VARCHAR(70))

INSERT INTO @RESULT (PAGNRO,
	[NIDMAQ],
	[TIPMAQ],
	[STAMAQ],
	[STAREC],
	[DATCAD],
	[DATUPD],
	[UPDUSU],
	[DATRCB],
	[NUMSER],
	[DSCMDL],
	[DSCFAB],
	[NUMPVE],
	[NUMTER],
	[USUOWN],
	[NIDFOR],
	[NIDSXM],
	DSCSTA ,
	DSCREC ,
	NOMUSU ,
	NOMEST ,
	NOMFOR )

SELECT PAGNRO = ((((ROW_NUMBER() OVER(ORDER BY A.NIDMAQ DESC))-1)/@PAGSIZ))+1
   ,A.* ,B.DSCSTA
  ,ISNULL(C.DSCTAB,'') AS DSCREC
  ,ISNULL(E.NOMUSU,'SEM CLIENTE') AS NOMUSU
  ,ISNULL(F.NOMUSU,'SEM ESTABELECIMENTO') AS NOMEST
  ,ISNULL(H.NOMUSU,'') AS NOMFOR  
  FROM TBCADMAQ (NOLOCK) A 
 INNER JOIN TBCADSTA (NOLOCK) B 
   ON (A.STAMAQ = B.CODSTA)
 LEFT JOIN TBGSTFOR (NOLOCK) G 
   ON (G.NIDFOR = A.NIDFOR)
 LEFT JOIN TBCADUSU (NOLOCK) H 
   ON (H.CODUSU = G.CODFOR)
 INNER JOIN TBTABGER (NOLOCK) C 
 	 ON  (7 = C.NUMTAB AND A.STAREC= C.KEYCOD)
 LEFT JOIN TBUSUMAQ (NOLOCK) D 
 	 ON  (A.NIDMAQ = D.NIDMAQ)
 LEFT JOIN TBCADUSU (NOLOCK) E 
 	 ON  (D.USUREF = E.CODUSU)
 LEFT JOIN TBCADUSU (NOLOCK) F 
 	 ON  (D.CODUSU = F.CODUSU)
WHERE ISNULL(D.STAREC,1)=1

          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Usuário Proprietário" name="USUOWN" type="int" sysnull="true" default="null" output="" null="true"/>
          <parameter input="true" desc ="Status da Máquina" name="STAMAQ" type="System.Int16"  default="null" output="" null="true"/>
          <parameter input="true" apply="false" desc ="Página" name="PAGNRO" type="System.Int16" default="1" output="" null="false"/>
          <parameter input="true" islike="true" desc ="Número de Série" name="NUMSER" type="System.String" size="30" default="null" output="" null="true"/>
          <parameter input="true" islike="true" desc ="Modelo" name="DSCMDL" type="System.String" size="30" default="null" output="" null="true"/>
          <parameter input="true" islike="true" desc ="Fabricante" name="DSCFAB" type="System.String" size="30" default="null" output="" null="true"/>
          <parameter input="true" islike="true" desc ="PVE" name="NUMPVE" type="System.String" size="30" default="null" output="" null="true"/>
          <parameter input="true" islike="true" desc ="Terminal" name="NUMTER" type="System.String" size="30" default="null" output="" null="true"/>
          <parameter input="true" apply="false" desc ="Tamanho de Página"  name="PAGSIZ" type="System.Int32" default="100" output="" null="false"/>
          <parameter input="true" desc ="Id de Fornecimento" name="NIDFOR" type="int" sysnull="true" default="null" output="" null="true"/>
        </parameters>
      </item>
    </selectallcommand>
  </item>
  <item create="true"  id="55" name="TBUSUCFG" friendlyname="UserConfig" modelversion="3">
    <UpdateKey select="both">Key</UpdateKey>
    <audit>true</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable><![CDATA[SELECT top 1 NIDCFG,USUCFG,NIVCFG,STAREC,DATCAD,UPDUSU,VLRMEN,VLRTAR,VLRVEN,PRMCOM,PRMFAT,VLRMBL,VLRMRC,VLRMTC,APLTAT,VLRTAT,INSBC1,INSBC2,INSBC3,APLTRF,VLRTRF,VLRTOB,DATMPC,APLTAD,TAXJUR,TAXOPE,TOMMEN,DATUPD,ACPDEB,ACPCRT,MAXPCL,ACPBOL,CODTRA,ANTCRC,ACPMAL,ACPSMS,ACPPST,TIPREC,NUMDVF,ALTCPG,ALTNPG,ALTENV,URLRET,PRMAEX,VALEBO,PRCMUL,APLTDP,REGAGV,ACEURL,NUMLMO FROM dbo.TBUSUCFG]]></SqlTable>
    <!-- SELECT top 1NIDCFG,USUCFG,NIVCFG,STAREC,DATCAD,UPDUSU,STAINI,VLRMEN,VLRTAR,VLRVEN,PRMCOM,PRMFAT,PRMREC,PRMAPI,VLRMBL,VLRMRC,VLRMTC,APLTAT,VLRTAT,INSBC1,INSBC2,INSBC3,APLTRF,VLRTRF,VLRTOB,DATMPC,APLTAD,TAXJUR,TAXOPE,TOMMEN,DATUPD,ACPDEB,ACPCRT,MAXPCL,ACPBOL,CODTRA,ANTCRC,ACPMAL,ACPSMS,ACPPST,TIPREC,NUMDVF,ALTCPG,ALTNPG,ALTENV,URLRET,PRMASL,PRMACD,PRMARC,PRMAEX,PRMACO,PRMASC,PRMCKI,PRMCHP,PRMFTK,PRMLCR,PRMUCR,VALEBO,PRCMUL,APLTDP,REGAGV,ACEURL,NUMLMO FROM dbo.TBUSUCFG -->
    <ExtendedModel><![CDATA[SELECT top 1 NIDCFG,USUCFG,NIVCFG,STAREC,DATCAD,UPDUSU,VLRMEN,VLRTAR,VLRVEN,PRMCOM,PRMFAT,VLRMBL,VLRMRC,VLRMTC,APLTAT,VLRTAT,INSBC1,INSBC2,INSBC3,APLTRF,VLRTRF,VLRTOB,DATMPC,APLTAD,TAXJUR,TAXOPE,TOMMEN,DATUPD,ACPDEB,ACPCRT,MAXPCL,ACPBOL,CODTRA,ANTCRC,ACPMAL,ACPSMS,ACPPST,TIPREC,NUMDVF,ALTCPG,ALTNPG,ALTENV,URLRET,PRMAEX,VALEBO,PRCMUL,APLTDP,REGAGV,ACEURL,NUMLMO FROM dbo.TBUSUCFG]]></ExtendedModel>
    <fieldreturn></fieldreturn>
    <procedure>1110000000</procedure>
    <asp>1110000000</asp>
    <csharp>1110000000</csharp>
    <SelectAllList>CODUSU</SelectAllList>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <MaxFields></MaxFields>

    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="UserConfig" procname="PRUSUCFGSEL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query>
          <![CDATA[SELECT * FROM TBUSUCFG (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Usuário" name="USUCFG" type="int" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Nivel de Configuração do Usuário" name="NIVCFG" type="System.Byte"  default="" output="" null="true"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="Select" return="UserConfig" procname="PRUSUCFGSELNID" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query>
          <![CDATA[SELECT * FROM TBUSUCFG (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Configuração de Usuário" name="NIDCFG" type="int" default="" output="" null="false"/>
        </parameters>
      </item>

    </selectcommand>
    <insertcommand key="Key" exceptionparamns="'DATCAD','DATUPD', 'NIDCFG'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="key" exceptionparamns="'DATCAD','DATUPD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </updatecommand>

    <methods>
      <item script="true" alias="A." sql="" method="Copy" return="int" procname="PRUSUCFGCPY" desc ="Copia um registro de configuração para outro usuario" returnvalue="1">
        <query>
          <![CDATA[
    SET @RETURN_VALUE=0
    IF(NOT (EXISTS(SELECT 1 FROM TBUSUCFG (NOLOCK) WHERE USUCFG = @USUCFG AND NIVCFG = @NIVCFG)))
	    BEGIN
      	INSERT INTO TBUSUCFG (
             USUCFG,NIVCFG,STAREC,DATCAD,UPDUSU
            ,STAINI,VLRMEN,VLRTAR,VLRVEN,PRMCOM
            ,PRMFAT,PRMREC,PRMAPI,VLRMBL,VLRMRC
            ,VLRMTC,APLTAT,VLRTAT,INSBC1,INSBC2
            ,INSBC3,APLTRF,VLRTRF,VLRTOB,DATMPC
            ,APLTAD,TAXJUR,TAXOPE,TOMMEN,DATUPD
            ,ACPDEB,ACPCRT,MAXPCL,ACPBOL,CODTRA
            ,ANTCRC,ACPMAL,ACPSMS,ACPPST,TIPREC
            ,NUMDVF,ALTCPG,ALTNPG,ALTENV,URLRET
            ,PRMASL,PRMACD,PRMARC,PRMAEX,PRMACO
            ,PRMASC,PRMCKI,PRMCHP,PRMFTK,PRMLCR,
            PRMUCR,VALEBO,PRCMUL,APLTDP,REGAGV,ACEURL,NUMLMO                  
      	  )
      	SELECT
             @USUCFG,@NIVCFG,STAREC,GETDATE(),@UPDUSU
            ,STAINI,VLRMEN,VLRTAR,VLRVEN,PRMCOM
            ,PRMFAT,PRMREC,PRMAPI,VLRMBL,VLRMRC
            ,VLRMTC,APLTAT,VLRTAT,INSBC1,INSBC2
            ,INSBC3,APLTRF,VLRTRF,VLRTOB,DATMPC
            ,APLTAD,TAXJUR,TAXOPE,TOMMEN,DATUPD
            ,ACPDEB,ACPCRT,MAXPCL,ACPBOL,CODTRA
            ,ANTCRC,ACPMAL,ACPSMS,ACPPST,TIPREC
            ,NUMDVF,ALTCPG,ALTNPG,ALTENV,URLRET
            ,PRMASL,PRMACD,PRMARC,PRMAEX,PRMACO
            ,PRMASC,PRMCKI,PRMCHP,PRMFTK,PRMLCR
            ,PRMUCR,VALEBO,PRCMUL,APLTDP,REGAGV,ACEURL,NUMLMO
      	FROM TBUSUCFG
      	WHERE USUCFG = @SRCCFG
      		AND NIVCFG = @SRCNIV
      		AND STAREC > 0
      	SET @RETURN_VALUE = @@ROWCOUNT;
	  END
    RETURN @RETURN_VALUE;        
          ]]>

        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Nivel de Configuração de Destino" name="NIVCFG" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Configuração de Destino" name="USUCFG" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Nivel de Configuração de Origem" name="SRCNIV" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Configuração de Origem" name="SRCCFG" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código do Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return operator=">" value="0" message="" error="OK">
            <![CDATA[TrappedError.UserError = string.Format("{0} REGISTROS COPIADOS", RETURN_VALUE);]]>
          </return>
          <return value="0" message="" error="">
            <![CDATA[TrappedError.UserError = "NENHUM REGISTRO COPIADO";]]>

          </return>
          <return value="-2" message="" error="TRANSACTIONNOTHASRECORD"/>
        </returns>
      </item>

      <item script="true" alias="A." sql="" method="Find" return="int" returnmode="1" procname="PRUSUCFGFND" desc ="Pesquisa um usuario de configuração e seu respectivo nivel de configuracao" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0
SELECT @RETURN_VALUE = ISNULL(NIDCFG,0) FROM TBUSUCFG (NOLOCK) WHERE USUCFG =@USUCFG AND NIVCFG = @NIVCFG
RETURN @RETURN_VALUE
]]>

        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Usuário de Configuração de Destino" name="USUCFG" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Nivel de Configuração de Destino" name="NIVCFG" type="System.Byte" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="Find" return="int" returnmode="1" procname="PRUSUCFGFNDEXT" desc ="Pesquisa um usuario de configuração" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE =0
EXEC PRUSUCFGFND @USUCFG, 2,@RETURN_VALUE OUTPUT
IF(@RETURN_VALUE=0)
  BEGIN
    EXEC PRUSUCFGFND @USUCFG, 1, @RETURN_VALUE OUTPUT
    IF(@VERUSU=1)
      BEGIN
      IF(@RETURN_VALUE=0)
          BEGIN
            DECLARE @USUPRO INT 
            SELECT @USUPRO = USUPRO FROM TBUSUPRO WHERE CODUSU=54 AND CODPRO=21
            EXEC PRUSUCFGFND @USUCFG, 2, @RETURN_VALUE OUTPUT          
          END
      END          
  END
RETURN @RETURN_VALUE  
  ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Usuário de Configuração de Destino" name="USUCFG" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Define se localiza o usuário padrão de plataforma" name="VERUSU" type="System.Boolean" default="true" output="" null="false"/>
        </parameters>
      </item>

    </methods>
  </item>


  <item create="true"  id="56" name="TBREGBXA" friendlyname="Low Sales Record" modelversion="3">
    <UpdateKey>Identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1110000000</procedure>
    <asp>1110000000</asp>
    <csharp>1110000000</csharp>
    <insertcommand key="Identity" exceptionparamns="'DATCAD','DATUPD', 'NIDBXA'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="Identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[SET @DATUPD =GETDATE();]]>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </updatecommand>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query>
          <![CDATA[
SELECT A.*,ISNULL(B.DSCTAB,'') AS DSCREC,ISNULL(C.LGNUSU,'') AS DSCCNC
  FROM TBREGBXA (NOLOCK) A
 INNER JOIN TBTABGER (NOLOCK) B ON (7 = B.NUMTAB AND A.STAREC = B.KEYCOD)
  LEFT JOIN TBCADUSU (NOLOCK) C ON (A.USUCNC = C.CODUSU)
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Usuário" name="CODUSU" type="int" sysnull="true" default="null" output="" null="true"/>
        </parameters>
      </item>
    </selectallcommand>

  </item>
  <item create="true"  id="57" name="TBUSUBOL" friendlyname="UserSlip" modelversion="3">
    <UpdateKey>Identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <insertcommand key="Identity" exceptionparamns="'DATCAD','DATUPD', 'NIDUBL'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="Identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[SET @DATUPD =GETDATE();]]>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </updatecommand>
    <selectcommand>
      <item script="true" alias="A." sql="" type="" method="Select" return="UserSlip" procname="" desc ="Seleciona o registro de acordo com o id de registro">
        <query>
          <![CDATA[SELECT * FROM TBUSUBOL (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Configuração Usuario Boleto" name="NIDUBL" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>

    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRUSUBOLSELALL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query>
          <![CDATA[SELECT A.*, isnull(b.dsctab,'') as DSCBOL, isnull(c.dsctab,'') as DSCREC, isnull(d.lgnusu,'') as LGNUSU 
 FROM TBUSUBOL (nolock) a 
INNER join tbtabger (nolock) b 
   ON (16 = B.NUMTAB AND a.tipbol = b.keycod)
 LEFT join tbtabger (nolock) c 
   ON ( 7 = C.NUMTAB AND a.starec = c.keycod)
 LEFT join tbcadusu (nolock) d 
   ON (a.updusu = d.codusu)]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Usuário" name="CODUSU" type="int" sysnull="true" default="null" output="" null="true"/>
        </parameters>
      </item>
    </selectallcommand>
  </item>
  <item create="true"  id="58" name="TBCLIEXT" friendlyname="ExternalConfigurationAccess" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <MaxFields></MaxFields>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="ExternalConfigurationAccess" procname="" desc ="Seleciona o registro de acordo com o id de configuracao">
        <query>
          <![CDATA[SELECT * FROM TBCLIEXT (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de configuracao do serviço externo" name="NIDCFE" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <insertcommand key="Key" exceptionparamns="'DATCAD','DATUPD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="key" exceptionparamns="'DATCAD','DATUPD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </updatecommand>

  </item>
  <item create="true"  id="58" name="TBREGFAT">
    <UpdateKey>Identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <SelectAllList>CODUSU</SelectAllList>
    <StringSqlSelectAll></StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll></CreateSelectionAll>
    <SelectAllAlias>A.</SelectAllAlias>
    <MaxFields></MaxFields>
  </item>
  <item create="true"  id="59" name="TBANTBOL">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>false</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1100000000</procedure>
    <asp>1100000000</asp>
    <csharp>1100000000</csharp>
    <SelectAllList></SelectAllList>
    <StringSqlSelectAll></StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll></CreateSelectionAll>
    <SelectAllAlias>A.</SelectAllAlias>
    <MaxFields></MaxFields>
  </item>
  <item create="true"  id="60" name="TBUSUCVL">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>false</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1100000000</procedure>
    <asp>1100000000</asp>
    <csharp>1100000000</csharp>
    <SelectAllList></SelectAllList>
    <StringSqlSelectAll></StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll></CreateSelectionAll>
    <SelectAllAlias>A.</SelectAllAlias>
    <MaxFields></MaxFields>
  </item>
  <item create="true"  id="61" name="TBBORCCR" friendlyname="Borrador CC" modelversion="2">
    <UpdateKey>Key</UpdateKey>
    <audit>False</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>True</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>111000000000</procedure>
    <asp>1110000000</asp>
    <csharp>111000000</csharp>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <MaxFields></MaxFields>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="BorradorCC" procname="PRBORCCRSEL" desc ="Seleciona o registro de conta corrente de acordo com o ID">
        <query>
          <![CDATA[SELECT * FROM TBBORCCR (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Conta Corrente" name="NIDCCR" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD', 'NIDCCR'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD=GETDATE();
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </updatecommand>

  </item>
  <item create="true"  id="62" name="TBREGPAG" friendlyname="PaymentRegister" modelversion="3">
    <UpdateKey select="both">Identity</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>100000000</asp>
    <csharp>11110000</csharp>

    <objectproperty>
      <parameters>
        <parameter input="true" apply="true" desc ="ID da Transação" name="NIDTRA" type="System.String" default="" output="" null="false"/>
        <parameter input="true" apply="true" desc ="Lote Financeiro" name="LOTFIN" type="System.Int32" default="" output="" null="false"/>
      </parameters>
    </objectproperty>

    <objectclass>
      <item script="true" alias="A." sql="" method="Payment" return="int" returnmode="1" procname="" desc ="Objeto de Retenção de Informações de Pagamento" returnvalue="1">
        <query>
          <![CDATA[
DECLARE @RESULT
  TABLE (
    VLDENT TINYINT       DEFAULT 1 NOT NULL,  
    STAREC TINYINT       DEFAULT 1 NOT NULL,
    SITTRA TINYINT       DEFAULT 0 NOT NULL,
    CODCRT INT           DEFAULT 0 NOT NULL,
    SITREC TINYINT       DEFAULT 0 NOT NULL,
    VERAPP TINYINT       DEFAULT 1 NOT NULL,    
    CODUSU INT           DEFAULT 0 NOT NULL,
    UPDUSU INT           DEFAULT 0 NOT NULL,    
    NUMTRL CHAR (80)     NOT NULL,
    DATVCT VARCHAR(10)   NOT NULL,
    VLRDOC VARCHAR(15)   NOT NULL,
    USUPRO INT           DEFAULT 0 NOT NULL,
    NUMTOK INT           DEFAULT 0 NOT NULL,
    NUMIPA VARCHAR (50)  DEFAULT '' NOT NULL,
    CODSEG SMALLINT      DEFAULT 0 NOT NULL,
    CODORG SMALLINT      DEFAULT 0 NOT NULL,
    OMTSLD CHAR(1) DEFAULT 'N' NOT NULL,
    OMTTAR CHAR(1) DEFAULT 'N' NOT NULL,    
    ORGLCT TINYINT       DEFAULT 0 NOT NULL)    
SELECT * FROM @RESULT    
        ]]>
        </query>
      </item>
    </objectclass>

    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="PaymentRegister" procname="PRREGPAGSEL" desc ="Seleciona o registro de acordo com o Código do Usuário">
        <query>
          <![CDATA[SELECT * FROM TBREGPAG (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Pagamento" name="NIDPAG" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="Select" return="PaymentRegister" procname="PRREGPAGSELTRA" desc ="Seleciona o registro de acordo com o Código do Usuário">
        <query>
          <![CDATA[SELECT * FROM TBREGPAG (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Usuário" name="CODUSU" type="int" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Identificador de Pagamento" name="NUMTRL" type="System.String" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Data de Vencimento" name="DATVCT" type="System.DateTime" default="" output="" null="false"/>          s
        </parameters>
      </item>

    </selectcommand>
    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD=GETDATE();
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </updatecommand>
    <deletecommand key="identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[
IF(EXISTS(SELECT 1 FROM TBREGPAG WHERE NIDPAG=@NIDPAG))
   BEGIN
        INSERT INTO TBDELPAG
          (
            NIDPAG,STAREC,SITTRA,DATTRA,
            DATCAD,UPDUSU,DATUPD,CODCRT,
            SITREC,CODUSU,NUMTRL,DATVCT,
            VLRDOC,LOTFIN,LOTTRF,USUPRO,
            NIDTRA,NIDTOK,NUMIPA,CODSEG,
            CODORG,OMTSLD,ORGLCT
        )
        SELECT
            NIDPAG,STAREC,SITTRA,DATTRA,
            DATCAD,UPDUSU,DATUPD,CODCRT,
            SITREC,CODUSU,NUMTRL,DATVCT,
            VLRDOC,LOTFIN,LOTTRF,USUPRO,
            NIDTRA,NIDTOK,NUMIPA,CODSEG,
            CODORG,OMTSLD,ORGLCT
          FROM TBREGPAG
         WHERE NIDPAG=@NIDPAG
    END
ELSE    
    SET @RETURN_VALUE=-2
   
      ]]>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </deletecommand>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRREGPAGSELALL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query order="A.DATCAD DESC, A.NIDTRA DESC">
          <![CDATA[
    SELECT NIDPAG
    	,A.STAREC
    	,SITTRA
    	,A.DATTRA
    	,A.DATCAD
    	,A.UPDUSU
    	,A.DATUPD
    	,CODCRT
    	,SITREC
    	,A.CODUSU
    	,NUMTRL
    	,DATVCT
    	,VLRDOC
    	,LOTFIN
    	,LOTTRF
    	,USUPRO
    	,NIDTRA
    	,NIDTOK
    	,NUMIPA
    	,CODSEG
		,ISNULL(G.DSCTAB,'') DSCSEG
    	,CODORG
		,ISNULL(H.DSCTAB,'') DSCORG
    	,OMTSLD
    	,ORGLCT
    	,OMTTAR
      ,ISNULL(B.DSCTAB,'Nao definido') AS DSCREC
      ,ISNULL(D.DSCTAB,'Nao definido') AS DSCSRG
      ,ISNULL(C.LGNUSU,'') AS DSCUPD
      ,ISNULL(E.NOMUSU,'') AS NOMUSU
      ,ISNULL(F.DSCSTA,'') AS DSCSTA  
      FROM TBREGPAG A WITH (NOLOCK)
      LEFT JOIN TBTABGER B (NOLOCK) ON (7 = b.NUMTAB AND A.STAREC = B.KEYCOD)
      LEFT JOIN TBCADUSU C (NOLOCK) ON (C.CODUSU = A.UPDUSU)
      LEFT JOIN TBTABGER D (NOLOCK) ON (49 = D.NUMTAB AND A.SITREC = D.KEYCOD)
      INNER JOIN TBCADUSU E (NOLOCK) ON (E.CODUSU = A.CODUSU)
      INNER JOIN TBCADSTA F (NOLOCK) ON (F.CODSTA = A.STAPAG)
      LEFT JOIN TBTABGER G (NOLOCK) ON (G.NUMTAB = 300 AND G.KEYCOD = A.CODSEG)
      LEFT JOIN TBTABGER H (NOLOCK) ON (H.NUMTAB = 301 AND H.KEYCOD = A.CODORG)
  WHERE A.STAREC>0      
          
          
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Usuário" name="CODUSU" type="int" sysnull="true" default="" output="" null="true"/>
          <parameter input="true" desc ="Data Inicial (yyyyMMdd)" fieldname="DATCAD" operator="&gt;=" name="DATMOV1" type="System.String" size="10" default="" output="" null="true"/>
          <parameter input="true" desc ="Data Final (yyyyMMdd)" fieldname="DATCAD" operator="&lt;=" name="DATMOV2" type="System.String" size="20" default="" output="" null="true"/>

        </parameters>
      </item>
    </selectallcommand>

    <methods>
      <item script="true" alias="A." sql="" method="RemoveBatch" return="int" procname="PRREGPAGREMBAT" desc ="Remove um lote de Registro de Processamento" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE = 0
DECLARE @LOTFIN INT
IF(@UPDUSU=0)
   SET @RETURN_VALUE = -2
   
IF(EXISTS(SELECT 1 FROM TBREGPAG WHERE NIDPAG=@NIDPAG))
  BEGIN
    SELECT @LOTFIN = CASE WHEN (@TIPLOT=1) THEN LOTFIN ELSE LOTTRF END FROM TBREGPAG (NOLOCK) WHERE NIDPAG=@NIDPAG
  END
ELSE
    SET @RETURN_VALUE=-1

BEGIN TRANSACTION

/* Remove Lote */ 
IF(@TIPLOT = 1 AND @RETURN_VALUE=0 AND @LOTFIN>0)	
		BEGIN
	      UPDATE TBREGCCR SET STAREC = 0, UPDUSU = @UPDUSU, DATUPD = GETDATE() 
		     WHERE LOTFIN=@LOTFIN AND TIPRFE=21 AND NIDRVM = @NIDPAG
		    IF(@@ERROR=0)
			    BEGIN
				      UPDATE TBREGPAG SET UPDUSU=@UPDUSU, DATUPD = GETDATE(),	LOTFIN=0 
				       WHERE NIDPAG = @NIDPAG
				      IF(@@ERROR=0)
					      SET @RETURN_VALUE=1
			    END
		END

IF(@TIPLOT = 2 AND @RETURN_VALUE=0 AND @LOTFIN>0)	
  BEGIN
	  UPDATE TBREGCCR 
       SET STAREC = 0, UPDUSU = @UPDUSU, DATUPD = GETDATE() 
	   WHERE LOTFIN=@LOTFIN AND TIPRFE=21 AND NIDRVM = @NIDPAG
		IF(@@ERROR=0)
				BEGIN
					UPDATE TBREGPAG 
			       SET UPDUSU= @UPDUSU, DATUPD = GETDATE(), LOTTRF=0 
			     WHERE NIDPAG = @NIDPAG
  				IF(@@ERROR=0)
						SET @RETURN_VALUE=1
				END
		END

IF(@RETURN_VALUE=1)
	COMMIT TRANSACTION
ELSE
	ROLLBACK TRANSACTION
RETURN @RETURN_VALUE          
          ]]>

        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Pagamento" name="NIDPAG" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Tipo de Operação" name="TIPLOT" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return  value="1" message="LOTE REMOVIDO COM SUCESSO" error="OK"/>
          <return  value="0" message="" error="EMPTYPROCESS"/>
          <return  value="-1" message="" error="RECORDNOTFOUND"/>
          <return  value="-2" message="" error="INVALIDUSERUPDATE"/>
        </returns>
      </item>
    </methods>
  </item>


  <item create="true"  id="63" name="TBJOBRUN" friendlyname="JobLog" modelversion="3">
    <UpdateKey>Identity</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1000000000</procedure>
    <asp>100000000</asp>
    <csharp>10000000</csharp>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <MaxFields></MaxFields>
    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
    </insertcommand>
  </item>
  <item create="true"  id="64" name="TBMEMCAL" friendlyname="Memoria de Calculo" modelversion="3">
    <UpdateKey>Identity</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1000000000</procedure>
    <asp>100000000</asp>
    <csharp>10000000</csharp>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <MaxFields></MaxFields>
    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
  </item>


  <item create="true"  id="65" name="TBFATLIG">
    <UpdateKey>key</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1100000000</procedure>
    <asp>110000000</asp>
    <csharp>11000000</csharp>
    <SelectAllList></SelectAllList>
    <StringSqlSelectAll></StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll></CreateSelectionAll>
    <SelectAllAlias>A.</SelectAllAlias>
    <MaxFields></MaxFields>
  </item>
  <item create="true"  id="66" name="TBBXABOL" friendlyname="TicketPaymentRegistration" modelversion="3">
    <UpdateKey>Identity</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <extendedmodel>
      <![CDATA[SELECT NIDRBB,NIDLIM,NIDBOL,REGBXA,TIPBXA,BOLANT,NUMPCL,TIPREG,TOTPCL,STAREC,TIPLCT,LOTFIN,ORGLCT,NUMREX,DATCAD,DATUPD,VIAPGT,VLRPAR,VLRPAG,TIPVAL,VLRJUR,VLRDES,VLRTAR,VLRDCP,VLRREG,DATPGT,TAREXT,DEPINV,UPDUSU,USUPRO,USUCED,CODCRT,INDLCT,NIDCTA,NIDTRB,USUBCO,FILNAM,STABOL,STAREG,USRBNF,BXABOL,VLRTOT,TARTOT,DESTOT,DSCERR,ALTCPG,NIDRTR 
,FRCLCK,USRDEB,USRCRD,CTADEB,CTACRD,MOVVDB,MOVVCR,INDDEB,INDCRD,TARTAD,TARTDP, VLRTDP, VLRTAD, VLRTED, RSPTAR, CODSOL, 0 AS CODPRT FROM dbo.TBBXABOL
]]>
    </extendedmodel>
    <SqlTable/>

    <procedure>1111000000</procedure>
    <asp>110000000</asp>
    <csharp>11110000</csharp>

    <!--<interface>
      <item script="false" alias="A." sql="" method="TicketAdd" return="TicketPaymentRegistration" returnmode="2" procname="" desc ="Processa campos complementares de Baixa de Boleto" returnvalue="0">
        <query>
        </query>
        <parameters>
          <parameter input="true" desc ="TicketPaymentRegistration" name="objeto" type="TicketPaymentRegistration" default="" output="" null="false"/>
          <parameter input="true" desc ="ID do Boleto" name="NIDBOL" type="System.Double" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualização" name="pUPDUSU" type="System.Int16" default="" output="" null="false"/>

        </parameters>
      </item>
      <item script="false" alias="A." sql="" method="TicketAdd" return="TicketPaymentRegistration" returnmode="2" procname="" desc ="Processa campos complementares de Baixa de Boleto" returnvalue="0">
        <query>
        </query>
        <parameters>
          <parameter input="true" desc ="TicketPaymentRegistration" name="objeto" type="TicketPaymentRegistration" default="" output="" null="false"/>
          <parameter input="true" desc ="Objeto de Boleto" name="NIDBOL" type="Slip" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualização" name="pUPDUSU" type="System.Int16" default="" output="" null="false"/>

        </parameters>
      </item>

    </interface>-->

    <selectcommand>
      <item script="true" alias="A." sql="" type="" method="Select" return="TicketPaymentRegistration" procname="PRBXABOLSEL" desc ="Seleciona o registro de baixa de boleto de acordo com o id de baixa">
        <query>
          <![CDATA[SELECT * FROM TBBXABOL (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Baixa de Boleto" name="NIDRBB" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" type="" method="LocateSolicitation" return="TicketPaymentRegistration" procname="PRBXABOLLOCSOL" desc ="Localiza uma solicitação de baixa">
        <query>
          <![CDATA[SELECT * FROM TBBXABOL (NOLOCK) A WHERE STAREC IN (1,2,5,9)]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código da Solicitação" name="CODSOL" type="System.String" size="15" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>

    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRBXABOLSELALL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query>
          <![CDATA[SELECT * FROM VWBXABOL A]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Status do Registro" name="STAREC" type="short" sysnull="false" default="" output="" null="false"/>
          <parameter input="true" desc ="Código do Usuário" name="USUCED" type="int" sysnull="true" default="null" output="" null="true"/>
        </parameters>
      </item>
    </selectallcommand>
    <insertcommand key="Identity" exceptionparamns="'DATCAD','DATUPD', 'NIDRBB'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[SELECT @REGBXA = COALESCE(COUNT(NIDRBB),0)+1 FROM TBBXABOL WHERE NIDBOL=@NIDBOL]]>
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-3" message="" error="EXISTINGREQUEST"/>
      </returns>
    </insertcommand>
    <updatecommand key="Identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[SET @DATUPD = GETDATE();]]>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </updatecommand>
    <deletecommand key="Identity" exceptionparamns="'DATCAD','DATUPD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </deletecommand>
    <methods>
      <item script="true" alias="A." sql="" method="RevertLowBillet" return="int" returnmode="1" procname="PRBXABOLREVLOTFIN" desc ="Reverte um Lote Financeiro de Baixa de Boleto" returnvalue="1">
        <query>
          <![CDATA[

SET @RETURN_VALUE=1
IF(@UPDUSU=0)
   SET @RETURN_VALUE=-4

BEGIN TRAN

IF(@LOTFIN>0 AND @RETURN_VALUE=1)
		BEGIN
			UPDATE TBREGBOL 
			   SET STAREC = 1,
					STABOL = CASE WHEN TIPBOL =8 THEN 4 ELSE 1 END,
					VIAPGT = 1,
					DATPGT = NULL,
					DATUPD = GETDATE(),
					NIDTRB = 0,
					FILNAM = 'BAIXA REVERTIDA',
					LOTFIN = 0,
					BOLANT = 0,
					ALTCPG = 0,
					NIDRTR = 0,
					VLRPAG = 0, UPDUSU=@UPDUSU
		     WHERE NIDBOL IN (SELECT DISTINCT NIDBOL FROM TBREGCCR (NOLOCK) WHERE LOTFIN=@LOTFIN)
			IF(@@ERROR<>0)
         SET @RETURN_VALUE = -3
    END

IF(@LOTFIN>0 AND @RETURN_VALUE=1)
  BEGIN
	  UPDATE TBREGCCR SET STAREC=0, UPDUSU=@UPDUSU  WHERE LOTFIN = @LOTFIN
		IF(@@ERROR<>0)
        SET @RETURN_VALUE =-2
  END
  
IF(@LOTFIN>0 AND @RETURN_VALUE=1)  
  BEGIN						   
    /* REMOVE DETALHE DO LANCAMENTO */          
		DELETE FROM TBBOLDLT WHERE NIDLIM IN (SELECT DISTINCT NIDLIM FROM TBBXABOL (NOLOCK) WHERE LOTFIN=@LOTFIN)
    IF(@@ERROR<>0)  
      SET @RETURN_VALUE =-5
  END      

IF(@LOTFIN>0 AND @RETURN_VALUE=1)  
    BEGIN
			UPDATE TBBXABOL 
			   SET STAREC=13, 
             TIPBXA=0,	
             TIPREG=0, 
             LOTFIN=0,
             UPDUSU=@UPDUSU
       WHERE NIDBOL IN (SELECT DISTINCT NIDBOL FROM TBREGCCR (NOLOCK) WHERE LOTFIN=@LOTFIN)
      IF(@@ERROR<>0)                       
         SET @RETURN_VALUE=-1                       
		END

IF(@RETURN_VALUE=1)
   COMMIT TRAN
ELSE   
   ROLLBACK TRAN
RETURN @RETURN_VALUE
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Lote Financeiro" name="LOTFIN" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="-1" message="FALHA NA ATUALIZACAO DO REGISTRO DE BAIXA DO BOLETO" error="SLIPFAILUPDATEREVERSELOW"/>
          <return value="-2" message="FALHA NA ATUALIZAÇÃO NO REGISTRO DE CONTA CORRENTE" error="SLIPFAILUPDATEREVERSELOW"/>
          <return value="-3" message="FALHA NA ATUALIZAÇÃO NO REGISTRO DE BOLETO" error="SLIPFAILUPDATEREVERSELOW"/>
          <return value="-5" message="FALHA NA ATUALIZAÇÃO NO REGISTRO DE DETALHE DO BOLETO" error="SLIPFAILUPDATEREVERSELOW"/>
          <return value="-4" message="" error="INVALIDUSERUPDATE"/>
        </returns>
      </item>
      <item script="true" alias="A." sql="" method="Select" return="int" returnmode="2" procname="PRBXABOLSELNID" desc ="Retorna o id do Registro de Baixa do Boleto de acordo com os parametros informados" returnvalue="0">
        <query>
          <![CDATA[
DECLARE @RETURN_VALUE INT
SET @RETURN_VALUE =0
SELECT @RETURN_VALUE = NIDRBB 
  FROM TBBXABOL (NOLOCK) A
 WHERE STAREC = 1 
 
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Boleto" name="NIDBOL" type="int" default="" output="" null="false"/>
          <parameter input="true" desc ="Tipo de Baixa" name="TIPBXA" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" desc ="Número da Parcela" name="NUMPCL" type="System.Int16" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="false" alias="A." sql="" method="UpdateItemReference" return="int" procname="spu_ticketpaymentregistration_referencias" desc ="Atualiza as referencias de um id de registro de baixa de boleto" returnvalue="1">
        <query>
          <![CDATA[
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Registro de Baixa de Boleto" name="NIDRBB" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="DeleteBatch" return="int" procname="PRBXABOLDELLOT" desc ="Remove um lote de importação de Registro de Baixa de Boleto" returnvalue="1">
        <query>
          <![CDATA[
  SET @RETURN_VALUE=0         
	BEGIN TRANSACTION

	IF(@NIDLIM<=0)
		SET @RETURN_VALUE=-1

  IF(EXISTS(SELECT 1 FROM TBBXABOL WHERE NIDLIM=@NIDLIM AND LOTFIN<>0))		
    SET @RETURN_VALUE=-2

	IF(@RETURN_VALUE=0)
		BEGIN
			DELETE FROM TBBXABOL WHERE NIDLIM =@NIDLIM AND LOTFIN=0
			IF(@@ERROR=0)
				SET @RETURN_VALUE=1	   
		END

	IF(@RETURN_VALUE=1)
		COMMIT TRANSACTION
	ELSE
		ROLLBACK TRANSACTION
  RETURN @RETURN_VALUE          
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Lote de Importação" name="NIDLIM" type="int" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="1" error="BATCHDELETED"/>
          <return value="-1" error="INVALIDBATCHNUMBER"/>
          <return value="-2" error="BATCHNOTCANDELETE"/>
        </returns>

      </item>
      <item script="true" alias="A." sql="" method="UnRegister" return="int" procname="PRBXABOLREMPRO" desc ="Reverte o processamento de um Lote de Importação de Registro de Baixa de Boletos" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=1
  
IF(@NIDLIM=0)
   SET @RETURN_VALUE = -1
IF(@UPDUSU=0)
   SET @RETURN_VALUE = -2
   
IF( NOT EXISTS(SELECT 1 FROM TBBXABOL WHERE NIDLIM =@NIDLIM AND STAREC=1)) 
  SET @RETURN_VALUE=-4;

BEGIN TRANSACTION
IF(@RETURN_VALUE=1)     
  BEGIN TRY
    UPDATE TBREGBOL 
	     SET STAREC = 1
		      ,VLRPAG =0
		      ,STABOL = CASE WHEN tipbol = 8 then 4 else 1 end
		      ,DATUPD = GETDATE()
		      ,UPDUSU = @UPDUSU
					,DATPGT = NULL
					,NIDTRB = 0
					,FILNAM = 'BAIXA REVERTIDA'
					,LOTFIN = 0
					,BOLANT = 0
					,ALTCPG = 0
					,NIDRTR = 0
	   WHERE NIDBOL IN (SELECT NIDBOL FROM TBBXABOL (NOLOCK) WHERE NIDLIM = @NIDLIM AND LOTFIN > 0)

		UPDATE TBREGCCR 
		   SET STAREC = 0, 
			     DATUPD = GETDATE(),
	         UPDUSU = @UPDUSU
		 WHERE TIPRFE = 6 AND NIDRVM IN (SELECT NIDRBB FROM TBBXABOL (NOLOCK) WHERE	NIDLIM = @NIDLIM AND LOTFIN >0)

		UPDATE TBBXABOL 
       SET LOTFIN=0, 
  			   STAREC=1, 
				   DATUPD = GETDATE(),
				   UPDUSU = @UPDUSU
		 WHERE NIDLIM=@NIDLIM AND STAREC=9
     
	  DELETE FROM TBBOLDLT 
		 WHERE NIDLIM=@NIDLIM
  END TRY
  BEGIN CATCH
    SET @RETURN_VALUE=-3
  END CATCH

IF(@RETURN_VALUE=1)
		COMMIT TRANSACTION
	ELSE
		ROLLBACK TRANSACTION
RETURN @RETURN_VALUE
          
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Lote de Importação" name="NIDLIM" type="int" default="" output="" null="false"/>
          <parameter input="true" desc ="ID do Usuário de Processamento" name="UPDUSU" type="int" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="1" error="COMPLETED"/>
          <return value="-1" error="INVALIDBATCHNUMBER"/>
          <return value="-2" error="INVALIDUSERUPDATE"/>
          <return value="-3" error="FAILREMOVEPROCESS"/>
          <return value="-4" error="BATCHNOTFOUND"/>
        </returns>

      </item>
      <item script="true" alias="A." sql="" method="GetMaxRecordType" return="int" procname="PRBXABOLGETMAXTYP" desc ="Retorna o maior identificador de registro de tipo de baixa para o boleto" returnvalue="1">
        <query>
          <![CDATA[
DECLARE @RETORNO  INT=0
SET @RETURN_VALUE = 0
IF(EXISTS(SELECT 1 FROM TBBXABOL (NOLOCK) WHERE NIDBOL = @NIDBOL AND NUMPCL = @NUMPCL))
		BEGIN
			SELECT @RETORNO = MAX(TIPBXA) FROM TBBXABOL (NOLOCK) WHERE NIDBOL = @NIDBOL AND NUMPCL = @NUMPCL
			SET @RETORNO= @RETORNO+1
		END
ELSE
	SET @RETORNO=1
SET @RETURN_VALUE=@RETORNO
RETURN @RETURN_VALUE
   
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Boleto" name="NIDBOL" type="int" default="" output="" null="false"/>
          <parameter input="true" desc ="Número da Parcela" name="NUMPCL" type="System.Int16" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="false" alias="A." sql="" method="RecordAccount" return="int" returnmode="2" procname="PRBXABOLCRTLCT" desc ="Grava o registro de contabilização dos registros de baixa de boleto de acordo com o lote de importação informado" returnvalue="1">
        <query>
          <![CDATA[
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Registro de Importação" name="NIDLIM" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </methods>
  </item>
  <item create="true"  id="67" name="XIREGCRT" friendlyname="ImportCard" modelversion="3">
    <UpdateKey select="both">IDENTITY</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <procedure>1001000000</procedure>
    <asp>100100000</asp>
    <csharp>10010000</csharp>
    <insertcommand key="Identity" exceptionparamns="'DATCAD','DATUPD'" procname="PRXIREGCRTINS">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-3" message="" error="EXISTINGREQUEST"/>
      </returns>
    </insertcommand>
    <selectcommand>
      <item script="true" alias="A." sql="" type="" method="Select" return="ImportCard" procname="PRXIREGCRTSEL" desc ="Seleciona o registro de importação de cartões conforme o id de lote de importação">
        <query>
          <![CDATA[SELECT * FROM XIREGCRT (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Lote de Importação" name="NIDLIM" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <methods>
      <item script="true" alias="A." sql="" type="" method="CreateBatchNumber" return="int" procname="PRXIREGCRTBATNUM" desc ="Cria um lote de produto e retorna o número do lote apurado" returnvalue="1">
        <query merge="true">
          <![CDATA[
SET @RETURN_VALUE =0          
DECLARE @DATSOL DATETIME
DECLARE @DATREC DATETIME
DECLARE @DATVCT DATETIME
DECLARE @USUPRO INT=0
DECLARE @CODPRO INT=0 
DECLARE @NUMQTD INT=0 
DECLARE @NUMLOT INT=0 
DECLARE @UPDUSU INT=0 
DECLARE @VLRVEN FLOAT=0 
IF(@RETURN_VALUE=0)
    BEGIN
      IF(@TIPBOL<=0)
        SET @RETURN_VALUE =-4
    END

IF(@RETURN_VALUE=0)
    BEGIN
      IF(@NIDLIM<=0)
        SET @RETURN_VALUE =-3
    END

IF(@RETURN_VALUE=0)
  BEGIN
    SELECT @NUMLOT = NUMLOT
          ,@USUPRO = USUPRO
          ,@CODPRO = CODPRO 
          ,@UPDUSU = UPDUSU       
      FROM XIREGCRT 
     WHERE NIDLIM=@NIDLIM
    SELECT @NUMQTD = COUNT(*) FROM XIREGCRT WHERE NIDLIM=@NIDLIM
  END

IF(@USUPRO<=0)
    BEGIN
      SET @RETURN_VALUE =-1
    END
    
IF(@RETURN_VALUE=0)
    BEGIN
      IF(@CODPRO<=0)
        SET @RETURN_VALUE =-2
    END


IF(@RETURN_VALUE=0 AND @NUMLOT=0)
    BEGIN
    
      EXEC PRGETNXTNUM 11, @NUMLOT OUTPUT    
      
      SET @DATSOL = GETDATE()
      SET @DATREC = DATEADD(DD,4,GETDATE())
      SET @DATVCT = DATEADD(DD,10,GETDATE())      
      SELECT @VLRVEN = VLRVEN 
        FROM TBUSUCFG (NOLOCK) 
       WHERE USUCFG = @USUPRO
         AND NIVCFG = 1
     
      INSERT INTO 
               TBGSTLOT (USUPRO ,  NUMLOT, STAREC, TIPREC, USRLOT,  UPDUSU, CRTIMG, TIPBOL,  CODPRO,  HSTNAM,  USUTOM,  NUMQTD,  DATSOL,  DATREC,          VLROPE,  VLRUNI, VLRUCV, VLRUCR, NIDBOL, DATVCT,  STALOT, REGAGV, CODAGV, PCTCOM, CODAG2)
                 VALUES (@USUPRO, @NUMLOT,      1,      1,      0, @UPDUSU,     '',@TIPBOL, @CODPRO,      '',       0, @NUMQTD, @DATSOL, @DATREC, @VLRVEN*@NUMQTD, @VLRVEN,      0,      0,      0, @DATVCT,     42,      0,      0,      0,      0);
        IF @@ERROR = 0
           BEGIN
                 SET @RETURN_VALUE = @NUMLOT
                UPDATE XIREGCRT SET NUMLOT = @RETURN_VALUE WHERE NIDLIM=@NIDLIM                 
           END
        ELSE
           BEGIN
                 SET @RETURN_VALUE = -1
           END
    END
RETURN @RETURN_VALUE    
          
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="false" desc ="ID do Lote de Importação" name="NIDLIM" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Tipo de Boleto" name="TIPBOL" type="System.Byte" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="-1" message="" error="FAILDETECTMANAGER"/>
          <return value="-2" message="NAO HA PRODUTO ASSOCIADO PARA OS CARTOES" error="INVALIDARGUMENT"/>
          <return value="-3" message="" error="INVALIDBATCHNUMBER"/>
          <return value="-4" message="" error="INVALIDSLYPTYPE"/>
        </returns>
      </item>

      <item script="true" alias="A." sql="" type="DataTableList" method="Gather" return="ImportCard" procname="PRXIREGCRTSELLOT" desc ="Seleciona todos os cartões a partir de um determinado lote de importação">
        <query merge="true">
          <![CDATA[SELECT * FROM XIREGCRT (NOLOCK) A WHERE STAREC = 1]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Lote de Importação" name="NIDLIM" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </methods>
  </item>
  <item create="true"  id="68" name="TBAPRLOT" friendlyname="Aprovacao Lote" modelversion="2">
    <UpdateKey select="both">IDENTITY</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1110000000</procedure>
    <asp>110000000</asp>
    <csharp>11100000</csharp>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <MaxFields></MaxFields>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="AprovacaoLote" procname="PRAPRLOTSEL" desc ="Seleciona o registro de aprovaca de acordo com o ID">
        <query>
          <![CDATA[SELECT * FROM TBAPRLOT (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Aprovação" name="NIDAPR" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD', 'NIDAPR'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD=GETDATE();
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </updatecommand>
    <deletecommand key="identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </deletecommand>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRAPRLOTSELALL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query>
          <![CDATA[
SELECT
         A.CHKMOV
        ,ISNULL(J.flglib,1) AS FLGLIB
        ,A.NIDAPR
        ,A.LOTCTL
        ,A.NIDCCR
        ,H.DATMOV
        ,A.USUPRO
        ,ISNULL(C.NOMUSU,'') AS DSCGST
        ,A.CODUSU
        ,ISNULL(D.NOMUSU,'') AS NOMUSU
        ,A.NIDTRA
        ,A.CANTRA
        ,A.NIDDEP
        ,A.IDEPRE
        ,A.CODMOV
        ,I.DSCMOV
        ,A.INDLCT
        ,A.VLRMOV
        ,A.STAREC
        ,A.DATCAD
        ,A.DATUPD
        ,A.UPDUSU
        ,A.USUAPR
        ,ISNULL(E.NOMUSU,'') AS NOMAPR
        ,A.DATLIB
        ,A.STABOR
        ,G.DSCSTA
  FROM TBAPRLOT (NOLOCK) A
  LEFT JOIN TBUSUPRO (NOLOCK) B 
    ON (A.USUPRO = B.USUPRO)
 INNER JOIN TBCADUSU (NOLOCK) C 
    ON (B.CODUSU = C.CODUSU)
 INNER JOIN TBCADUSU (NOLOCK) D 
    ON (A.CODUSU = D.CODUSU)
  LEFT JOIN TBCADUSU (NOLOCK) E 
    ON (A.USUAPR = E.CODUSU)
 INNER JOIN TBTABGER (NOLOCK) F 
    ON (7 = F.NUMTAB AND A.STAREC = F.KEYCOD)
 INNER JOIN TBCADSTA (NOLOCK) G 
    ON (A.STABOR = G.CODSTA)
 INNER JOIN TBREGCCR (NOLOCK) H 
    ON (A.NIDCCR = H.NIDCCR)
 INNER JOIN TBTIPMOV (NOLOCK) I
    ON (A.CODMOV = I.CODMOV)
  LEFT JOIN (SELECT NIDTRA, 
                    IDEPRE, 
                    CASE WHEN isnull(starec,13) in (5,13) THEN 0 ELSE 1 END AS flglib 
               FROM tbaprlot (NOLOCK)) J 
    ON (A.NIDTRA = J.NIDTRA AND (A.IDEPRE-1) = J.IDEPRE)
            
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Gestor" name="USUPRO" type="System.Int32" sysnull="true" default="" output="" null="true"/>
          <parameter input="true" desc ="Código do Usuario" name="CODUSU" type="int" sysnull="true" default="" output="" null="true"/>
          <parameter input="true" desc ="Código do Movimento" name="CODMOV" type="System.Int16" sysnull="true" default="" output="" null="true"/>
          <parameter input="true" desc ="Status do Registro" name="STAREC" type="System.Byte" sysnull="true" default="" output="" null="true"/>
        </parameters>

      </item>
    </selectallcommand>

  </item>
  <item create="true"  id="69" name="TBCADCOM" friendlyname="RegistroComissoes">
    <UpdateKey select="both">IDENTITY</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1110000000</procedure>
    <asp>110000000</asp>
    <csharp>11100000</csharp>
    <SelectAllList>STAREC/V, TIPCOM/V, CODUSU, CODAGV</SelectAllList>
    <StringSqlSelectAll>32</StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll>TRUE</CreateSelectionAll>
    <SelectAllAlias>A.</SelectAllAlias>
    <MaxFields></MaxFields>
  </item>
  <item create="true"  id="70" name="TBREGVEN">
    <UpdateKey>Identity</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn>@NIDRGV</fieldreturn>
    <procedure>1111000000</procedure>
    <asp>111100000</asp>
    <csharp>11110000</csharp>
    <SelectAllList>REGAGV</SelectAllList>
    <StringSqlSelectAll>34</StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll>TRUE</CreateSelectionAll>
    <SelectAllAlias>A.</SelectAllAlias>
    <MaxFields></MaxFields>
  </item>
  <item create="true"  id="71" name="TBREGTIN" friendlyname="Transação Interna" modelversion="3">
    <UpdateKey>Identity</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>

    <procedure>1111000000</procedure>
    <asp>111100000</asp>
    <csharp>11110000</csharp>

    <!--<interface>
      <item script="false" alias="A." sql="" method="CancelTransaction" return="int" returnmode="2" procname="" desc ="Efetua o Cancelamento/Estorno de uma transacao" returnvalue="0" remarks="Efetua um lançamento de reversão da transação original e posteriormente altera o status de registro da transação original e consequentemente o status do bordero de processamento do lote original">
        <query>
        </query>
        <parameters>
          <parameter input="true" desc ="Código da Transação" name="pCODTRM" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" desc ="ID de Registo da Transação Anterior" name="pNIDRTI" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualizacao" name="pUPDUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Status do Registro da Transação Original" name="pSTAREC" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" desc ="Status do Borderô do Lote Original" name="pSTABOR" type="System.Int16" default="" output="" null="false"/>
        </parameters>
      </item>

    </interface>-->
    <objectclass>
      <item script="true" alias="A." sql="" prefix="public" modifier="" inherit="" method="DadosTransacaoInterna" return="int" returnmode="1" procname="" desc ="Objeto de Retenção de Iñformações de Transações Internas" returnvalue="1">
        <query>
          <![CDATA[
DECLARE @RESULT TABLE (          
    [NIDRTI] INT           NOT NULL DEFAULT 0,
    [NIDRPA] INT           NOT NULL DEFAULT 0,
    [CODVER] TINYINT       NOT NULL DEFAULT 0,
    [CODPRC] TINYINT       NOT NULL DEFAULT 0,
    [NUMIPA] VARCHAR (50)  NOT NULL DEFAULT '',
    [NIDBOL] INT           NOT NULL DEFAULT 0,
    [NIDTOK] INT           NOT NULL DEFAULT 0,
    [ORGLCT] TINYINT       NOT NULL DEFAULT 0,
    [TIPLCT] SMALLINT      NOT NULL DEFAULT 0,
    [LOTFIN] INT           NOT NULL DEFAULT 0,
    [NIDTRA] VARCHAR (15)  NOT NULL DEFAULT '',
    [CODUSU] INT           NOT NULL DEFAULT 0,
    [STAREC] TINYINT       NOT NULL DEFAULT 0,
    [DATCAD] DATETIME      NOT NULL DEFAULT GETDATE(),
    [DATUPD] DATETIME      NOT NULL DEFAULT GETDATE(),
    [UPDUSU] INT           NOT NULL DEFAULT 0,
    [CODRET] INT           NOT NULL DEFAULT 0,
    [DATPRO] DATE          NULL,
    [HORPRO] VARCHAR (8)   NOT NULL DEFAULT '',
    [VLRJUR] MONEY         NOT NULL DEFAULT 0,
    [MSGRET] VARCHAR (100) NOT NULL DEFAULT '',
    [NUMAUT] VARCHAR (6)   NOT NULL DEFAULT '',
    [NOMTIT] VARCHAR (70)  NOT NULL DEFAULT '',
    [NUMPED] VARCHAR (16)  NOT NULL DEFAULT '',
    [DSCPED] VARCHAR (50)  NOT NULL DEFAULT '',
    [DATPED] DATE          NULL,
    [RESPAV] VARCHAR (50)  NOT NULL DEFAULT '',
    [NUMTID] VARCHAR (30)  NOT NULL DEFAULT '',
    [VLRPAR] MONEY         NOT NULL DEFAULT 0,
    [VLRTJU] MONEY         NOT NULL DEFAULT 0,
    [RSPTAR] TINYINT       NOT NULL DEFAULT 0,
    [CODCRT] INT           NOT NULL DEFAULT 0,
    [NUMCRT] VARCHAR (16)  NOT NULL DEFAULT '',
    [NUMMES] TINYINT       NOT NULL DEFAULT 0,
    [NUMANO] SMALLINT      NOT NULL DEFAULT 0,
    [NUMCVC] SMALLINT      NOT NULL DEFAULT 0,
    [NUMPCL] TINYINT       NOT NULL DEFAULT 0,
    [CODTRA] INT           NOT NULL DEFAULT 0,
    [VLRTRA] MONEY         NOT NULL DEFAULT 0,
    [CALPAR] MONEY         NOT NULL DEFAULT 0,
    [CODSOL] VARCHAR (15)  NOT NULL DEFAULT '',
    [USUPRO] INT           NOT NULL DEFAULT 0,
    [USRDEB] INT           NOT NULL DEFAULT 0,
    [USRCRD] INT           NOT NULL DEFAULT 0,
    [INDDEB] SMALLINT      NOT NULL DEFAULT 0,
    [INDCRD] SMALLINT      NOT NULL DEFAULT 0,
    [OMTSLD] BIT           NOT NULL DEFAULT 0,
    [OMTTAR] BIT           NOT NULL DEFAULT 0,
    [NUMAGE] VARCHAR (15)  NOT NULL DEFAULT '',
    [NUMCTA] VARCHAR (11)  NOT NULL DEFAULT '',
    [CODCMF] VARCHAR (15)  NOT NULL DEFAULT '',
    [RSPCNF] VARCHAR (1)   NOT NULL DEFAULT '',
    [CODBCO] VARCHAR (3)   NOT NULL DEFAULT '',
    [NOMDEP] VARCHAR (70)  NOT NULL DEFAULT '',
    [CPFDEP] VARCHAR (15)  NOT NULL DEFAULT '',
    [NUMIDT] VARCHAR (15)  NOT NULL DEFAULT '',
    [NIDDLT] INT           NOT NULL DEFAULT 0,
    [TIPLIN] TINYINT       NOT NULL DEFAULT 0,
    [CODPRT] INT           NOT NULL DEFAULT 0,
    [CTADEB] INT           NOT NULL DEFAULT 0,
    [CTACRD] INT           NOT NULL DEFAULT 0,
    [VLRLAN] MONEY         NOT NULL DEFAULT 0,
    [VLRTAR] MONEY         NOT NULL DEFAULT 0,
    [DEBPRT] INT           NOT NULL DEFAULT 0,
    [DEBCTA] INT           NOT NULL DEFAULT 0,
    [CRDPRT] INT           NOT NULL DEFAULT 0,
    [CRDCTA] INT           NOT NULL DEFAULT 0,
    [NIDLCT] INT           NOT NULL DEFAULT 0,
    [CODTRM] TINYINT       NOT NULL DEFAULT 0,
    [CODTAR] SMALLINT      NOT NULL DEFAULT 0,
    [VEREXI] TINYINT       NOT NULL DEFAULT 0,
    [AGRLCT] TINYINT       NOT NULL DEFAULT 0,
    [MOVDEB] INT           NOT NULL DEFAULT 0,
    [MOVCRD] INT           NOT NULL DEFAULT 0,
    [STAREG] SMALLINT      NOT NULL DEFAULT 0,
    [STABOR] SMALLINT      NOT NULL DEFAULT 0,
    [IDEPRE] TINYINT       NOT NULL DEFAULT 0,
    [VALLMT] BIT           NOT NULL DEFAULT 0,
    [VALSLD] BIT           NOT NULL DEFAULT 0,
    [APICRD] INT           NOT NULL DEFAULT 0,
    [STAOPE] SMALLINT      NOT NULL DEFAULT 0,
    [ORGOPE] VARCHAR (50)  NOT NULL DEFAULT '',
    [CANTRA] VARCHAR (13)  NOT NULL DEFAULT '',
    [CODMCC] VARCHAR (4)   NOT NULL DEFAULT '0000')
SELECT * FROM @RESULT    
          
        ]]>
        </query>
      </item>

    </objectclass>

    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRREGTINSELALL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query>
          <![CDATA[
          
	DECLARE @RESULT TABLE 
	(NIDRTI [int] NOT NULL,
	 [NIDRPA] [int] NOT NULL,
	[CODVER] [tinyint] NOT NULL,
	[CODPRC] [tinyint] NOT NULL,
	[NUMIPA] [varchar](50) NULL,
	[NIDBOL] [int] NOT NULL,
	[NIDTOK] [int] NOT NULL,
	[ORGLCT] [tinyint] NOT NULL,
	[TIPLCT] [smallint] NOT NULL,
	[LOTFIN] [int] NOT NULL,
	[NIDTRA] [varchar](13) NOT NULL,
	[CODUSU] [int] NOT NULL,
	[STAREC] [tinyint] NOT NULL,
	[DATCAD] [datetime] NOT NULL,
	[UPDUSU] [int] NOT NULL,
	[CODRET] [int] NOT NULL,
	[DATPRO] [date] NULL,
	[HORPRO] [varchar](8) NULL,
	[VLRJUR] [money] NOT NULL,
	[MSGRET] [varchar](100) NULL,
	[NUMAUT] [varchar](6) NULL,
	[NOMTIT] [varchar](70) NULL,
	[NUMPED] [varchar](16) NULL,
	[DSCPED] [varchar](50) NULL,
	[DATPED] [date] NULL,
	[RESPAV] [varchar](50) NULL,
	[NUMTID] [varchar](20) NULL,
	[VLRPAR] [money] NOT NULL,
	[VLRTJU] [money] NOT NULL,
	[RSPTAR] [tinyint] NOT NULL,
	[CODCRT] [int] NOT NULL,
	[NUMCRT] [varchar](16) NOT NULL,
	[NUMMES] [tinyint] NOT NULL,
	[NUMANO] [smallint] NOT NULL,
	[NUMCVC] [smallint] NOT NULL,
	[NUMPCL] [tinyint] NOT NULL,
	[CODTRA] [int] NOT NULL,
	[VLRTRA] [money] NOT NULL,
	[CALPAR] [money] NOT NULL,
	[CODSOL] [varchar](15) NOT NULL,
	[USUPRO] [int] NOT NULL,
	[USRDEB] [int] NOT NULL,
	[USRCRD] [int] NOT NULL,
	[INDDEB] [smallint] NOT NULL,
	[INDCRD] [smallint] NOT NULL,
	[OMTSLD] [bit] NOT NULL,
	[OMTTAR] [bit] NOT NULL,
	[NUMAGE] [varchar](15) NOT NULL,
	[CODCMF] varchar(15) NOT NULL,
	[STABOR] SMALLINT DEFAULT 0 NOT NULL,
	[NUMCTA] Varchar(11) DEFAULT '' NOT NULL,
	[NUMDVE] Varchar(1) DEFAULT '' NOT NULL
) 

INSERT INTO @RESULT
           ([NIDRTI]
           ,[NIDRPA]
           ,[CODVER]
           ,[CODPRC]
           ,[NUMIPA]
           ,[NIDBOL]
           ,[NIDTOK]
           ,[ORGLCT]
           ,[TIPLCT]
           ,[LOTFIN]
           ,[NIDTRA]
           ,[CODUSU]
           ,[STAREC]
           ,[DATCAD]
           ,[UPDUSU]
           ,[CODRET]
           ,[DATPRO]
           ,[HORPRO]
           ,[VLRJUR]
           ,[MSGRET]
           ,[NUMAUT]
           ,[NOMTIT]
           ,[NUMPED]
           ,[DSCPED]
           ,[DATPED]
           ,[RESPAV]
           ,[NUMTID]
           ,[VLRPAR]
           ,[VLRTJU]
           ,[RSPTAR]
           ,[CODCRT]
           ,[NUMCRT]
           ,[NUMMES]
           ,[NUMANO]
           ,[NUMCVC]
           ,[NUMPCL]
           ,[CODTRA]
           ,[VLRTRA]
           ,[CALPAR]
           ,[CODSOL]
           ,[USUPRO]
           ,[USRDEB]
           ,[USRCRD]
           ,[INDDEB]
           ,[INDCRD]
           ,[OMTSLD]
           ,[OMTTAR]
           ,[NUMAGE]
           ,[CODCMF])
	SELECT A.NIDRTI
              ,A.NIDRPA
              ,A.CODVER
              ,A.CODPRC
              ,A.NUMIPA
              ,A.NIDBOL
              ,A.NIDTOK
              ,A.ORGLCT
              ,A.TIPLCT
              ,A.LOTFIN
              ,A.NIDTRA
              ,A.CODUSU
              ,A.STAREC
              ,A.DATCAD
              ,A.UPDUSU
              ,A.CODRET
              ,A.DATPRO
              ,A.HORPRO
              ,A.VLRJUR
              ,LTRIM(RTRIM(A.MSGRET)) AS MSGRET
              ,A.NUMAUT
              ,A.NOMTIT
              ,A.NUMPED
              ,A.DSCPED
              ,A.DATPED
              ,A.RESPAV
              ,A.NUMTID
              ,A.VLRPAR
              ,A.VLRTJU
              ,A.RSPTAR
              ,A.CODCRT
              ,A.NUMCRT
              ,A.NUMMES
              ,A.NUMANO
              ,A.NUMCVC
              ,A.NUMPCL
              ,A.CODTRA
              ,A.VLRTRA
              ,A.CALPAR
              ,A.CODSOL
              ,A.USUPRO
              ,A.USRDEB
              ,A.USRCRD
              ,A.INDDEB
              ,A.INDCRD
              ,A.OMTSLD
              ,A.OMTTAR
              ,A.NUMAGE
              ,A.CODCMF
              FROM TBREGTIN (nolock) a
              WHERE (1=1)
 AND       (@CODUSU IS NULL OR A.CODUSU=@CODUSU)
       AND (@TIPLCT IS NULL OR A.TIPLCT=@TIPLCT)
       AND ((@DATMOV1 IS NULL AND @DATMOV2 IS NULL) OR (A.DATPRO>=@DATMOV1 AND A.DATPRO<=@DATMOV2))
       AND (@STAREC IS NULL OR A.STAREC=@STAREC)


UPDATE @RESULT 
   SET STABOR = D.STABOR,
       NUMCTA = D.NUMCTA,
	   NUMDVE = D.NUMDVE
  FROM @RESULT A 
  LEFT JOIN (SELECT DISTINCT nidtra, stabor, a1.nidcta, b1.numcta, b1.numdve, a1.codusu 
               FROM tbregccr (nolock) a1
              inner join tbcadcta (nolock) b1 
                 on (b1.nidcta = a1.nidcta) where tiprfe=11 and idepre<>0) D
    ON (D.NIDTRA = A.NIDTRA AND D.CODUSU = A.USRCRD)

SELECT A.*, ISNULL(B.DSCSTA,'') AS DSCBOR, ISNULL(C.DSCTAB,'') DSCREC, ISNULL(D.NOMUSU,'') NOMUSU 
  FROM @RESULT A
  LEFT JOIN TBCADSTA B
    ON (B.CODSTA = A.STABOR)
 INNER join TBTABGER (nolock) C
    ON (a.starec = C.keycod and 7 = C.numtab)
 INNER join TBCADUSU (nolock) D
    ON (D.CODUSU = A.USRCRD)
 ORDER BY A.DATPRO DESC
]]>
        </query>
        <parameters>
          <parameter input="true" apply="false" desc ="Usuário" name="CODUSU" type="int" sysnull="true" default="" output="" null="true"/>
          <parameter input="true" apply="false" desc ="Tipo de Lançamento" name="TIPLCT" type="short" sysnull="true" default="" output="" null="true"/>
          <parameter input="true" apply="false" desc ="Data Inicial (yyyyMMdd)" fieldname="DATPRO" operator="&gt;=" name="DATMOV1" type="System.String" size="10" default="" output="" null="true"/>
          <parameter input="true" apply="false" desc ="Data Final (yyyyMMdd hh:mm:ss)" fieldname="DATPRO" operator="&lt;=" name="DATMOV2" type="System.String" size="20" default="" output="" null="true"/>
          <parameter input="true" apply="false" desc ="Status de Registro" name="STAREC" type="System.Byte" default="" output="" null="true"/>          
        </parameters>
      </item>
    </selectallcommand>
    <methods>
      <item webtype="POST" script="false" alias="A." sql="" method="CancelTransaction" return="int" returnmode="4" procname="" desc ="Efetua o Cancelamento/Estorno de uma transacao" returnvalue="0" remarks="Efetua um lançamento de reversão da transação original e posteriormente altera o status de registro da transação original e consequentemente o status do bordero de processamento do lote original">
        <query>
        </query>
        <body>
          return CancelTransactionEx (pCODTRM,pNIDRTI, pUPDUSU, pSTAREC, pSTABOR,pTIPLCT);
        </body>
        <parameters>
          <parameter input="true" desc ="Código da Transação" name="CODTRM" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" desc ="ID de Registo da Transação Original" name="NIDRTI" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualizacao" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Status do Registro da Transação Original" name="STAREC" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" desc ="Status do Borderô do Lote Original" name="STABOR" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" desc ="Tipo de Lancamento" name="TIPLCT" type="System.Int16" default="0" output="" null="false"/>        
        </parameters>
      </item>

      <item webtype="POST" script="false" alias="A." sql="" method="PreValidarTransacaoInterna" return="int" returnmode="4" procname="" desc ="Efetua o Cancelamento/Estorno de uma transacao" returnvalue="0" remarks="">
        <query>
        </query>
        <body>
          <![CDATA[
if(pAPLSOL==1)
   Info.CODSOL = Actions.GetNextTransaction(Livre.Base.Constants.NEXT_NUMBER_SOLICITATION, Info.TIPLCT);
   
if(AccountInfo==null)  
  AccountInfo = AuthenticateServices.EvaluateInputParameters.Evaluate(Info.TIPLCT, Info.USRDEB, Info.USRCRD, Info.CODUSU, (short)Info.CODPRO);
Info.CODRSP = AccountInfo.CODRSP;
Info.MSGRET = AuthenticateServices.EvaluateInputParameters.TrappedError.UserError;
Info.INFGER = "";
if(Info.CODUSU==0)
   Info.CODUSU = AccountInfo.CODUSU;

if (Info.CODRSP == Livre.Base.Constants.ISO8583_RC_OK)
   return PreValidarTransacaoInternaEx (Info, ExtInfo,AccountInfo,pSTAFEC,pAPLLCT);
else
{
   Info.STAREC = Livre.Base.Constants.STATUS_REGISTRO_CANCELADO;
   RETURN_VALUE = Insert(Info);
}
        ]]>

        </body>
        <parameters>
          <parameter input="true" translate="false" desc ="Objeto de Retenção da Transação" name="Info" type="TransacaoInterna" default="" output="" null="false"/>
          <parameter input="true"  translate="false" desc ="Objeto de Retenção de Transação Extendida" name="ExtInfo" type="TransacaoInternaExt" default="" output="" null="false"/>
          <parameter input="true"  translate="false" desc ="Objeto de Autenticação de Dados" name="AccountInfo" type="DataOut " default="" output="" null="false"/>
          <parameter input="true"  translate="false" desc ="Status de Fechamento da Transação" name="pSTAFEC" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" apply="false" translate="false" desc ="Geração automática de Solicitação" name="pAPLSOL" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" apply="false" translate="false" desc ="Define se grava o lançamento na conta corrente" name="pAPLLCT" type="System.Byte" default="" output="" null="false"/>
        </parameters>
      </item>

      

      <item script="false" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRREGTINSELALL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
      </item>
      <item script="false" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRREGTINSELALL" desc ="Seleciona os registros de transação do usuário especificado">
        <parameters>
          <parameter input="true" desc ="Usuário" name="CODUSU" type="int" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="Remove" return="int" procname="PRREGTINREM" desc ="Remove um registro de Transacao de acordo com o ID da Transação e/ou Lote Financeiro" returnvalue="1">
        <query>
          <![CDATA[
BEGIN TRANSACTION
SET @RETURN_VALUE=0
  
IF(@UPDUSU=0)
   SET @RETURN_VALUE=-2
     
IF(@RETURN_VALUE=0)
	BEGIN  TRY
    UPDATE TBREGDLT SET STAREC=0,UPDUSU=@UPDUSU,DATUPD=GETDATE() WHERE NIDRTI=@NIDRTI
    UPDATE TBREGTIN SET STAREC=0,UPDUSU=@UPDUSU,DATUPD=GETDATE() WHERE NIDRTI=@NIDRTI        
    UPDATE TBEXTTIN SET STAREC=0,UPDUSU=@UPDUSU,DATUPD=GETDATE() WHERE NIDRTI=@NIDRTI    
   
    IF(@LOTFIN IS NOT NULL)
      BEGIN
        IF (@LOTFIN>0)
		        UPDATE TBREGCCR SET STAREC=0, UPDUSU=@UPDUSU, DATUPD=GETDATE() WHERE LOTFIN=@LOTFIN	
      END
		SET @RETURN_VALUE=1		
	END TRY
	BEGIN CATCH
		SET @RETURN_VALUE=-2
	END CATCH
IF(@RETURN_VALUE=1)
   COMMIT TRANSACTION
ELSE
   ROLLBACK TRANSACTION
RETURN @RETURN_VALUE        
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Registro de Transação" name="NIDRTI" type="int" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualização" name="UPDUSU" type="int" default="" output="" null="false"/>
          <parameter input="true" desc ="ID do Lote Financeiro" name="LOTFIN" sysnull="true" type="int" default="null" output="" null="true"/>
        </parameters>
        <returns>
          <return value="0" message="" error="EMPTYPROCESS"/>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="REQUIREDUSEROPERATION"/>
          <return value="-2" message="" error="FAILALL" />
        </returns>

      </item>
      <!--<item script="true" alias="A." sql="" method="Remove" return="int" procname="PRREGTINREMPRO" desc ="Remove um registro de Transacao associado a um lote financeiro" returnvalue="1">
        <query>
          <![CDATA[
  SET @RETURN_VALUE=0
	BEGIN  TRY
		DELETE FROM TBREGDLT WHERE NIDRTI=@NIDRTI	
		DELETE FROM TBREGTIN WHERE NIDRTI=@NIDRTI	
		DELETE FROM TBEXTTIN  WHERE NIDRTI=@NIDRTI	
    IF(@LOTFIN>0)
      BEGIN
		    DELETE FROM TBREGCCR WHERE LOTFIN=@LOTFIN	
      END
		SET @RETURN_VALUE=1		
	END TRY
	BEGIN CATCH
		SET @RETURN_VALUE=-1
	END CATCH
	RETURN @RETURN_VALUE        
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Registro de Transação" name="NIDRTI" type="int" default="" output="" null="false"/>
          <parameter input="true" desc ="ID do Lote Financeiro" name="LOTFIN" type="int" default="" output="" null="false"/>
        </parameters>

      </item>-->

      <!--<item script="false" alias="A." sql="" method="CancelTransaction" return="int" procname="PRREGTINCANRTI" desc ="Cancela um registro de transação">
        <parameters>
          <parameter input="true" desc ="ID do Registro de Transação" name="NIDRTI" type="int" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return operator=">" value="0" message="" error="OK">
            <![CDATA[
                    ControleCCDao WRKCCR = new ControleCCDao();
                    RETURN_VALUE = WRKCCR.RecordInternalRelease(RETURN_VALUE, 0, 1, Livre.Base.Constants.STATUS_REGISTRO_CANCELADO);
                    if (WRKCCR.HasError() || (RETURN_VALUE != 1))
                    {
                        TrappedError.ErrorCode = WRKCCR.LastErrorCode;
                        TrappedError.ErrorMessage = WRKCCR.LastError;
                        TrappedError.UserError = WRKCCR.LastMessage;
                        TrappedError.ErrorObject = WRKCCR.LastErrorObject;
                    }
                    else
                        TrappedError.SetError("OK");
                    WRKCCR = null;
            ]]>
          </return>
          <return value="-1" message="" error="TRANSACTIONNOTFOUND"/>
          <return value="-2" message="" error="TRANSACTIONNOTHASRECORD"/>
        </returns>
      </item>-->

      <!--<item script="true" alias="A." sql="" method="CloseInternalLaunch" return="int" returnmode="2" procname="PRREGTINCLOLAN" desc ="Executa o fechamento da Transação Interna">
        <query>
          <![CDATA[
DECLARE @RETURN_VALUE INT = 0          
UPDATE TBREGTIN 
   SET STAREC= @STAREC
      ,DATUPD=GETDATE()
      ,LOTFIN=@LOTFIN
      ,NIDTRA=@NIDTRA
      ,UPDUSU=@UPDUSU
 WHERE NIDRTI = @NIDRTI
   SET @RETURN_VALUE = @@ROWCOUNT          
SELECT @RETURN_VALUE   
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Status do Registro" name="STAREC" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" desc ="ID do Lote Financeiro" name="LOTFIN" type="int" default="" output="" null="false"/>
          <parameter input="true" desc ="ID da Transação" name="NIDTRA"  size="13" type="System.String" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualização" name="UPDUSU" type="int" default="" output="" null="false"/>
          <parameter input="true" desc ="ID da Transação Interna" name="NIDRTI" type="int" default="" output="" null="false"/>
        </parameters>
      </item>-->

    </methods>

    <insertcommand key="Identity" exceptionparamns="'DATCAD','DATUPD','NIDRTI'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-3" message="" error="EXISTINGREQUEST"/>
      </returns>
    </insertcommand>
    <updatecommand key="Identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[SET @DATUPD = GETDATE();]]>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </updatecommand>

    <selectcommand>
      <item script="true" alias="A." sql="" type="" method="Select" return="TransacaoInterna" procname="PRREGTINSEL" desc ="Seleciona o registro de acordo com o id da transação">
        <query>
          <![CDATA[SELECT * FROM TBREGTIN (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da Transação Interna" name="NIDRTI" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="SELECT TOP 1 STAREC, NIDRTI, CODRET, CODSOL, CONVERT(VARCHAR,DATPRO) DATPRO, HORPRO, '' AS CODSTB FROM TBREGTIN (NOLOCK)" type="List" method="GetTransactions" return="TransacaoInternaChecagem" procname="PRREGTINSELTRA" desc ="Seleciona as transações para Sondagem">
        <query>
          <![CDATA[ 
    SET NOCOUNT ON
    SELECT A.STAREC, 
           A.NIDRTI, 
           CODRET, 
           CODSOL, 
           CONVERT(VARCHAR,DATPRO) DATPRO, 
		   HORPRO,
		   B.CODSTB 
      FROM TBREGTIN (NOLOCK) A
     INNER JOIN TBEXTTIN (NOLOCK) B
        ON (A.NIDRTI = B.NIDRTI)
     WHERE A.TIPLCT IN (71,73) 
       AND A.STAREC IN (1,9)
	   AND B.CODSTB <>''	            
      ]]>
        </query>
      </item>
      <item script="true" alias="A." sql="SELECT TOP 1 * from XLREGTIN" type="List" method="GetInternalTransactionData" return="DadosTransacaoInterna" procname="PRREGTINSELDLT" desc ="Lista Detalhes do Lançamento interno (Preparo para lancamento)">
        <query>
          <![CDATA[
    SELECT  A.NIDRTI, A.NIDRPA, A.CODVER, A.CODPRC, A.NUMIPA, A.NIDBOL,
          A.NIDTOK, A.ORGLCT, A.TIPLCT, A.LOTFIN, A.NIDTRA, A.CODUSU,
          A.STAREC, A.DATCAD, A.DATUPD, A.UPDUSU, A.CODRET, A.DATPRO,
          A.HORPRO, A.VLRJUR, A.MSGRET, A.NUMAUT, A.NOMTIT, A.NUMPED,
          A.DSCPED, A.DATPED, A.RESPAV, A.NUMTID, A.VLRPAR, A.VLRTJU,
          A.RSPTAR, A.CODCRT, A.NUMCRT, A.NUMMES, A.NUMANO, A.NUMCVC,
          A.NUMPCL, A.CODTRA, A.VLRTRA, A.CALPAR, A.CODSOL, A.USUPRO,
          B.USRDEB, B.USRCRD, B.INDDEB, B.INDCRD, A.OMTSLD, A.OMTTAR,
          A.NUMAGE, A.NUMCTA, A.CODCMF, A.RSPCNF, A.CODBCO, A.NOMDEP,
          A.CPFDEP, A.NUMIDT, A.CANTRA, B.NIDDLT, B.TIPLIN, B.CODPRT, 
		      B.CTADEB, B.CTACRD, B.VLRLAN, B.VLRTAR, B.DEBPRT, B.DEBCTA, 
		      B.CRDPRT, B.CRDCTA, C.NIDLCT, C.CODTRM, C.CODTAR, C.VEREXI, 
		      C.AGRLCT, C.STAOPE, C.MOVDEB, C.MOVCRD, C.STAREG, CASE WHEN C.CODVER =1 THEN C.STABOR ELSE C.STAOPE END STABOR, 
		      C.IDEPRE, C.VALLMT, C.VALSLD, 0 APICRD, A.ORGOPE, A.CODMCC
    FROM TBREGTIN (NOLOCK) A
   INNER JOIN TBREGDLT (NOLOCK) B
      ON (B.NIDRTI = A.NIDRTI)
   INNER JOIN TBLANINT(NOLOCK) C
      ON (B.TIPLCT = C.TIPLCT AND B.TIPLIN = C.TIPLIN AND B.CODTRM = C.CODTRM AND A.CODVER = C.CODVER)          
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da Transação Interna" name="NIDRTI" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>

  </item>
  <item create="true"  id="72" name="TBLOGBAL">
    <UpdateKey>Identity</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn>@NIDRTR</fieldreturn>
    <procedure>10001000000</procedure>
    <asp>100000000</asp>
    <csharp>10000000</csharp>
    <SelectAllList></SelectAllList>
    <StringSqlSelectAll></StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <CreateSelectionAll>TRUE</CreateSelectionAll>
    <SelectAllAlias>A.</SelectAllAlias>
    <MaxFields></MaxFields>
  </item>
  <item create="true"  id="73" name="TBLANINT" friendlyname="Lancamento Interno" modelversion="2">
    <UpdateKey select="both">IDENTITY</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn>@NIDLCT</fieldreturn>
    <procedure>1110000000</procedure>
    <asp>110000000</asp>
    <csharp>11100000</csharp>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <MaxFields></MaxFields>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRLANINTSELALL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query order="A.CODVER, A.TIPLCT, A.TIPLIN, A.CODTRM">
          <![CDATA[SELECT  A.* 
                ,ISNULL(G.DSCTAB,'') AS DSCLCT
                ,ISNULL(B.DSCTAB,'') AS DSCLIN
                ,ISNULL(J.DSCTAB,'') AS DSCTAR
                ,ISNULL(C.DSCTAB,'') AS DSCDEB
                ,ISNULL(D.DSCTAB,'') AS DSCCRD
                ,ISNULL(E.DSCMOV,'') AS DSCMVD
                ,ISNULL(F.DSCMOV,'') AS DSCMVC
                ,ISNULL(H.DSCSTA,'') AS DSCREG
                ,ISNULL(I.DSCSTA,'') AS DSCBOR
                ,ISNULL(K.DSCTAB,'') AS DSCREC
                ,ISNULL(L.DSCTAB,'') AS DSCTRM                
                FROM TBLANINT (NOLOCK) A
                INNER JOIN TBTABGER (NOLOCK) B
                ON (57 = B.NUMTAB AND A.TIPLIN = B.KEYCOD)
                INNER JOIN TBTABGER (NOLOCK) C
                ON (39 = C.NUMTAB AND A.INDDEB = C.KEYCOD)
                INNER JOIN TBTABGER (NOLOCK) D
                ON (39 = D.NUMTAB AND A.INDCRD = D.KEYCOD)
                INNER JOIN TBTIPMOV (NOLOCK) E
                ON (A.MOVDEB = E.CODMOV)
                INNER JOIN TBTIPMOV (NOLOCK) F
                ON (A.MOVCRD = F.CODMOV)
                INNER JOIN TBTABGER (NOLOCK) G
                ON (36 = G.NUMTAB AND A.TIPLCT = G.KEYCOD)
                INNER JOIN TBCADSTA (NOLOCK) H
                ON (A.STAREG = H.CODSTA)
                INNER JOIN TBCADSTA (NOLOCK) I
                ON (A.STABOR = I.CODSTA)
                left JOIN TBTABGER (NOLOCK) J
                ON (24 = J.NUMTAB AND A.CODTAR = J.KEYCOD)
                inner JOIN TBTABGER (NOLOCK) K
                ON (7 = K.NUMTAB AND A.STAREC = K.KEYCOD)
                inner JOIN TBTABGER (NOLOCK) L
                ON (59 = L.NUMTAB AND A.CODTRM = L.KEYCOD)
                WHERE (1=1)
        ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Tipo de Lançamento" name="TIPLCT" type="short" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Tipo de Linha" name="tiplin" type="short" sysnull="true" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Código do Tipo de Registro de Movimento" name="CODTRM" type="byte" sysnull="true" default="" output="" null="true"/>
        </parameters>
      </item>
      <item script="false" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRLANINTSELALL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query></query>
      </item>
    </selectallcommand>
    <insertcommand key="Identity" exceptionparamns="'DATCAD','DATUPD', 'NIDLCT'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="Identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[SET @DATUPD = GETDATE();]]>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="LancamentoInterno" procname="PRLANINTSEL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query>
          <![CDATA[SELECT * FROM  TBLANINT (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Lançamento" name="NIDLCT" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="Select" return="LancamentoInterno" procname="PRLANINTSELLIN" desc ="Seleciona o tipo de lançamento e tipo de linha">
        <query>
          <![CDATA[SELECT * FROM  TBLANINT (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Tipo de Lançamento" name="TIPLCT" type="short" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="ID do Tipo de Linha" name="TIPLIN" type="short" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código do Tipo de Registro de Movimento" name="CODTRM" type="byte" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Versão de Aplicação" name="CODVER" type="byte" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
  </item>

  <item create="true"  id="73" name="TBREGDLT"  friendlyname="Detalhe Lancamento Transacao" modelversion="3">
    <UpdateKey>Identity</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn>@NIDDLT</fieldreturn>
    <procedure>1011000000</procedure>
    <asp>100000000</asp>
    <csharp>10110000</csharp>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <MaxFields></MaxFields>

    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="DetalheLancamentoTransacao" procname="PRREGDLTSEL" desc ="Seleciona o Detalhe de Lançamento de Transação de acordo com o id do detalhe do lançamento" modelversion="2">
        <query>
          <![CDATA[SELECT * FROM TBREGDLT (NOLOCK) A ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Detalhe de Lançamento" name="NIDDLT" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="SELECT top 1 * FROM TBREGDLT (NOLOCK) A" method="Select" type="List" return="DetalheLancamentoTransacao" procname="PRREGDLTSELKEY" desc ="Seleciona o Detalhe de Lançamento de Transação de acordo com o id do registro de transacao">
        <query>
          <![CDATA[SELECT * FROM TBREGDLT (NOLOCK) A ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da Transação" name="NIDRTI" type="int" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Tipo de Lançamento" name="TIPLCT" type="short" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código do Tipo de Registro de Movimento" name="CODTRM" type="byte" default="1" output="" null="false"/>
        </parameters>
      </item>

    </selectcommand>

    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRREGDLTSELALL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query>
          SELECT A.*, B.DSCREC, ISNULL(C.LGNUSU,'') AS LGNUSU
          FROM TBREGDLT A WITH (NOLOCK)
          INNER JOIN TBCADSTR B (NOLOCK) ON
          (A.STAREC = B.STAREC)
          LEFT JOIN TBCDLGN C (NOLOCK) ON
          (A.UPDUSU = C.CODCAD)
        </query>
        <parameters>
          <parameter input="true" desc ="Tipo de Lançamento" name="TIPLCT" type="short" default="null" output="" null="true"/>
          <parameter input="true" desc ="Tipo de Linha" name="tiplin" type="byte" default="null" output="" null="true"/>
        </parameters>
      </item>
    </selectallcommand>
    <insertcommand key="Identity" exceptionparamns="'DATCAD','DATUPD', 'NIDDLT'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <deletecommand key="Identity" exceptionparamns="'DATCAD','DATUPD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </deletecommand>

    <methods>
      <item script="true" alias="" sql="" method="DeleteTransaction" return="int" returnmode="0" procname="PRREGDLTREMTRAINT" desc ="Remove uma transação Interna" returnvalue="0">
        <query merge="true">
          <![CDATA[
DELETE FROM TBREGDLT          
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID da Transacao Interna" name="NIDRTI" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </methods>
  </item>
  <item create="true"  id="74" name="XLREGTIN" friendlyname="Dados Transacao Interna" modelversion="2">
    <UpdateKey>Key</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>001000000</procedure>
    <asp>101000000</asp>
    <csharp>00100000</csharp>
    <SelectAllList></SelectAllList>
    <StringSqlSelectAll></StringSqlSelectAll>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <MaxFields></MaxFields>
  </item>


  <item create="true"  id="76" name="TBEXTTIN" friendlyname="Transação Interna Ext" modelversion="2">
    <UpdateKey>Key</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn>@NIDRTI</fieldreturn>
    <procedure>1111000000</procedure>
    <asp>111100000</asp>
    <csharp>11110000</csharp>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <MaxFields></MaxFields>

    <insertcommand key="key" exceptionparamns="'DATCAD','DATUPD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-3" message="" error="EXISTINGREQUEST"/>
      </returns>
    </insertcommand>
    <updatecommand key="key" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[SET @DATUPD = GETDATE();]]>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </updatecommand>

    <selectcommand>
      <item script="true" alias="A." sql="" type="" method="Select" return="TransacaoInternaExt" procname="PREXTTINSEL" desc ="Seleciona o registro de acordo com o id da transação">
        <query>
          <![CDATA[SELECT * FROM TBEXTTIN (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da Transação Interna" name="NIDRTI" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>

  </item>

  <item create="true"  id="77" name="TBREGTED" friendlyname="Registro de TED" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>false</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <procedure>1111000000</procedure>
    <asp>111100000</asp>
    <csharp>11110000</csharp>

    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[
        /* Verifica se já não existe uma TED registrada */
        IF(EXISTS(SELECT 1 FROM TBREGTED (NOLOCK) WHERE NIDCCR= @NIDCCR AND NIDTRA= @NIDTRA AND STAREC IN(1,2,9)))
          BEGIN
            SET @RETURN_VALUE=-3;
          END
      ]]>

      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-3" message="" error="EXISTINGREQUEST"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[SET @DATUPD = GETDATE();]]>
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </updatecommand>

    <selectcommand>
      <item script="true" alias="A." sql="" type="" method="Select" return="RegistroTED" procname="PRREGTEDSELNID" desc ="Seleciona o Registro de acordo com base no id de Registro da TED">
        <query>
          <![CDATA[SELECT * FROM TBREGTED (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID de Registro da TED" name="NIDTED" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" type="" method="Select" return="RegistroTED" procname="PRREGTEDSELTRA" desc ="Seleciona o Registro de TED com base no ID da Transação">
        <query>
          <![CDATA[SELECT * FROM TBREGTED (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da Transação" name="NIDTRA" type="System.String" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="SELECT top 1 * FROM TBREGTED (NOLOCK) A" type="List" method="Select" return="RegistroTED" procname="PRREGTEDSELUPD" desc ="Seleciona os registros de TED com base no ID do Tomador da TED e o status de registro">
        <query>
          <![CDATA[SELECT * FROM TBREGTED (NOLOCK) A WHERE APREXE > 0 AND CODAPR>0]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Usuario de Gravação da TED" name="USUTED" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Status do Registro" name="STAREC" type="System.Byte" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" type="" method="Select" return="RegistroTED" procname="PRREGTEDCRTTED" desc ="Prepara a criação de um registro de inscrição de TED">
        <query>
          <![CDATA[
SELECT 
	   0 AS NIDTED,
	   1 AS STAREC,
	   GETDATE() AS DATCAD,
	   GETDATE() AS DATUPD,	
     0 APREXE,
	   D.NUMAGE,
	   D.NUMCTA,
	   0 AS UPDUSU,
	   A.CODUSU, 
	   F.USUPRO,
	   C.TIPEXT AS TIPCTA,
	   @USUTED USUTED,
	   @NIDCCR NIDCCR, 
	   0 CODAPR,
     0 AS NIDRTI,
	   CASE WHEN (G.CODVER =2 AND A.TIPRFE=11) THEN A.NIDRVM ELSE 0 END AS CANRTI,
     A.NIDTRA, 
	   GETDATE() AS DATMOV,
	   E.CODCLI AS CODCLI,
	   B.NIDCTA,
	   B.NUMBCO AS FAVBCO, 
	   B.NUMAGE AS FAVAGE,
	   LTRIM(RTRIM(B.NUMCTA)) + LTRIM(RTRIM(B.NUMDVE))  AS FAVCTA,
	   B.CODCMF AS FAVCPF, 
	   UPPER((B.NOMBNF Collate SQL_Latin1_General_Cp1253_CI_AI)) AS FAVNOM,
	   '' AS FAVCP2,
	   '' AS FAVNO2,
	   CASE WHEN A.INDLCT = 3 THEN 'S' ELSE 'N' END AS OMTTAR, 
	   CASE WHEN A.INDLCT = 3 THEN 'S' ELSE 'N' END AS OMTSLD,
	   @CODFNL AS CODFNL,
     0 AS LOTFIN,
      '' CODNDF,
      '' NUMPTL,     
      '' DSCLNK,
      '' DSCREL,
      '' DSCMTH,
      27 STATED,
	  (A.VLRMOV* A.SIGOPE) VLRMOV,
    '' AS DSCMSS
  FROM TBREGCCR A
 INNER JOIN TBCADCTA (NOLOCK) B
    ON (A.NIDCTA = B.NIDCTA)
 INNER JOIN TBTIPCTA (NOLOCK) C
    ON (C.TIPCTA = B.TIPCTA)
 INNER JOIN TBCADCTA (NOLOCK) D
    ON (@USUTED = D.CODUSU AND 1 = D.STAREC AND 250 = D.STACTA AND 2 = D.ORGCTA)
 INNER JOIN TBCADUSU E
    ON (@USUTED = E.CODUSU)
 INNER JOIN TBUSUPRO F
    ON (54 = F.CODUSU AND 19 = F.CODPRO)
 INNER JOIN TBREGTIN G
    ON (G.NIDRTI = A.NIDRVM)
WHERE B.ORGCTA = 2
  AND B.STAREC =1
  AND B.STACTA=250
  AND B.TIPCTA > 1
  AND ISNULL(B.NUMCTA,'') <>''
  AND ISNULL(B.NUMAGE,'') <>''
  AND (A.VLRMOV* A.SIGOPE) > 0
  AND (A.TIPRFE=11)
  AND (A.STABOR=27)
        ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Registro de Conta Corrente" name="NIDCCR" type="int" default="" output="" null="false"/>
          <parameter input="true" desc ="ID da Transação" name="NIDTRA" type="System.String" size="13" default="" output="" null="false"/>
          <parameter input="true" omit="true" desc ="Código da Finalidade" name="CODFNL" size="5" type="System.String" default="" output="" null="false"/>
          <parameter input="true" omit="true" desc ="Código do Banco Executor da TED" name="USUTED" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>

    <methods>
      
      <item webtype="POST" script="false" alias="A." sql="" method="Close" return="int" returnmode="4" procname="" desc ="Executa o Fechamento de uma TED" returnvalue="0" remarks="RETURN_VALUE = 1, - Registro Ativado   (29)@RETURN_VALUE = 2, - Registro Cancelada (23)@RETURN_VALUE = 3, - Registro Estornado (25)">
        <query>
        </query>
        <body>
          return CloseEx (pNIDTED,pSTATED, pUPDUSU);
        </body>
        <parameters>
          <parameter input="true" desc ="ID de Registo da TED" name="NIDTED" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Status de Atualização" name="STATED" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
        
        <item webtype="POST" script="true" alias="A." sql="" method="ApproveOperation" return="int" returnmode="2" procname="PRREGTEDAPROPE" desc ="Efetua o Registro de Aprovação de uma operação TED">
          <query>
            <![CDATA[
DECLARE @RETURN_VALUE INT = 0
DECLARE @VLRAPR MONEY=0
DECLARE @NIDTRA VARCHAR(13)
DECLARE @STAREC TINYINT
DECLARE @CODAPR INT

SET @CODFNL= LTRIM(RTRIM(@CODFNL))

IF(@CODFNL='')
   SET @RETURN_VALUE = -5

IF(@RETURN_VALUE =0)
   BEGIN
      IF(EXISTS(SELECT 1 FROM TBREGTED WHERE NIDCCR = @NIDCCR AND CODAPR >0))
        SET @RETURN_VALUE = -2
   END

IF(@RETURN_VALUE =0)
  BEGIN
    SELECT @STAREC = STAREC, @VLRAPR = VLRMOV, @NIDTRA = NIDTRA  FROM TBREGCCR (NOLOCK) WHERE NIDCCR = @NIDCCR
  END

IF(@STAREC<=0)
	SET @RETURN_VALUE=-1
IF(@RETURN_VALUE=0)
   BEGIN
    IF( NOT EXISTS(SELECT 1 FROM TBUSUACE (NOLOCK) WHERE CODUSU= @UPDUSU AND STAREC=1 AND CODACE=@CODACE))
	      SET @RETURN_VALUE=-3
   END
   
IF(@RETURN_VALUE=0)
   BEGIN
    IF( EXISTS(SELECT 1 FROM TBREGAPR (NOLOCK) WHERE NIDTRA=@NIDTRA AND NIDCCR = @NIDCCR AND STAREC=1))
	      SET @RETURN_VALUE=-2
   END
   

IF(@RETURN_VALUE=0)
		BEGIN
			INSERT 
	  		 INTO TBREGAPR (STAREC, UPDUSU, NIDTRA, NIDCCR, USUAPR,  DATAPR,  VLRAPR)  VALUES (1,@UPDUSU,@NIDTRA,@NIDCCR,@UPDUSU,GETDATE(),@VLRAPR)
         IF(@@ERROR=0)
			      BEGIN
			          SET @CODAPR = @@IDENTITY
						    UPDATE TBREGTED SET CODAPR = @CODAPR WHERE NIDCCR = @NIDCCR AND CODAPR = 0
					      IF(@@ERROR=0)
						        SET @RETURN_VALUE = @CODAPR
                ELSE
                    SET @RETURN_VALUE = -4
               
                IF(@RETURN_VALUE >0)
                    BEGIN
                      IF(@CODFNL<>'')
                        BEGIN
                          UPDATE TBREGTED SET CODFNL = @CODFNL  WHERE NIDCCR = @NIDCCR AND CODFNL <>@CODFNL
                        END
                    END
					  END
		END
	SELECT @RETURN_VALUE
        
        ]]>

          </query>
          <parameters>
            <parameter input="true" apply="true" desc ="ID do Registro de Conta Corrente" name="NIDCCR" type="System.Int32" default="" output="" null="false"/>
            <parameter input="true" apply="true" desc ="Código de Finalidade" name="CODFNL" type="System.String" size="5" default="" output="" null="false"/>
            <parameter input="true" apply="true" desc ="Usuário de Aprovação" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
            <parameter input="true" apply="true" desc ="Codigo de Acesso" name="CODACE" type="System.Int32" default="" output="" null="false"/>
          </parameters>
          <returns>
            <return value="0" message="" error="APPROVALFAIL"/>
            <return operator=">" value="0" message="TED APROVADA PARA OPERACAO" error="OK"/>
            <return value="-1" message="" error="APPROVALFAILRECORD"/>
            <return value="-2" message="" error="APPROVALEXISTING"/>
            <return value="-3" message="" error="APPROVALUSERNOTALLOWED"/>
            <return value="-4" message="" error="APPROVALFAIL"/>
            <return value="-5" message="" error="INVALIDPURPOSECODE"/>
          </returns>
        </item>

        <item script="true" alias="A." sql="" method="GetActionForTed" return="int" returnmode="1" procname="PRREGTEDSELSTA" desc ="Retorna o id de Ação para o Status da TED" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE =0
IF(EXISTS(SELECT 1 FROM TBCADSTA (NOLOCK) A WHERE CODSTA=@CODSTA AND STAREC=1))
   SELECT @RETURN_VALUE = CODTRM FROM TBCADSTA (NOLOCK) A WHERE CODSTA=@CODSTA AND STAREC=1
RETURN @RETURN_VALUE           
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Status" name="CODSTA" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
      <item   webtype="POST" script="true" alias="A." sql="" method="ApproveExecution" return="int" returnmode="1" procname="PRREGTEDCHGSTA" desc ="Aprova/Reprova a execução de um processamento de TED" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0
DECLARE @AUDDSC VARCHAR(100) = N''
/* APROVACAO*/
IF(@CODACT=1)
   BEGIN
      UPDATE TBREGTED SET APREXE = @APREXE, UPDUSU =@APREXE,DATUPD=GETDATE() WHERE NIDTED=@NIDTED AND STAREC=1 AND APREXE=0
   END
/* REPROVACAO*/   
IF(@CODACT=2)
   BEGIN
      UPDATE TBREGTED SET APREXE = 0, UPDUSU =@APREXE,DATUPD=GETDATE() WHERE NIDTED=@NIDTED AND STAREC <= 2 AND APREXE<>0
   END
IF(@@ERROR=0)
    BEGIN
	    SET @AUDDSC=N'APROVACAO DE EXECUÇÃO DA TED'
      SET @RETURN_VALUE=1
    END
ELSE
    SET @AUDDSC=N'FALHA NA APROVACAO DE EXECUÇÃO DA TED'
INSERT INTO TBAUDDAT (UPDUSU, AUDDAT, AUDKEY, AUDIDR, AUDIMS,AUDDSC) VALUES (@APREXE,GETDATE(),87,@NIDTED,2,@AUDDSC)
RETURN @RETURN_VALUE
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código de Ação" name="CODACT" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" desc ="Código do Usuário Aprovador" name="APREXE" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="ID do Registro da TED" name="NIDTED" type="System.Int32" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="1" message="" error="OK"/>
          <return value="0" message="" error="APPROVALFAIL"/>
        </returns>

      </item>

      <!--<item script="true" alias="A." sql="" method="CloseLaunch" return="int" returnmode="1" procname="PRREGTEDCLOREG" desc ="Efetua o fechamento de processamento de uma TED" returnvalue="1">
        <query>
          <![CDATA[
  SET @RETURN_VALUE=0
	DECLARE @LOTFIN INT=0
	DECLARE @NIDRTI INT=0
	DECLARE @CANRTI INT=0
	DECLARE @STABOR SMALLINT=0
	DECLARE @NIDCCR INT=0
    SELECT @LOTFIN = LOTFIN, 
	       @CANRTI = CANRTI, 
		   @NIDRTI = NIDRTI,
		   @NIDCCR = NIDCCR 
	  FROM TBREGTED (NOLOCK) WHERE NIDTED =@NIDTED
             
    /* LANCAMENTO DA TED */ 
            
    IF(@LOTFIN>0)
		BEGIN
			UPDATE TBREGCCR 
               SET STABOR=@CODSTA
                  ,STAREG=29 
             WHERE LOTFIN=@LOTFIN AND TIPLCT=80

			 IF(@@ERROR=0)
				SET @RETURN_VALUE=1
        END                   
   
	IF(@CODTRM=1)
	   SET @STABOR = 29
	IF(@CODTRM=2)
	   SET @STABOR = 23
	IF(@CODTRM=3)
	   SET @STABOR = 25

    /* REGISTRO DE INSCRICAO TED */
    SELECT @LOTFIN = ISNULL(LOTFIN,0) 
      FROM TBREGTIN (NOLOCK) 
     WHERE NIDRTI = @NIDRTI            
            
    IF(@LOTFIN>0)
       BEGIN
			UPDATE TBREGCCR 
               SET STABOR=@STABOR
                  ,STAREG=29 
             WHERE LOTFIN=@LOTFIN AND IDEPRE=1
			 IF(@@ERROR=0)
				SET @RETURN_VALUE=1
       END
	    		            
    /* CANCELAMENTO */
    SELECT @LOTFIN = ISNULL(LOTFIN,0) 
      FROM TBREGTIN (NOLOCK) 
     WHERE NIDRTI = @CANRTI            
            
    IF(@LOTFIN>0)
       BEGIN
			UPDATE TBREGCCR 
               SET STABOR=@STABOR
                  ,STAREG=29 
             WHERE LOTFIN=@LOTFIN AND IDEPRE=1

			 IF(@@ERROR=0)
				SET @RETURN_VALUE=1

       END

	IF(@STABOR=29 AND @NIDCCR>0)
	   BEGIN
		  UPDATE TBIMPREG SET STAREG=99 WHERE NIDCCR=@NIDCCR
	   END
	IF(@STABOR IN(23,25) AND @NIDCCR>0)
	   BEGIN
		  UPDATE TBIMPREG SET STAREG=67 WHERE NIDCCR=@NIDCCR
	   END

	RETURN @RETURN_VALUE;
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Tipo de Movimentação" name="CODTRM" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Código do Status Fechado" name="CODSTA" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" desc ="ID do Registro da TED" name="NIDTED" type="System.Int32" default="" output="" null="false"/>

        </parameters>
      </item>-->

      <item script="true" alias="A." sql="" method="ValidAccountType" return="int" returnmode="2" procname="PRREGTEDTYPCTA" desc ="Retorna 0 se a conta for válida para lançamento" returnvalue="0">
        <query>
          <![CDATA[
DECLARE @RETURN_VALUE VARCHAR(2)
SELECT @RETURN_VALUE = C.TIPEXT 
  FROM TBREGCCR A
 INNER JOIN TBCADCTA B 
    ON (A.NIDCTA = B.NIDCTA)
 INNER JOIN TBTIPCTA C 
    ON (B.TIPCTA = C.TIPCTA)
 WHERE NIDCCR = @NIDCCR
IF(@RETURN_VALUE NOT IN ('CC','PP','CI','PG'))
	SELECT -1 AS RETVAL
ELSE
    SELECT 0 AS RETVAL          
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Registro de Conta Corrente" name="NIDCCR" type="int" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="0" message="" error="OK"/>
          <return value="-1" message="" error="CEINVALIDTYPE"/>
        </returns>
      </item>
    </methods>

    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRREGTEDSELALL" desc ="Seleciona todos os registros de Ted do tomador da TED e o status de registro">
        <query>
          <![CDATA[
SELECT cast(0 as bit) flgchk, A.*
      ,ISNULL(B.DSCTAB,'') AS DSCREC
      ,C.DSCSTA      
      ,D.NOMUSU
      ,ISNULL(E.LGNUSU,'') DSCAEX
      ,ISNULL(F.DSCTAB,'') DSCFIN      
      ,ISNULL(G.DATCAD,null) DATREJ      
      ,ISNULL(G.DSCERR,'') DSCREJ      
      ,ISNULL(I.LGNUSU,'') NOMAPR            
  FROM TBREGTED A WITH (NOLOCK) 
  LEFT JOIN TBTABGER (NOLOCK) B 
    ON (7 = B.NUMTAB AND A.STAREC = B.KEYCOD)
 INNER JOIN TBCADSTA (NOLOCK) C 
    ON (A.STATED = C.CODSTA)
  LEFT JOIN TBCADUSU (NOLOCK) D
    ON (A.CODUSU = D.CODUSU)
  LEFT JOIN TBCADUSU (NOLOCK) E
    ON (A.APREXE = E.CODUSU)
  LEFT JOIN TBTABGER (NOLOCK) F 
    ON (305 = F.NUMTAB AND LTRIM(RTRIM(F.KEYTXT)) = LTRIM(RTRIM(A.CODFNL)))
  LEFT JOIN (SELECT NIDTED, DATCAD, DSCERR FROM TBCALTED (nolock) WHERE NIDTED>0 AND NUMOCO=0) G 
    ON (G.NIDTED = A.NIDTED)    
  LEFT JOIN TBREGAPR (NOLOCK) H
    ON (H.CODAPR = A.CODAPR)
  LEFT JOIN TBCADUSU (NOLOCK) I
    ON (I.CODUSU = H.USUAPR)
   
 WHERE (1=1)    
        ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Tomador da TED" name="USUTED" type="System.Int32" default="null" output="" null="true"/>
          <parameter input="true" desc ="Status de Registro" name="STAREC" type="System.Byte" default="null" output="" null="true"/>
        </parameters>
      </item>
    </selectallcommand>

  </item>

  <item create="true"  id="78" name="TBREGBXB" friendlyname="Billet Accounting" modelversion="3">
    <UpdateKey>identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <SelectAllList></SelectAllList>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
    <MaxFields></MaxFields>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="BilletAccounting" procname="PRREGBXBSEL" desc ="Seleciona o registro de acordo com o ID de Registro de Contabilização de Baixa de Boleto">
        <query>
          <![CDATA[SELECT * FROM TBREGBXB (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID de Registro de Contabilização de Baixa de Boleto" name="NIDBXB" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <insertcommand key="Key" exceptionparamns="'DATCAD','DATUPD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="key" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD=GETDATE();
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </updatecommand>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRREGBXBSELALL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query>
          <![CDATA[
SELECT A.NIDBXB, 
		ISNULL(G.DSCTAB,'') AS DSCREC, 
		ISNULL(H.LGNUSU,'') AS LGNUSU, 
		A.TIPBOL, 
		ISNULL(B.DSCTAB,'') DSCBOL, 
		A.TIPREG, 
		ISNULL(C.DSCTAB,'') AS DSCREG
		,A.TIPVAL, 
		ISNULL(D.DSCTAB,'') AS DSCVAL
		,A.SIGOPE 
		,ISNULL(I.DSCTAB,'') AS DSCOPE
		,A.INDLCT, 
		ISNULL(E.DSCTAB,'') AS DSCLCT,
		A.CODMOV, 
		F.DSCMOV
  FROM TBREGBXB (NOLOCK) A 
 INNER JOIN TBTABGER (NOLOCK) B
    ON (16 = B.NUMTAB AND A.TIPBOL = B.KEYCOD)
 INNER JOIN TBTABGER (NOLOCK) C
    ON (920 = C.NUMTAB AND A.TIPREG = C.KEYCOD)
 INNER JOIN TBTABGER (NOLOCK) D
    ON (911 = D.NUMTAB AND A.TIPVAL = D.KEYCOD)
 INNER JOIN TBTABGER (NOLOCK) E
    ON (39 = E.NUMTAB AND A.INDLCT = E.KEYCOD)
 INNER JOIN TBTIPMOV (NOLOCK) F
    ON (A.CODMOV = F.CODMOV)
 INNER JOIN TBTABGER (NOLOCK) G
    ON (7 = G.NUMTAB AND A.STAREC = G.KEYCOD)
 INNER JOIN TBTABGER (NOLOCK) I
    ON (10 = I.NUMTAB AND A.SIGOPE = I.KEYCOD)
  LEFT JOIN TBCADUSU (NOLOCK) H
    ON (A.UPDUSU = H.CODUSU)
        ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Tipo de Boleto" name="TIPBOL" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" desc ="Tipo de Registro" name="TIPREG" type="System.Byte" default="" output="" null="false"/>
        </parameters>

      </item>
    </selectallcommand>

  </item>

  <item create="true"  id="79" name="TBBOLDLT" friendlyname="Checking Account Release Detail" modelversion="3">
    <UpdateKey>identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="CheckingAccountReleaseDetail" procname="PRBOLDLTSEL" desc ="Seleciona o registro de acordo com o ID de Registro de Contabilização de Detalhe da Baixa de Boleto">
        <query>
          <![CDATA[SELECT * FROM TBBOLDLT (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID de Registro de Contabilização de Detalhe da Baixa de Boleto" name="NIDBLT" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD=GETDATE();
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </updatecommand>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRBOLDLTSELALL" desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query>
          <![CDATA[
SELECT A.*
      ,B.DSCTAB DSCREC
	  ,D.DSCTAB DSCOPE
	  ,E.DSCTAB DSCLCT
	  ,F.DSCMOV
	  ,G.DSCTAB DSCOPE    
  FROM TBBOLDLT (NOLOCK) A
 INNER JOIN TBTABGER (NOLOCK) B
    ON (7 = B.NUMTAB AND A.STAREC=B.KEYCOD)
  LEFT JOIN TBUSUPRO (NOLOCK) C
    ON (A.USUPRO = C.USUPRO)
 INNER JOIN TBTABGER (NOLOCK) D
    ON (10 = D.NUMTAB AND A.SIGOPE = D.KEYCOD)
 INNER JOIN TBTABGER (NOLOCK) E
    ON (39 = E.NUMTAB AND A.INDLCT = E.KEYCOD)
 INNER JOIN TBTIPMOV (NOLOCK) F
    ON (A.CODMOV = F.CODMOV)
 INNER JOIN TBTABGER (NOLOCK) G
    ON (59 = G.NUMTAB AND A.SIGOPE = G.KEYCOD)
    
        ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Registro de Baixa de Boleto" name="NIDRBB" type="System.Int32" default="" output="" null="false"/>
        </parameters>

      </item>
    </selectallcommand>
  </item>

  <item create="true"  id="80" name="TBREGAPR" friendlyname="ApprovalRecord" modelversion="3">
    <UpdateKey>Identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>TRUE</CSharpPartial>
    <SqlTable/>
    <procedure>1110000000</procedure>
    <asp>1110000000</asp>
    <csharp>1110000000</csharp>

    <insertcommand key="Identity" exceptionparamns="'DATCAD','DATUPD'" procname="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="Identity" exceptionparamns="'DATCAD'" procname="" >
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>

    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="ApprovalRecord" procname="" desc ="Seleciona o registro de aprovação de acordo com o Id de Registro de Aprovação">
        <query>
          <![CDATA[SELECT * FROM TBREGAPR (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Aprovação" name="CODAPR" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
  </item>

  <item create="true"  id="81" name="TBUSUACE" friendlyname="UserAccess" modelversion="3">
    <UpdateKey>Identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>0000000000</procedure>
    <asp>0000000000</asp>
    <csharp>0000000000</csharp>
    <methods>
      <item script="true" alias="A." sql="" method="InsertOrUpdate" return="int" returnmode="2" procname="PRUSUACEINSUPD" desc ="Insere ou atualiza um registro na tabela de Acessos e Permissões de Usuário" returnvalue="0">
        <query>
          <![CDATA[
          DECLARE @IOMODE TINYINT = 1
          DECLARE @RETURN_VALUE INT = 0          
          BEGIN TRY
          IF(EXISTS(SELECT 1 FROM TBUSUACE (NOLOCK) WHERE CODUSU=@CODUSU AND CODACE=@CODACE))
             SET @IOMODE=2
          IF(@IOMODE=1)
               BEGIN
                   INSERT INTO TBUSUACE(STAREC,UPDUSU,CODUSU,CODACE,TIPACE) VALUES (@STAREC,@UPDUSU,@CODUSU,@CODACE,@TIPACE)
                   IF(@@ERROR=0)
                      SET @RETURN_VALUE=1
               END
          ELSE
               BEGIN
                  UPDATE TBUSUACE 
                     SET STAREC=@STAREC, 
                         UPDUSU=@UPDUSU,
                         TIPACE=@TIPACE
                   WHERE CODUSU=@CODUSU 
                     AND CODACE=@CODACE
                   IF(@@ERROR=0)
                      SET @RETURN_VALUE=1
               END
          END TRY
          BEGIN CATCH
             SET @RETURN_VALUE=-1
          END CATCH
          SELECT @RETURN_VALUE
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Status do Registro" name="STAREC" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Código do Acesso" name="CODACE" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" desc ="Tipo de Acesso" name="TIPACE" type="System.Byte" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="GetUserAccess" return="int" returnmode="1" procname="PRUSUACEGET" desc ="Verifica se um usuário está contido no controle de acesso informado" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE = 0
IF(@CODACE=10)
   SET RETURN_VALUE=1
ELSE
    BEGIN
      IF(EXISTS(SELECT 1 FROM TBUSUACE (NOLOCK) WHERE STAREC=1 AND CODUSU=@CODUSU AND CODACE=@CODACE))
		    SET @RETURN_VALUE=1;
    END
RETURN @RETURN_VALUE;          
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Código do Acesso" name="CODACE" type="System.Int16" default="" output="" null="false"/>
        </parameters>
      </item>

    </methods>
  </item>

  <item create="true"  id="82" name="TBCADMNU" friendlyname="Menu Registration" modelversion="3">
    <UpdateKey>identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="MenuRegistration" procname="" desc ="Seleciona o item de menu de acordo com o ID do Menu">
        <query>
          <![CDATA[SELECT * FROM TBCADMNU (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Item de Menu" name="NIDMNU" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>

    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD'" procname="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'" procname="" >
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>

    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="" desc ="Seleciona todos os registros de cadastro de menus">
        <query order="ORDMNU, LVLMNU">
          <![CDATA[
SELECT A.*, ISNULL(B.DSCTAB,'') AS DSCREC, ISNULL(C.DSCTAB,'') AS DSCTMN , ISNULL(D.DSCTAB,'') AS DSCIDE 
  FROM TBCADMNU (NOLOCK) A 
 INNER JOIN TBTABGER (NOLOCK) B ON (7 = B.NUMTAB AND A.STAREC = B.KEYCOD)
 INNER JOIN TBTABGER (NOLOCK) C ON (72 = C.NUMTAB AND A.TIPMNU = C.KEYCOD)         
 INNER JOIN TBTABGER (NOLOCK) D ON (73 = D.NUMTAB AND A.IDEMNU = D.KEYCOD)          
         ]]>
        </query>
        ´<parameters>
          <parameter input="true" desc ="Identificacao do Menu" name="IDEMNU" type="System.Byte" default="1" output="" null="false"/>
        </parameters>

      </item>
    </selectallcommand>
  </item>


  <item create="true"  id="84" name="TBLRECAD" friendlyname="RechargeBatch" modelversion="3">
    <UpdateKey>identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="RechargeBatch" procname="" desc ="Seleciona o registro de recarga de lote de acordo com o ID do Registro de Carga">
        <query>
          <![CDATA[SELECT * FROM TBLRECAD (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Carga de Lote" name="NIDLRH" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD'" procname="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SELECT @ISRPOS = CASE WHEN APLRVC = 1 THEN 1 ELSE 0 END FROM TBUSUPRO (NOLOCK) WHERE USUPRO=@USUPRO
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'" procname="" >
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRLRECADSELALL" desc ="Seleciona todos os registros de carga de lote do usuário informado">
        <query>
          <![CDATA[
SELECT a.nidlrh, a.starec,
    a.stareg, a.updusu,
    a.nidlim, a.qtdreg,
    a.vlrtot, a.stalre,
    a.numipa, a.regloc,
    a.codusu, a.filnid,
    a.usupro, convert(varchar(10), a.datapr,103) datapr,
    a.usuapr, a.vlrsal,
    a.nidbol, a.numite,
    a.dscerr, D.dscsta
	  ,E.nomusu, ISNULL(B.DSCTAB,'') AS dscrec
    ,ISNULL(G.DSCTAB,'') AS dscreg    
    ,ISNULL(C.LGNUSU,'') AS lgnusu
    ,convert(varchar(10), a.datcad,103) datcad
    ,convert(varchar(10), a.datupd,103) datupd    
	  ,aplreg = '1' + CASE WHEN (SELECT COALESCE(SUM((VLRMOV*SIGOPE)),0) AS VLRSAL FROM TBREGCCR A (NOLOCK) WHERE  (A.STAREC IN (1,2)) AND (A.INDLCT = 2) AND (A.TIPVAL in (1)) AND (A.CODUSU = @CODUSU)) >0 THEN '1' ELSE '0' END
	           + CASE WHEN (F.VLRMAX<>0 AND F.VLRMIN<>0) THEN '1' ELSE '0' END
    ,apldel = ISNULL(h.numrec,0)
	  ,urlpst = CASE WHEN I.KEYBOL IS NULL THEN '' ELSE '?vl=' + + convert(varchar(36),keybol) end    
    ,haslog 
    ,tiprcg
    ,isrpos
  FROM TBLRECAD A
 INNER JOIN TBTABGER (NOLOCK) B
    ON (7 = B.NUMTAB AND A.STAREC = B.KEYCOD)
 INNER JOIN TBTABGER (NOLOCK) G
    ON (70 = G.NUMTAB AND A.STAREG = G.KEYCOD)
  LEFT JOIN TBCADUSU (NOLOCK) C
    ON (A.UPDUSU = C.CODUSU)
 INNER JOIN TBCADSTA (NOLOCK) D
    ON (A.STALRE = D.CODSTA)
 INNER JOIN TBCADUSU (NOLOCK) E
    ON (A.CODUSU = E.CODUSU)
 INNER JOIN TBUSUPRO (NOLOCK) F
    ON (A.USUPRO = F.USUPRO)
 LEFT JOIN  (SELECT NIDLRH, COUNT(*) NUMREC FROM TBLREREG (NOLOCK) WHERE STAREG>=35 GROUP BY NIDLRH) H
    ON (A.NIDLRH = H.NIDLRH)
 LEFT JOIN TBREGBOL (NOLOCK) I
    ON (A.NIDBOL = I.NIDBOL)
WHERE A.STAREC>0    
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Usuário" name="CODUSU" sysnull="true" type="System.Int32" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Código do Usuário Gestor" name="USUPRO" sysnull="true" type="System.Int32" default="" output="" null="true"/>
        </parameters>
      </item>
      <item reference="0" script="true" alias="A." sql="" type="" method="RecargaLotePorUsuario" return="DataTable" procname="PRLRECADLSTUSU" desc ="Obtêm a lista de recarga de lotes de acordo com o usuário solicitante">
        <query><![CDATA[SELECT A.*, B.CODPRO, B.VLRMIN, B.VLRMAX FROM TBLRECAD (NOLOCK) A INNER JOIN TBUSUPRO (NOLOCK) B ON (A.USUPRO = B.USUPRO)]]></query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Usuário" name="CODUSU" sysnull="true" type="System.Int32" default="" output="" null="true"/>
        </parameters>
      </item>
      <item reference="0" script="true" alias="A." sql="" type="" method="RecordsToBeLauched" return="DataTable" procname="PRLRECADLSTSTA" desc ="Obtêm a lista de recarga de lotes de acordo com o status de registro">
        <query>
          <![CDATA[
SELECT A.*, B.CODCMF, C.CODPRO, CASE WHEN (A.CODUSU=54) THEN cast(1 as bit) ELSE (cast(0 as bit)) END AS OMTSLD 
  FROM TBLRECAD (NOLOCK) A 
 INNER JOIN TBCADUSU (NOLOCK) B 
    ON (A.CODUSU = B.CODUSU) 
 INNER JOIN TBUSUPRO (NOLOCK) C 
    ON (A.USUPRO = C.USUPRO) 
 WHERE A.STAREC=1      
       ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Status do Registro" name="STAREG" sysnull="true" type="System.Byte" default="" output="" null="true"/>
        </parameters>
      </item>

    </selectallcommand>
    <methods>
      <item script="true" alias="A." sql="" method="ChangeStatusBatch" return="int" returnmode="1" procname="PRLRECADAPRBAT" desc ="Atualiza o registro de aprovação do cabeça de lote e seus respectivos itens" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE = 0
DECLARE @UPDITE TINYINT=0
DECLARE @NIDBOL INT=0
DECLARE @ISRPOS TINYINT
IF(@NIDLRH=0)
	SET @RETURN_VALUE=-2
IF(@USUAPR=0)
	SET @RETURN_VALUE=-3

BEGIN TRANSACTION

  BEGIN TRY
    IF(@RETURN_VALUE=0 AND @ACTOPE=3)
        BEGIN
          UPDATE TBLRECAD 
             SET STAREC=13, 
                 UPDUSU=@USUAPR,
                 DATUPD=GETDATE()
           WHERE NIDLRH=@NIDLRH 
  	       IF(@@ERROR=0)
			      BEGIN
			        UPDATE TBLREREG SET STAREC=13, UPDUSU=@USUAPR,DATUPD=GETDATE() WHERE NIDLRH = @NIDLRH
			        IF(@@ERROR=0)                  
					      BEGIN
						      SELECT @NIDBOL = ISNULL(NIDBOL,0) FROM TBLRECAD (NOLOCK) WHERE NIDLRH=@NIDLRH
						      IF(@NIDBOL>0)
							      BEGIN
								      UPDATE TBREGBOL SET STAREC= 13, UPDUSU = @USUAPR, DATUPD=GETDATE() WHERE NIDBOL=@NIDBOL
								      SET @RETURN_VALUE = 1;
							      END
						    ELSE
						        SET @RETURN_VALUE = 1;
					    END
				    END
        END
        
    IF(@RETURN_VALUE=0 AND @ACTOPE=1)
        BEGIN
          IF(@STAREG=5)
             BEGIN
                
                SELECT @ISRPOS = ISRPOS FROM TBLRECAD WHERE NIDLRH=@NIDLRH
     
                IF(@ISRPOS=1)
                   BEGIN
                        UPDATE TBLRECAD 
                           SET DATAPR=GETDATE(), 
                               USUAPR=@USUAPR, 
                               STAREG=10,
                               DATUPD=GETDATE(),
                               UPDUSU=@USUAPR
                         WHERE NIDLRH=@NIDLRH 
                           AND STAREC=1
				                 IF(@@ERROR=0)
					                 BEGIN
                              SELECT @UPDITE = ISNULL(UPDITE,0) FROM TBTRAREC (NOLOCK) WHERE STAREC=1 AND TIPPRO= 1 AND ISRPOS=0 AND STAREG=@STAREG                                                     
						                  UPDATE TBLREREG 
                                 SET STAREG=@UPDITE 
                               WHERE NIDLRH = @NIDLRH 
                                 AND STAREC=1
                                 AND @UPDITE > 0
						                  SET @RETURN_VALUE = 1;
					                END
                   END
                ELSE
                    BEGIN
                      UPDATE TBLRECAD 
                         SET DATAPR=GETDATE(), 
                             USUAPR=@USUAPR, 
                             STAREG=@STAREG,
                             DATUPD=GETDATE(),
                             UPDUSU=@USUAPR
                       WHERE NIDLRH=@NIDLRH AND STAREC=1
				               IF(@@ERROR=0)
					                BEGIN
                              SELECT @UPDITE = ISNULL(UPDITE,0) 
                                FROM TBTRAREC (NOLOCK) 
                               WHERE STAREC = 1 
                                 AND TIPPRO=  1 
                                 AND ISRPOS=0 AND STAREG=@STAREG                          
                                 
		                          UPDATE TBLREREG 
                                 SET STAREG=@UPDITE 
                               WHERE NIDLRH = @NIDLRH AND STAREC=1 AND @UPDITE>0
						                  SET @RETURN_VALUE = 1;
					                END
                END                          
             END
          ELSE
             BEGIN
                UPDATE TBLRECAD 
                   SET STAREG=@STAREG,
                       DATUPD=GETDATE(),
                       UPDUSU=@USUAPR
                 WHERE NIDLRH=@NIDLRH AND STAREC=1
				         IF(@@ERROR=0)
					        BEGIN
                    SELECT @UPDITE = ISNULL(UPDITE,0) 
                     FROM TBTRAREC (NOLOCK) 
                    WHERE STAREC = 1 
                      AND TIPPRO=  1 
                      AND ISRPOS=0 AND STAREG=@STAREG                          
                  
						        UPDATE TBLREREG SET STAREG=@STAREG WHERE NIDLRH = @NIDLRH AND STAREC=1 AND @UPDITE>0
						        SET @RETURN_VALUE = 1;
					        END
			       END
        END
  END TRY
  BEGIN CATCH
    SET @RETURN_VALUE=-1;
  END CATCH

IF(@RETURN_VALUE=-1)
	BEGIN
		IF @@TRANCOUNT > 0  
			ROLLBACK TRANSACTION;  
	END
ELSE
    COMMIT TRANSACTION
RETURN @RETURN_VALUE
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Carga de Lote" name="NIDLRH" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="ID do Usuário Aprovador" name="USUAPR" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Status do Registro" name="STAREG" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código da Operação" name="ACTOPE" type="System.Byte" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="APPROVALROLLBACKED"/>
          <return value="-2" message="" error="APPROVALWITHOUTID"/>
          <return value="-3" message="" error="APPROVALWITHOUTUSER" />
          <return value="-4" message="" error="APPROVALREFUSED" />
        </returns>
      </item>
      <item script="true" alias="A." sql="" method="ChangeStatusPermission" return="int" returnmode="1" procname="PRLRECADHASPRM" desc ="Verifica se o usuário tem permissão de alteração de status do lote" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=1;          
DECLARE @CODUSU INT = 0
IF( NOT ( EXISTS (SELECT 1 FROM TBUSUACE WHERE CODUSU=@USUAPR AND CODACE = 1) ) )
    BEGIN
        SELECT @CODUSU = CODUSU FROM TBLRECAD WHERE NIDLRH=@NIDLRH
        IF(@CODUSU<>@USUAPR)
          SET @RETURN_VALUE=-1
    END
RETURN @RETURN_VALUE   
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Carga de Lote" name="NIDLRH" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="ID do Usuário Aprovador" name="USUAPR" type="System.Int32" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="APPROVALREFUSED" />
        </returns>
      </item>

    </methods>
  </item>
  <item create="true"  id="85" name="TBLREREG" friendlyname="Recharge Batch Item" modelversion="3">
    <UpdateKey>identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="RechargeBatchItem" procname="" desc ="Seleciona o registro de recarga de lote item de acordo com o ID do Registro de Carga">
        <query>
          <![CDATA[SELECT * FROM TBLREREG (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Carga de Lote Item" name="NIDLRH" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD'" procname="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'" procname="" >
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRLREREGSELALL" desc ="Seleciona todos os itens de carga de lote do lote informado">
        <query>
          <![CDATA[
    SELECT a.nidlri, a.nidlrh, a.starec, a.stareg, a.updusu, 
		   convert(varchar(10), a.datcad,103) datcad,
		   convert(varchar(10), a.datexe,103) datexe,
         a.nidcrt, a.vlrmov, a.assusu, a.extnom,
         a.extref, a.codcmf, a.codcrt, a.valrec,
         a.nidtra, a.numite, a.dscerr, ISNULL(B.DSCTAB,'') AS dscrec
	       ,ISNULL(C.LGNUSU,'') AS lgnusu
	       ,ISNULL(E.NOMUSU,'') AS nomusu
	       ,ISNULL(f.NOMPRT,'') AS nomprt         
	       ,dbo.NumeroCartaoX(F.NUMCRT) AS dsccrt
	       ,D.dscsta, I.DSCTAB dscreg, g.nidbol
  FROM TBLREREG (NOLOCK) A
 INNER JOIN TBTABGER (NOLOCK) B
    ON (7 = B.NUMTAB AND A.STAREC = B.KEYCOD)
 INNER JOIN TBTABGER (NOLOCK) I
    ON (70 = I.NUMTAB AND A.STAREG = I.KEYCOD)
  LEFT JOIN TBCADUSU (NOLOCK) C
    ON (A.UPDUSU = C.CODUSU)
 INNER JOIN TBLRECAD (NOLOCK) G
    ON (A.NIDLRH = G.NIDLRH)
 INNER JOIN TBCADSTA (NOLOCK) D
    ON (G.STALRE = D.CODSTA)
  LEFT JOIN TBCADUSU (NOLOCK) E
    ON (A.ASSUSU = E.CODUSU)
  LEFT JOIN TBREGCRT (NOLOCK) F
    ON (A.CODCRT = F.CODCRT)
 WHERE A.STAREC >0    
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Carga de Lote Item" name="NIDLRH" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRLREREGSELITE" desc ="Seleciona todos os itens de carga de lote do lote INDIVIDUAL informado">
        <query>
          <![CDATA[
    SELECT 
        B.nidlri, 
        A.nidlrh, 
        B.starec, 
        B.stareg, 
        B.updusu, 
		    convert(varchar(10), B.datcad,103) datcad,
		    convert(varchar(10), B.datexe,103) datexe,
        B.nidcrt, 
        B.vlrmov, 
        B.assusu, 
        B.extnom,
        B.extref, 
        B.codcmf, 
        B.codcrt, 
        B.valrec,
        B.nidtra, 
        B.numite, 
        B.dscerr, 
        ISNULL(C.DSCTAB,'') AS dscrec
	      ,ISNULL(G.LGNUSU,'') AS lgnusu
	      ,ISNULL(E.NOMUSU,'') AS nomusu
	      ,ISNULL(f.NOMPRT,'') AS nomprt         
	      ,dbo.NumeroCartaoX(F.NUMCRT) AS dsccrt
	      ,D.dscsta, 
        I.DSCTAB dscreg, 
        a.nidbol
  FROM TBLRECAD  A
  INNER JOIN TBLREREG (NOLOCK) B
     ON (B.NIDLRH = A.NIDLRH)
  INNER JOIN TBTABGER (NOLOCK) C
     ON (7 = C.NUMTAB AND B.STAREC = C.KEYCOD)
  INNER JOIN TBCADSTA (NOLOCK) D
     ON (A.STALRE = D.CODSTA)
  LEFT JOIN TBCADUSU (NOLOCK) E
    ON (B.ASSUSU = E.CODUSU)
  LEFT JOIN TBREGCRT (NOLOCK) F
    ON (B.CODCRT = F.CODCRT)
  LEFT JOIN TBCADUSU (NOLOCK) G
    ON (B.UPDUSU = G.CODUSU)
 INNER JOIN TBTABGER (NOLOCK) I
    ON (70 = I.NUMTAB AND B.STAREG = I.KEYCOD)
 WHERE A.STAREC>0    
          
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código do Gestor" name="USUPRO" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Tipo de Recarga" name="TIPRCG" type="System.Byte" default="" output="" null="false"/>
        </parameters>
      </item>

    </selectallcommand>

    <methods>
      <item reference="0" script="true" alias="A." sql="" type="" method="RecordsToBeLaunched" return="DataTable" procname="PRLREREGLSTSTA" desc ="Obtêm a lista de cartões para transferência de credito em conta corrente">
        <query order="A.DATEXE">
          <![CDATA[
SELECT NIDLRI, 
       A.NIDLRH, 
       A.STAREG, 
       B.NIDCRT, 
       VLRMOV, 
       B.ASSUSU, 
       A.DATEXE, 
       CODCMF, 
       B.CODCRT, 
       VALREC, 
       B.NUMCRT, 
       B.ASSPRT CODPRT, 
       D.ISRPOS
       ,CASE WHEN (D.CODUSU=54 OR D.ISRPOS=1) THEN cast(1 as bit) ELSE (cast(0 as bit)) END AS OMTSLD
  FROM TBLREREG (NOLOCK) A     
 INNER JOIN TBREGCRT (NOLOCK) B ON (A.CODCRT = B.CODCRT)
 INNER JOIN TBGSTLOT (NOLOCK) C ON (C.NUMLOT = B.NUMLOT)
 INNER JOIN TBLRECAD (NOLOCK) D ON (D.USUPRO = C.USUPRO)
 WHERE A.STAREC=1 
   AND A.VALREC=1 
   AND D.NIDLRH=@NIDLRH
   AND A.NIDLRH=@NIDLRH   
   AND A.STAREG=@STAREG      
   AND ISNULL(A.NIDTRA,'')=''
      ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Lote de Recarga" name="NIDLRH" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Status do Registro" name="STAREG" type="System.Byte" default="" output="" null="false"/>
        </parameters>
      </item>

      <item reference="0" script="true" alias="A." sql="" type="" method="RecordsToBeCredited" return="DataTable" procname="PRLREREGLSTRCG" desc ="Obtêm a lista de cartões a serem carregados">
        <query order="A.DATEXE">
          <![CDATA[
SELECT NIDLRI, 
       A.NIDLRH, 
       A.STAREG, 
       B.NIDCRT, 
       VLRMOV, 
       B.ASSUSU, 
       A.DATEXE, 
       CODCMF, 
       B.CODCRT, 
       VALREC, 
       B.NUMCRT, 
       B.ASSPRT CODPRT, 
       D.ISRPOS
  FROM TBLREREG (NOLOCK) A     
 INNER JOIN TBREGCRT (NOLOCK) B ON (A.CODCRT = B.CODCRT)
 INNER JOIN TBGSTLOT (NOLOCK) C ON (C.NUMLOT = B.NUMLOT)
 INNER JOIN TBLRECAD (NOLOCK) D ON (D.USUPRO = C.USUPRO)
 WHERE A.STAREC=1 
   AND A.VALREC=1 
   AND D.NIDLRH=@NIDLRH
   AND A.NIDLRH=@NIDLRH   
   AND A.STAREG=@STAREG      
   AND ISNULL(A.NIDTRA,'')<>''
      ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Lote de Recarga" name="NIDLRH" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Status do Registro" name="STAREG" type="System.Byte" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="UpdateRechargeBatch" return="int" returnmode="1" procname="PRLREREGUPDBAT" desc ="Atualiza o registro de cabeça de lote com as informações do lote analítico" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0       
DECLARE @QTDREG INT = 0
DECLARE @VLRTOT FLOAT = 0
SELECT @QTDREG = ISNULL(COUNT(*),0), @VLRTOT= SUM(ISNULL(VLRMOV,0)) FROM TBLREREG WHERE NIDLRH = @NIDLRH GROUP BY NIDLRH
UPDATE TBLRECAD 
   SET QTDREG = @QTDREG
      ,VLRTOT = @VLRTOT
      ,DATUPD = GETDATE()
 WHERE NIDLRH= @NIDLRH          
   SET @RETURN_VALUE=@@ROWCOUNT
RETURN @RETURN_VALUE   
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Carga de Lote" name="NIDLRH" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="UpdateTransaction" return="int" returnmode="1" procname="PRLREREGUPDTRA" desc ="Atualiza o registro de cabeça de lote com as informações de processamento" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0       
DECLARE @QTDVAL INT = 0
DECLARE @QTDREC INT = 0
DECLARE @QTD009 INT = 0
DECLARE @QTDEXP INT = 0
SELECT @QTDVAL = COUNT(ISNULL(VALREC,0)) FROM TBLREREG WHERE NIDLRH=@NIDLRH AND STAREC=1 AND STAREG IN (35,65,66)
/* REGISTROS EFETIVOS DE LANCAMENTO */
SELECT @QTDEXP = COUNT(ISNULL(VALREC,0)) FROM TBLREREG WHERE NIDLRH=@NIDLRH AND STAREC=1 AND STAREG IN (35,65,66) AND NIDTRA=''
SELECT @QTD009 = COUNT(ISNULL(VALREC,0)) FROM TBLREREG WHERE NIDLRH=@NIDLRH AND STAREC=1 AND STAREG NOT IN (35,65,66)
SELECT @QTDREC = ISNULL(COUNT(*),0) FROM TBLREREG WHERE NIDLRH=@NIDLRH AND STAREC=1 GROUP BY NIDLRH

IF(@QTDREC >0 AND @QTDVAL =0)
   UPDATE TBLRECAD SET STALRE = 223, DATUPD = GETDATE() WHERE NIDLRH= @NIDLRH          
IF(@QTDREC = @QTD009)
   UPDATE TBLRECAD SET STALRE = 225, DATUPD = GETDATE() WHERE NIDLRH= @NIDLRH          
IF((@QTDREC = @QTDVAL) AND (@QTDEXP=0))
   UPDATE TBLRECAD SET STALRE = 227, STAREG = CASE WHEN ISRPOS=1 THEN 48 ELSE 99 END , DATUPD = GETDATE(), DATAPR=GETDATE()  WHERE NIDLRH= @NIDLRH          
SET @RETURN_VALUE=@QTDREC
RETURN @RETURN_VALUE   
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Carga de Lote" name="NIDLRH" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>


      <item script="true" alias="A." sql="" method="RemoveRechargeBatch" return="int" returnmode="1" procname="PRLREREGREMBAT" desc ="Remove todos os registros de item de recarga de lote e o cabeça de lote" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE = 0
BEGIN TRY
  UPDATE TBLREREG SET STAREC=0 WHERE NIDLRH = @NIDLRH          
  UPDATE TBLRECAD SET STAREC=0 WHERE NIDLRH = @NIDLRH          
  SET @RETURN_VALUE=1
END TRY
BEGIN CATCH
  SET @RETURN_VALUE=-1
END CATCH
RETURN @RETURN_VALUE
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Carga de Lote" name="NIDLRH" type="System.Int32" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="FAILALL"/>
          <return value="0" message="" error="FAILALL" />
        </returns>
      </item>

      <item script="true" alias="A." sql="" method="UpdateRechargeCard" return="int" returnmode="1" procname="PRLREREGUPDCRT" desc ="Atualiza o item de recarga de lote com as informações do cartão associado" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0
UPDATE TBLREREG 
   SET VALREC=0,DSCERR='' 
 WHERE VALREC<>1

UPDATE TBLREREG 
   SET VALREC=4,DSCERR='USUARIO INVALIDO' 
 WHERE CODCMF NOT IN (SELECT CODCMF FROM TBCADUSU WHERE STAREC=1 AND STAUSU=61)


UPDATE TBLREREG 
   SET CODCRT = C.CODCRT, ASSUSU = C.ASSUSU, VALREC = 1 
  FROM TBLREREG A
 INNER JOIN TBLRECAD B
    ON (A.NIDLRH = B.NIDLRH)
 INNER JOIN (
	  SELECT A1.USUPRO, A1.ASSUSU, A1.CODCRT, B1.CODCMF, A1.NIDCRT 
		FROM TBREGCRT (NOLOCK) A1
	   INNER JOIN TBCADUSU (NOLOCK)  B1 ON (B1.CODUSU = A1.ASSUSU)
	   WHERE B1.STAREC = 1 AND B1.STAUSU=61 AND A1.STACRT IN (109,103) AND A1.STAREC=1
 ) C
 ON (B.USUPRO = C.USUPRO AND A.CODCMF = C.CODCMF AND LTRIM(RTRIM(A.NIDCRT)) = LTRIM(RTRIM(C.NIDCRT))) 
WHERE A.VALREC=0 AND ISNULL(A.NIDCRT,'')<>''

SET @RETURN_VALUE= @@ROWCOUNT

UPDATE TBLREREG 
   SET ASSUSU = C.ASSUSU, VALREC = 1 
  FROM TBLREREG A
 INNER JOIN TBLRECAD B
    ON (A.NIDLRH = B.NIDLRH)
 INNER JOIN (
	  SELECT A1.USUPRO, A1.ASSUSU, A1.CODCRT, B1.CODCMF, A1.NIDCRT 
		FROM TBREGCRT (NOLOCK) A1
	   INNER JOIN TBCADUSU (NOLOCK)  B1 ON (B1.CODUSU = A1.ASSUSU)
	   WHERE B1.STAREC = 1 AND B1.STAUSU=61 AND A1.STACRT IN (109,103) AND A1.STAREC=1
 ) C
 ON (B.USUPRO = C.USUPRO AND A.CODCMF = C.CODCMF AND A.CODCRT = C.CODCRT) 
WHERE A.VALREC=0 

SET @RETURN_VALUE= @RETURN_VALUE + @@ROWCOUNT

UPDATE TBLREREG 
   SET CODCRT = C.CODCRT, ASSUSU = C.ASSUSU, VALREC = 1 
  FROM TBLREREG A
 INNER JOIN TBLRECAD B
    ON (A.NIDLRH = B.NIDLRH)
 INNER JOIN (
	  SELECT USUPRO, ASSUSU, CODCRT, B1.CODCMF 
		FROM TBREGCRT (NOLOCK) A1
	   INNER JOIN TBCADUSU (NOLOCK)  B1 ON (B1.CODUSU = A1.ASSUSU)
	   WHERE B1.STAREC = 1 AND B1.STAUSU=61 AND A1.STACRT IN (109,103) AND A1.STAREC=1
 ) C
 ON (B.USUPRO = C.USUPRO AND A.CODCMF = C.CODCMF) 
WHERE A.VALREC=0 AND A.CODCRT=0 AND A.ASSUSU=0

SET @RETURN_VALUE= @RETURN_VALUE + @@ROWCOUNT

UPDATE TBLREREG 
   SET VALREC= 2, DSCERR = 'CARTAO PERTENCE A OUTRO GESTOR' 
  FROM TBLREREG A
 INNER JOIN TBLRECAD B
    ON (A.NIDLRH = B.NIDLRH)
 INNER JOIN TBADMCRT C
   ON (B.USUPRO <> C.USUPRO AND A.CODCRT = C.CODCRT)
 INNER JOIN TBCADUSU D
   ON (C.ASSUSU = D.CODUSU)
WHERE VALREC=0 AND B.TIPRCG=2
AND D.STAREC=1
AND D.STAUSU=61
AND A.CODCMF = D.CODCMF
AND C.STAREC=1 AND C.STACRT IN (109,103)

UPDATE TBLREREG 
   SET VALREC= 5, DSCERR = 'CARTAO CANCELADO OU INOPERANTE' 
  FROM TBLREREG A
 INNER JOIN TBLRECAD B
    ON (A.NIDLRH = B.NIDLRH)
 INNER JOIN TBREGCRT C
   ON (B.USUPRO = C.USUPRO AND A.CODCRT = C.CODCRT)
 INNER JOIN TBCADUSU D
   ON (C.ASSUSU = D.CODUSU)
WHERE VALREC=0 AND B.TIPRCG=2
AND D.STAREC=1
AND D.STAUSU=61
AND A.CODCMF = D.CODCMF
AND C.STACRT NOT IN (109,103)

UPDATE TBLREREG 
   SET VALREC=3,DSCERR='CARTÃO NÃO ASSOCIADO' 
 WHERE VALREC = 0

/* DECURSO DE PRAZO */
 -- UPDATE TBLREREG SET STAREG = 65, VALREC=1  WHERE DATEDIFF(DAY,DATEXE,GETDATE())>1 AND STAREC=1 AND STAREG<=30

/*  DECURSO DE PRAZO */
 -- UPDATE TBLREREG SET STAREG = 66, VALREC=1 WHERE DATEDIFF(DAY,DATEXE,GETDATE())>1 AND STAREC=1 AND VALREC=4

SET @RETURN_VALUE=@@ROWCOUNT
          ]]>
        </query>
      </item>
    </methods>
  </item>

  <item create="true"  id="86" name="CRCRTASS" friendlyname="Accredited Associate Card" modelversion="3">
    <UpdateKey>key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="AccreditedAssociateCard" procname="" desc ="Seleciona o registro de Tipo de Cartão associado ao credenciado através do ID dO Credenciado e Tipo de Cartão">
        <query>
          <![CDATA[SELECT * FROM CRCRTASS (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Credenciado" name="NIDCRE" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Tipo de Cartão" name="TIPCRT" type="System.Int16" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <insertcommand key="key" exceptionparamns="'DATCAD','DATUPD'" procname="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        IF(EXISTS(SELECT 1 FROM CRCRTASS WHERE NIDCRE=@NIDCRE AND TIPCRT = @TIPCRT))
        SET @RETURN_VALUE=1
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="key" fieldreturn="NIDCRE" exceptionparamns="'DATCAD'" procname="" >
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        IF(NOT EXISTS(SELECT 1 FROM CRCRTASS WHERE NIDCRE=@NIDCRE AND TIPCRT = @TIPCRT))
        SET @RETURN_VALUE=1
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>
  </item>
  <item create="true"  id="87" name="CRCADADQ" friendlyname="Accredited Associate Acquirer" modelversion="3">
    <UpdateKey>key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="AccreditedAssociateAcquirer" procname="" desc ="Seleciona o registro de Adquirente atraves do ID do Crendenciado e o tipo de ADQUIRENTE">
        <query>
          <![CDATA[SELECT * FROM CRCADADQ (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Credenciado" name="NIDCRE" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Tipo de Adquirencia" name="TIPADQ" type="System.Int16" default="" output="" null="false"/>
        </parameters>
      </item>

    </selectcommand>
    <insertcommand key="key" exceptionparamns="'DATCAD','DATUPD'" procname="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        IF(EXISTS(SELECT 1 FROM CRCADADQ WHERE NIDCRE=@NIDCRE AND TIPADQ = @TIPADQ))
        SET @RETURN_VALUE=1
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="key" fieldreturn="NIDCRE" exceptionparamns="'DATCAD'" procname="" >
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        IF(NOT EXISTS(SELECT 1 FROM CRCADADQ WHERE NIDCRE=@NIDCRE AND TIPADQ = @TIPADQ))
        SET @RETURN_VALUE=1
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>
  </item>

  <item create="true"  id="88" name="CRCADCRE" friendlyname="Accrediteds" modelversion="3">
    <UpdateKey>key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable>SELECT TOP 1 	NIDCRE,CODUSU,CODCDO,STAREC,DATCAD,DATUPD,UPDUSU,NOMPPT,CODCPJ,CODCMF,NUMPDV,RSPTEC,RSPEML,RSPDDD,RSPTEL,PERFCH,DTAPAG,DSCOBS,TAXTED,TAXOPE,NUMIRG FROM CRCADCRE</SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <objectclass>
      <item script="true" alias="A." sql="" method="RedeCredenciada" return="int" returnmode="1" procname="" desc ="Objeto de Retenção de Informações de Redes Credenciadas" returnvalue="1">
        <query>
          <![CDATA[
DECLARE @RESULT TABLE (CODUSU INT,
NOMFAN VARCHAR(70), 
DSCEND VARCHAR(70), 
DSCCPL varchar(70),
NUMEND int,
DSCCID varchar(40),
DSCBAI varchar(40),
CODCEP varchar(8),
CODPAI int,
CODUFE char(2),
LSTCRT VARCHAR(50), 
LSTATV VARCHAR(50), 
LATITU FLOAT DEFAULT 0, 
LONGIT FLOAT DEFAULT 0,
NUMDST FLOAT DEFAULT 0)
SELECT * FROM @RESULT
        ]]>
        </query>
      </item>
    </objectclass>

    <view>
      <item script="true" alias="A." sql="" method="" return="" procname="VWCADCRE" desc ="View de Pesquisa de Credenciados">
        <query>
          <![CDATA[
SELECT
	   A.NIDCRE
      ,A.CODUSU
      ,F.NOMUSU
      ,F.NOMMAE NOMFAN
      ,F.STAUSU
      ,A.CODCDO
      ,B.NOMUSU NOMCDO
      ,A.STAREC
      ,A.DATCAD
      ,A.NOMPPT
      ,dbo.FormatCMF(A.CODCMF) CODCMF
      ,A.NUMPDV
      ,A.RSPTEC
      ,LOWER(A.RSPEML) RSPEML
	    ,dbo.FormatPhone(A.RSPDDD, A.RSPTEL) AS RSPTEL
      ,A.PERFCH
      ,A.DTAPAG
      ,A.DSCOBS
      ,A.TAXTED
      ,A.TAXOPE
      ,C.DSCTAB DSCREC
      ,ISNULL(G.DSCEND,'') DSCEND
      ,ISNULL(G.NUMEND,0) NUMEND
      ,ISNULL(G.CODPAI,0) CODPAI
      ,ISNULL(G.DSCCPL,'') DSCCPL
      ,ISNULL(G.DSCCID,'') DSCCID
      ,ISNULL(G.DSCBAI,'') DSCBAI
      ,ISNULL(G.CODUFE,'') CODUFE
      ,ISNULL(G.CODCEP,'') CODCEP
	  ,ISNULL(G.LATITU,0) LATITU
	  ,ISNULL(G.LONGIT,0) LONGIT
	  ,dbo.FormatPhone(H.NUMDDD, H.NUMTEL) AS NUMTEL
	  ,ISNULL(I.DSCEND,'') DSCMAL
	  ,dbo.Formath(1, A.NIDCRE) AS DSCADQ
	  ,dbo.Formath(2, A.NIDCRE) AS DSCTCR
	  ,dbo.Formath(5, A.NIDCRE) AS DSCATV
	  ,J.NUMBCO
	  ,J.NUMCTA
	  ,J.NUMAGE
	  ,J.NUMDVE
  FROM CRCADCRE (NOLOCK) A
 INNER JOIN TBCADUSU (NOLOCK) B
    ON (A.CODCDO = B.CODUSU)
 INNER JOIN TBTABGER (NOLOCK) C
    ON (7 = C.NUMTAB AND A.STAREC = C.KEYCOD)
 INNER JOIN TBCADUSU (NOLOCK) F
    ON (A.CODUSU = F.CODUSU)
 LEFT JOIN TBCADEND (NOLOCK) G
    ON (G.CODUSU = A.CODUSU AND 2 = G.TIPEND AND 1 = G.STAREC)
 LEFT JOIN TBCADCTO (NOLOCK) H
    ON (H.CODUSU = A.CODUSU AND H.CODEND = G.CODEND AND H.TIPCTO = 1 AND H.REGATV = 1 AND H.STAREC=1)
 LEFT JOIN TBCADEND (NOLOCK) I
    ON (I.CODUSU = A.CODUSU AND I.TIPEND = 3 AND I.REGATV = 1 AND I.STAREC=1)
 LEFT JOIN TBCADCTA (NOLOCK) J
    ON (J.CODUSU = A.CODUSU AND J.ORGCTA = 2 AND J.TIPCTA = 2 AND J.STAREC=1)

        ]]>
        </query>
      </item>
    </view>

    <!--<interface>
      <item script="false" alias="A." sql="" method="Write" return="int" returnmode="2" procname="" desc ="Insere um Credenciado e suas bases relacionadas" returnvalue="0">
        <query>
        </query>
        <parameters>
          <parameter input="true" desc ="Objeto de Retenção de Informações do Credenciado" name="model" type="AccreditedItem" default="" output="" null="false"/>
        </parameters>
      </item>

    </interface>-->

    <externals>
      <item script="false" alias="A." sql="" method="Write" return="int" returnmode="2" procname="" desc ="Insere um Credenciado e suas bases relacionadas" returnvalue="0">
        <query>
        </query>
        <parameters>
          <parameter input="true" desc ="Objeto de Retenção de Informações do Credenciado" name="model" type="AccreditedItem" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="false" alias="A." sql="" method="SelectItem" return="AccreditedItem" returnmode="2" procname="" desc ="Recupera um registro de credenciamento" returnvalue="0">
        <query>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Registro de Credenciamento" name="pNIDCRE" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>

    </externals>


    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="Accrediteds" procname="" desc ="Seleciona o registro de tipo de cartão associado ao credenciado">
        <query>
          <![CDATA[SELECT * FROM CRCADCRE (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Credenciado" name="NIDCRE" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="false" alias="A." sql="SELECT TOP 1 * FROM VWCADCRE" method="Select"  type="List" return="AccreditedQuery" procname="PRCADCRESELALL"   desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query/>
        <parameters>
          <parameter input="true" desc ="Código do Credenciador" name="CODCDO" sysnull="true" type="System.Int32" default="null" output="" null="true"/>
        </parameters>
      </item>
    </selectcommand>
    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD'" procname="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'" procname="" >
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD = GETDATE();
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>

    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRCADCRESELEST" desc ="Obtêm a lista de registros de estabelecimentos conforme os filtros aplicados">
        <query order="NIDCRE DESC, NOMFAN,DATCAD DESC" append="SELECT @PAGMAX = MAX(ISNULL(PAGNRO,0)) FROM @RESULT
SELECT A.*, @PAGMAX PAGMAX FROM @RESULT A WHERE(1=1) AND  (@PAGNRO IS NULL OR A.PAGNRO=@PAGNRO)">
          <![CDATA[
DECLARE @PAGMAX INT 
DECLARE @RESULT TABLE (
	PAGNRO SMALLINT NOT NULL,
	[NIDCRE] [int] NOT NULL,
	[CODUSU] [int] NOT NULL,
	[NOMUSU] [varchar](70) NOT NULL,
	[NOMFAN] [varchar](70) NOT NULL,
	[STAUSU] [int] NOT NULL,
	[CODCDO] [int] NOT NULL,
	[NOMCDO] [varchar](70) NOT NULL,
	[STAREC] [tinyint] NOT NULL,
	[DATCAD] [datetime] NOT NULL,
	[NOMPPT] [varchar](70) NOT NULL,
	[CODCMF] [varchar](100) NULL,
	[NUMPDV] [varchar](50) NOT NULL,
	[RSPTEC] [varchar](70) NOT NULL,
	[RSPEML] [varchar](70) NULL,
	[RSPTEL] [varchar](100) NULL,
	[PERFCH] [varchar](30) NOT NULL,
	[DTAPAG] [varchar](20) NOT NULL,
	[DSCOBS] [varchar](100) NOT NULL,
	[TAXTED] [money] NOT NULL,
	[TAXOPE] [money] NOT NULL,
	[DSCREC] [varchar](100) NOT NULL,
	[DSCEND] [varchar](70) NOT NULL,
	[NUMEND] [int] NOT NULL,
	[CODPAI] [int] NOT NULL,
	[DSCCPL] [varchar](70) NOT NULL,
	[DSCCID] [varchar](40) NOT NULL,
	[DSCBAI] [varchar](40) NOT NULL,
	[CODUFE] [char](2) NOT NULL,
	[CODCEP] [varchar](8) NOT NULL,
	[LATITU] [decimal](12, 9) NOT NULL,
	[LONGIT] [decimal](12, 9) NOT NULL,
	[NUMTEL] [varchar](100) NULL,
	[DSCMAL] [varchar](70) NOT NULL,
	[DSCADQ] [varchar](500) NULL,
	[DSCTCR] [varchar](500) NULL,
	[DSCATV] [varchar](500) NULL,
	[NUMBCO] [char](3) NULL,
	[NUMCTA] [char](11) NULL,
	[NUMAGE] [varchar](15) NULL,
	[NUMDVE] [char](1) NULL
) 
INSERT INTO @RESULT(
	PAGNRO,
	[NIDCRE],
	[CODUSU],
	[NOMUSU],
	[NOMFAN],
	[STAUSU],
	[CODCDO],
	[NOMCDO],
	[STAREC],
	[DATCAD],
	[NOMPPT],
	[CODCMF],
	[NUMPDV],
	[RSPTEC],
	[RSPEML],
	[RSPTEL],
	[PERFCH],
	[DTAPAG],
	[DSCOBS],
	[TAXTED],
	[TAXOPE],
	[DSCREC],
	[DSCEND],
	[NUMEND],
	[CODPAI],
	[DSCCPL],
	[DSCCID],
	[DSCBAI],
	[CODUFE],
	[CODCEP],
	[LATITU],
	[LONGIT],
	[NUMTEL],
	[DSCMAL],
	[DSCADQ],
	[DSCTCR],
	[DSCATV],
	[NUMBCO],
	[NUMCTA],
	[NUMAGE],
	[NUMDVE])
SELECT PAGNRO = ((((ROW_NUMBER() OVER(ORDER BY A.NIDCRE DESC))-1)/@PAGSIZ))+1
	  ,A.NIDCRE
      ,A.CODUSU
      ,F.NOMUSU
      ,F.NOMMAE NOMFAN
      ,F.STAUSU
      ,A.CODCDO
      ,B.NOMUSU NOMCDO
      ,A.STAREC
      ,A.DATCAD
      ,A.NOMPPT
      ,dbo.FormatCMF(A.CODCMF) CODCMF
      ,A.NUMPDV
      ,A.RSPTEC
      ,LOWER(A.RSPEML) RSPEML
	    ,dbo.FormatPhone(A.RSPDDD, A.RSPTEL) AS RSPTEL
      ,A.PERFCH
      ,A.DTAPAG
      ,A.DSCOBS
      ,A.TAXTED
      ,A.TAXOPE
      ,C.DSCTAB DSCREC
      ,ISNULL(G.DSCEND,'') DSCEND
      ,ISNULL(G.NUMEND,0) NUMEND
      ,ISNULL(G.CODPAI,0) CODPAI
      ,ISNULL(G.DSCCPL,'') DSCCPL
      ,ISNULL(G.DSCCID,'') DSCCID
      ,ISNULL(G.DSCBAI,'') DSCBAI
      ,ISNULL(G.CODUFE,'') CODUFE
      ,ISNULL(G.CODCEP,'') CODCEP
	  ,ISNULL(G.LATITU,0) LATITU
	  ,ISNULL(G.LONGIT,0) LONGIT
	  ,dbo.FormatPhone(H.NUMDDD, H.NUMTEL) AS NUMTEL
	  ,ISNULL(I.DSCEND,'') DSCMAL
	  ,dbo.Formath(1, A.NIDCRE) AS DSCADQ
	  ,dbo.Formath(2, A.NIDCRE) AS DSCTCR
	  ,dbo.Formath(5, A.NIDCRE) AS DSCATV
	  ,J.NUMBCO
	  ,J.NUMCTA
	  ,J.NUMAGE
	  ,J.NUMDVE
  FROM CRCADCRE (NOLOCK) A
 INNER JOIN TBCADUSU (NOLOCK) B
    ON (A.CODCDO = B.CODUSU)
 INNER JOIN TBTABGER (NOLOCK) C
    ON (7 = C.NUMTAB AND A.STAREC = C.KEYCOD)
 INNER JOIN TBCADUSU (NOLOCK) F
    ON (A.CODUSU = F.CODUSU)
 LEFT JOIN TBCADEND (NOLOCK) G
    ON (G.CODUSU = A.CODUSU AND 2 = G.TIPEND AND 1 = G.STAREC)
 LEFT JOIN TBCADCTO (NOLOCK) H
    ON (H.CODUSU = A.CODUSU AND H.CODEND = G.CODEND AND H.TIPCTO = 1 AND H.REGATV = 1 AND H.STAREC=1)
 LEFT JOIN TBCADEND (NOLOCK) I
    ON (I.CODUSU = A.CODUSU AND I.TIPEND = 3 AND I.REGATV = 1 AND I.STAREC=1)
 LEFT JOIN TBCADCTA (NOLOCK) J
    ON (J.CODUSU = A.CODUSU AND J.ORGCTA = 2 AND J.TIPCTA = 2 AND J.STAREC=1)
 INNER JOIN CRATVCRE (NOLOCK) K
    ON (K.NIDCRE = A.NIDCRE)
 INNER JOIN CRCRTASS (NOLOCK) L
    ON (L.NIDCRE = A.NIDCRE)
 INNER JOIN CRCADADQ (NOLOCK) M
    ON (M.NIDCRE = A.NIDCRE)

          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="false" desc ="Página solicitada" name="PAGNRO" type="System.Int32" sysnull="true" null="true"/>
          <parameter input="true" desc ="Código do Credenciador" name="CODCDO" sysnull="true" type="System.Int32" default="null" output="" null="true"/>
          <parameter input="true" islike="true" alias="F." desc ="Nome do Estabelecimento" name="NOMUSU" type="System.String" size="100" default="null" output="" null="true"/>
          <parameter input="true" islike="true"  alias="F." fieldname="NOMMAE" desc ="Nome Fantasia" name="NOMFAN" type="System.String" size="100" default="null" output="" null="true"/>
          <parameter input="true" islike="true" alias="B." fieldname="NOMUSU" desc ="Nome Credenciador" name="NOMCDO" type="System.String" size="100" default="null" output="" null="true"/>
          <parameter input="true" islike="true" fieldname="CODCPJ" desc ="CMF" name="CODCMF"  type="System.String" size="25" default="null" output="" null="true"/>
          <parameter input="true" islike="true" alias="G." desc ="Endereço" name="DSCEND" type="System.String" size="100" default="null" output="" null="true"/>
          <parameter input="true" islike="true" alias="G." desc ="Cidade" name="DSCCID" type="System.String" size="50" default="null" output="" null="true"/>
          <parameter input="true" islike="true" alias="G." desc ="Bairro" name="DSCBAI" type="System.String" size="50" default="null" output="" null="true"/>
          <parameter input="true" islike="true" alias="G." desc ="UF" name="CODUFE" type="System.String" size="5" default="null" output="" null="true"/>
          <parameter input="true" islike="true" alias="G." desc ="CEP" name="CODCEP" type="System.String" size="10" default="null" output="" null="true"/>
          <parameter input="true" alias="K." desc ="Código de Atividade" name="CODATV" sysnull="true" type="System.Int16"  default="null" output="" null="true"/>
          <parameter input="true" alias="L." desc ="Tipo de Cartão" name="TIPCRT" sysnull="true" type="System.Int16"  default="null" output="" null="true"/>
          <parameter input="true" alias="M." desc ="Código de Adquirência" name="TIPADQ" sysnull="true" type="System.Int16"  default="null" output="" null="true"/>
          <parameter input="true" apply="false" desc ="Tamanho da Página" name="PAGSIZ" type="System.Int32" default="50" output="50" null="false"/>
        </parameters>
      </item>
    </selectallcommand>
    <methods>
      <item script="false" alias="A." sql="" method="SelectXml"  type="XML" return="AccreditedQuery" procname="PRCADCRESELALL"   desc ="Seleciona todos os registros com base nos parâmetros fornecidos">
        <query/>
        <parameters>
          <parameter input="true" desc ="Código do Credenciador" name="CODCDO" sysnull="true" type="System.Int32" default="null" output="" null="true"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="GetAccreditedNetwork"  type="DataTableList" return="RedeCredenciada" procname="PRCADCRESELCRE"   desc ="Obtêm a lista de redes credenciadas">
        <query merge="true">
          <![CDATA[
SELECT A.CODUSU
      ,F.NOMMAE NOMFAN
      ,ISNULL(G.DSCEND,'') DSCEND
      ,ISNULL(G.NUMEND,0) NUMEND
      ,ISNULL(G.CODPAI,0) CODPAI
      ,ISNULL(G.DSCCPL,'') DSCCPL
      ,ISNULL(G.DSCCID,'') DSCCID
      ,ISNULL(G.DSCBAI,'') DSCBAI
      ,ISNULL(G.CODUFE,'') CODUFE
      ,ISNULL(G.CODCEP,'') CODCEP
	  ,ISNULL(G.LATITU,0) LATITU
	  ,ISNULL(G.LONGIT,0) LONGIT
	  ,dbo.Formath(3, A.NIDCRE) AS LSTCRT
	  ,dbo.Formath(4, A.NIDCRE) AS LSTATV
  FROM CRCADCRE (NOLOCK) A
 INNER JOIN TBCADUSU (NOLOCK) B
    ON (A.CODCDO = B.CODUSU)
 INNER JOIN TBTABGER (NOLOCK) C
    ON (7 = C.NUMTAB AND A.STAREC = C.KEYCOD)
 INNER JOIN TBTABGER (NOLOCK) D
    ON (69 = D.NUMTAB AND A.CODATV = D.KEYCOD)
 INNER JOIN TBCADUSU (NOLOCK) F
    ON (A.CODUSU = F.CODUSU)
 LEFT JOIN TBCADEND (NOLOCK) G
    ON (G.CODUSU = A.CODUSU AND 2 = G.TIPEND AND 1 = G.STAREC)
 LEFT JOIN TBCADCTO (NOLOCK) H
    ON (H.CODUSU = A.CODUSU AND H.CODEND = G.CODEND AND H.TIPCTO = 1 AND H.REGATV = 1 AND H.STAREC=1)
 LEFT JOIN TBCADEND (NOLOCK) I
    ON (I.CODUSU = A.CODUSU AND I.TIPEND = 3 AND I.REGATV = 1 AND I.STAREC=1)
 LEFT JOIN TBCADCTA (NOLOCK) J
    ON (J.CODUSU = A.CODUSU AND J.ORGCTA = 2 AND J.TIPCTA = 2 AND J.STAREC=1)
 INNER JOIN CRCRTASS (NOLOCK) K
    ON (K.NIDCRE = A.NIDCRE)
 WHERE isnull(G.latitu,0) <>0  and isnull(G.longit,0) <>0  ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" islike="true" alias="F." fieldname="NOMMAE" desc ="Nome Fantasia" name="NOMFAN" sysnull="" type="System.String" size="70" default="" output="" null="true"/>
          <parameter input="true" apply="true" islike="true" alias="G." desc ="Cidade" name="DSCCID"  type="System.String" size="45" default="" output="" null="true"/>
          <parameter input="true" apply="true" islike="true" alias="G." desc ="Bairro" name="DSCBAI"  type="System.String" size="45" default="" output="" null="true"/>
          <parameter input="true" apply="true" islike="true" alias="G." desc ="Cep" name="CODCEP" type="System.String" size="10" default="" output="" null="true"/>
          <parameter input="true" apply="true" alias="G." desc ="UF" name="CODUFE"  type="System.String" size="2" default="" output="" null="true"/>
          <parameter input="true" apply="true" islike="true" alias="G." desc ="Endereço" name="DSCEND"  type="System.String" size="80" default="" output="" null="true"/>
          <parameter input="true" apply="true" alias="A." desc ="Código de Atividade" name="CODATV" sysnull="true" type="System.Int16" default="null" output="" null="true"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="GetNetworkLocalization"  type="DataTableList" return="RedeCredenciada" procname="PRCADCRESELLOC"   desc ="Obtêm a lista de redes com base em umn localização inicial">
        <query merge="true">
          <![CDATA[
SELECT A.CODUSU
      ,F.NOMMAE NOMFAN
      ,ISNULL(G.DSCEND,'') DSCEND
      ,ISNULL(G.NUMEND,0) NUMEND
      ,ISNULL(G.CODPAI,0) CODPAI
      ,ISNULL(G.DSCCPL,'') DSCCPL
      ,ISNULL(G.DSCCID,'') DSCCID
      ,ISNULL(G.DSCBAI,'') DSCBAI
      ,ISNULL(G.CODUFE,'') CODUFE
      ,ISNULL(G.CODCEP,'') CODCEP
	  ,ISNULL(G.LATITU,0) LATITU
	  ,ISNULL(G.LONGIT,0) LONGIT
	  ,dbo.Formath(3, A.NIDCRE) AS LSTCRT
	  ,dbo.Formath(4, A.NIDCRE) AS LSTATV
	  ,dbo.Distance(@LATINI,@LONINI,g.latitu, g.longit,2)*1000 AS NUMDST
  FROM CRCADCRE (NOLOCK) A
 INNER JOIN TBCADUSU (NOLOCK) B
    ON (A.CODCDO = B.CODUSU)
 INNER JOIN TBTABGER (NOLOCK) C
    ON (7 = C.NUMTAB AND A.STAREC = C.KEYCOD)
 INNER JOIN TBTABGER (NOLOCK) D
    ON (69 = D.NUMTAB AND A.CODATV = D.KEYCOD)
 INNER JOIN TBCADUSU (NOLOCK) F
    ON (A.CODUSU = F.CODUSU)
 LEFT JOIN TBCADEND (NOLOCK) G
    ON (G.CODUSU = A.CODUSU AND 2 = G.TIPEND AND 1 = G.STAREC)
 LEFT JOIN TBCADCTO (NOLOCK) H
    ON (H.CODUSU = A.CODUSU AND H.CODEND = G.CODEND AND H.TIPCTO = 1 AND H.REGATV = 1 AND H.STAREC=1)
 LEFT JOIN TBCADEND (NOLOCK) I
    ON (I.CODUSU = A.CODUSU AND I.TIPEND = 3 AND I.REGATV = 1 AND I.STAREC=1)
 LEFT JOIN TBCADCTA (NOLOCK) J
    ON (J.CODUSU = A.CODUSU AND J.ORGCTA = 2 AND J.TIPCTA = 2 AND J.STAREC=1)
 INNER JOIN CRATVCRE (NOLOCK) K
    ON (K.NIDCRE = A.NIDCRE)
 INNER JOIN CRCRTASS (NOLOCK) L
    ON (L.NIDCRE = A.NIDCRE)
 INNER JOIN CRCADADQ (NOLOCK) M
    ON (M.NIDCRE = A.NIDCRE)
WHERE isnull(G.latitu,0) <>0  and isnull(G.longit,0) <>0 
 AND (dbo.Distance(@LATINI,@LONINI,g.latitu, g.longit,2)*1000)< @ARECOB
 ]]>
        </query>
        <parameters>
          <parameter input="true" apply="false" desc ="Latitude inicial" name="LATINI" sysnull="" type="System.Double" default="" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Longitude inicial" name="LONINI" sysnull="" type="System.Double" default="" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Area de Cobertura" name="ARECOB" sysnull="" type="System.Double" default="" output="" null="false"/>
          <parameter input="true" islike="true" alias="G." desc ="Endereço" name="DSCEND" type="System.String" size="100" default="" output="" null="true"/>
          <parameter input="true" islike="true" alias="G." desc ="Cidade" name="DSCCID" type="System.String" size="50" default="" output="" null="true"/>
          <parameter input="true" islike="true" alias="G." desc ="Bairro" name="DSCBAI" type="System.String" size="50" default="" output="" null="true"/>
          <parameter input="true" islike="true" alias="G." desc ="UF" name="CODUFE" type="System.String" size="5" default="" output="" null="true"/>
          <parameter input="true" islike="true" alias="G." desc ="CEP" name="CODCEP" type="System.String" size="10" default="" output="" null="true"/>
          <parameter input="true" alias="K." desc ="Código de Atividade" name="CODATV" sysnull="true" type="System.Int16"  default="" output="" null="true"/>
          <parameter input="true" alias="L." desc ="Tipo de Cartão" name="TIPCRT" sysnull="true" type="System.Int16"  default="" output="" null="true"/>
          <parameter input="true" alias="M." desc ="Código de Adquirência" name="TIPADQ" sysnull="true" type="System.Int16"  default="" output="" null="true"/>
        </parameters>
      </item>    
    </methods>
  </item>

  <item create="true"  id="88" name="TPPOSTRA" friendlyname="SalesRecordTransactions" modelversion="3">
    <UpdateKey>key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <selectcommand>
      <item script="true" alias="A." sql="SELECT TOP 1 * FROM TPPOSTRA"  type="List" method="Select" return="SalesRecordTransactions" procname="PRPOSTRASEL" desc ="Seleciona as transações">
        <query>
          <![CDATA[ SELECT * FROM TPPOSTRA (NOLOCK) WHERE INDPRO=1 AND INDLCD=0]]>
        </query>
      </item>
      <item script="true" alias="A." sql="SELECT TOP 1 * FROM TPPOSTRA"  type="" method="Select" return="SalesRecordTransactions" procname="PRPOSTRASELTID" desc ="Seleciona a transação informada">
        <query>
          <![CDATA[ SELECT * FROM TPPOSTRA (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da transacao" name="NUMTID" size="25" type="System.String" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Indicador de Processamento" name="INDPRO" type="System.Byte" default="1" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD'" procname="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'" procname="" >
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>

    <methods>
      <item script="true" alias="A." sql="" method="UpdateImportData" return="int" returnmode="2" procname="PRPOSTRAUPDIMP" desc ="Atualiza as referências de dados da importação de vendas Infinite" returnvalue="0">
        <query>
          <![CDATA[
UPDATE TPPOSTRA SET INDEXI=0, NIDRVM=0,STAREC=1, CODBND=0, INDREG=1 WHERE INDPRO=1
UPDATE TPPOSDTL SET INDEXI=0, NIDRVM=0,REFRVM=0,STAREC=1, CODBND=0, INDREG=0 WHERE INDPRO=1
/* INDICADOR DE PARCELAMENTO */
UPDATE TPPOSDTL SET INDREG=3 WHERE CODLRF=2 AND INDPRO=1
  
UPDATE TPPOSTRA
   SET CODWAL =B.CODWAL
  FROM TPPOSTRA 
 INNER JOIN (SELECT DISTINCT CODCMF, CODWAL FROM TPPOSDTL) B
    ON TPPOSTRA.CODCMF = B.CODCMF
 WHERE LTRIM(RTRIM(TPPOSTRA.CODWAL))=''	
  
UPDATE TPPOSTRA
   SET INDEXI=2,
	   NIDRVM = B.NIDRVM,
	   INDREG = B.INDREG
  FROM TPPOSTRA (NOLOCK) A
 INNER JOIN (SELECT NIDRVM, INDREG, CODCMF, NUMTID, CODWAL  
  FROM DBPLIVN.dbo.TBREGPOS (NOLOCK) 
 WHERE USROWN=1000 
   AND INDREG IN (1,2)) B
    ON (    A.NUMTID = B.NUMTID
	     AND A.CODWAL = B.CODWAL
		 AND A.CODCMF = B.CODCMF)
 WHERE A.INDPRO=1
          
UPDATE TPPOSDTL
   SET INDEXI=2,
	   NIDRVM = B.NIDRVM,
	   INDREG = B.INDREG,
	   REFRVM = B.REFRVM
  FROM TPPOSDTL (NOLOCK) A
 INNER JOIN (SELECT NIDRVM, REFRVM, INDREG, NUMTID, CODWAL,	NUMPCL,	CODCMF
				       FROM dbplivn.dbo.TBREGPOS 
				      WHERE USROWN=1000 AND INDREG=3) B
		ON (    A.NUMTID = B.NUMTID
			AND A.CODWAL = B.CODWAL
			AND A.NUMPCL = B.NUMPCL
			AND A.CODCMF = B.CODCMF)
 WHERE A.CODLRF=2 AND A.INDPRO=1

UPDATE TPPOSTRA
   SET INDREG=2
  FROM TPPOSTRA (NOLOCK) A
 INNER JOIN TPPOSDTL (NOLOCK) B 
    ON (      A.NUMTID = B.NUMTID
	      AND A.CODCMF = B.CODCMF
 	      AND 2 = B.CODLRF)
 WHERE B.INDPRO=1

UPDATE TPPOSTRA
   SET STAREC = B.NUMREF
  FROM TPPOSTRA (NOLOCK) A
 INNER JOIN dbplivn.dbo.TBTABGER (NOLOCK) B
    ON (64 = B.NUMTAB AND A.DSCSTO = LTRIM(RTRIM(B.DSCTAB)))
WHERE B.STAREC=1 AND A.INDPRO=1

UPDATE TPPOSTRA
   SET CODBND = B.KEYCOD
  FROM TPPOSTRA (NOLOCK) A
 INNER JOIN dbplivn.dbo.TBTABGER (NOLOCK) B
    ON (63 = B.NUMTAB AND UPPER(LTRIM(RTRIM(A.DSCPRD))) = UPPER(LTRIM(RTRIM(B.DSCTAB))))
 WHERE B.STAREC=1 AND A.INDPRO=1

UPDATE TPPOSDTL
   SET STAREC = B.NUMREF
  FROM TPPOSDTL (NOLOCK) A
 INNER JOIN dbplivn.dbo.TBTABGER (NOLOCK) B
    ON (64 = B.NUMTAB AND UPPER(LTRIM(RTRIM(A.DSCSTO))) = UPPER(LTRIM(RTRIM(B.DSCTAB))))
  WHERE B.STAREC=1 AND A.INDPRO=1

UPDATE TPPOSDTL
   SET CODBND = B.KEYCOD
  FROM TPPOSDTL (NOLOCK) A
 INNER JOIN dbplivn.dbo.TBTABGER (NOLOCK) B
    ON (63 = B.NUMTAB AND UPPER(LTRIM(RTRIM(A.DSCPRD))) = UPPER(LTRIM(RTRIM(B.DSCTAB))))
 WHERE B.STAREC=1 AND A.INDPRO = 1
  SELECT 1 AS RETURN_VALUE
          
          
          ]]>
        </query>
      </item>
    </methods>
  </item>
  <item create="true"  id="88" name="TPPOSDTL" friendlyname="SalesRecordDetail" modelversion="3">
    <UpdateKey>key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <extendedmodel>SELECT TOP 1 A.*, MODCAP, DATMOV, NOMUSU FROM TPPOSDTL (NOLOCK) A INNER JOIN TPPOSTRA (NOLOCK) B ON (A.NUMTID = B.NUMTID AND A.CODCMF = B.CODCMF) WHERE CODLRF=2</extendedmodel>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <selectcommand>
      <item script="true" alias="A." sql="SELECT TOP 1 * FROM TPPOSDTL"  type="List" method="Select" return="SalesRecordDetail" procname="PRPOSDTLSEL" desc ="Seleciona as transações">
        <query>
          <![CDATA[ SELECT * FROM TPPOSDTL (NOLOCK) A WHERE CODLRF=2 AND INDPRO=1 AND INDLCD=0]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da transacao" name="NUMTID" size="25" type="System.String" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="SELECT TOP 1 * FROM TPPOSDTL"  type="List" method="Select" return="SalesRecordDetail" procname="PRPOSDTLSELTID" desc ="Seleciona a transação de acordo com o status de inscrição de Registro">
        <query>
          <![CDATA[ SELECT * FROM TPPOSDTL (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da transacao" name="NUMTID" size="25" type="System.String" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Indicador de status de situação de inscrição de parcelas" name="CODLRF" type="System.Byte" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="SELECT TOP 1 A.*, MODCAP, DATMOV, NOMUSU FROM TPPOSDTL (NOLOCK) A INNER JOIN TPPOSTRA (NOLOCK) B ON (A.NUMTID = B.NUMTID AND A.CODCMF = B.CODCMF) WHERE CODLRF=2"  type="List" method="Select" return="SalesRecordDetail" procname="PRPOSDTLSELALL" desc ="Seleciona todas as transações de detalhamento de importação de vendas Infinite">
        <query>
          <![CDATA[ SELECT A.*, MODCAP, DATMOV, NOMUSU FROM TPPOSDTL (NOLOCK) A INNER JOIN TPPOSTRA (NOLOCK) B  ON (A.NUMTID = B.NUMTID AND A.CODCMF = B.CODCMF) WHERE CODLRF=2 AND A.INDEXI=0]]>
        </query>
      </item>

      <item script="true" alias="A." sql="SELECT TOP 1 * FROM TPPOSDTL (NOLOCK) A"  type="" method="GetRecord" return="SalesRecordDetail" procname="PRPOSDTLGETTID" desc ="Seleciona a transação de acordo com o status de processamento do registro">
        <query>
          <![CDATA[ SELECT * FROM TPPOSDTL (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da transacao" name="NUMTID" size="25" type="System.String" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Indicador Processamento do Registro" name="INDPRO" type="System.Byte" default="" output="" null="false"/>
        </parameters>
      </item>

    </selectcommand>

    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD'" procname="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'" procname="" >
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>
  </item>


  <item create="true"  id="89" name="TBIMPCAD" friendlyname="Import Control" modelversion="3">
    <UpdateKey>identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>


    <interface>
      <item script="false" alias="A." sql="" method="IndividualRecharge" return="int" returnmode="2" procname="" desc ="Efetua a recarga individual de uma transferencia para TED, assume o código 15 de liberação de registro (Débito em Conta Corrente)" returnvalue="0">
        <query>
        </query>
        <parameters>
          <parameter input="true" desc ="Informações do lote" name="header" type="ImportControl" default="" output="" null="false"/>
          <parameter input="true" desc ="Informações do Item" name="item" type="ImportControlItem" default="" output="" null="false"/>
          <parameter input="true" desc ="Logde Gravação de Processamento" name="Log" type="MazeFire.Logs.LogWriter" default="" output="" null="false"/>
        </parameters>
      </item>

    </interface>

    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="ImportControl" procname="" desc ="Seleciona o registro de importação de de acordo com o ID do Registro de Importação">
        <query>
          <![CDATA[SELECT * FROM TBIMPCAD (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Importação" name="NIDIMH" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD'" procname="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'" procname="" >
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>
    <methods>
      <item script="true" alias="A." sql="" method="ChangeStatusBatch" return="int" returnmode="1" procname="PRIMPCADAPRBAT" desc ="Atualiza o registro de aprovação do cabeça de lote e seus respectivos itens" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE = 0       
DECLARE @UPDITE TINYINT 
DECLARE @NIDBOL INT=0
IF(@NIDIMH=0)
	SET @RETURN_VALUE=-2
IF(@USUAPR=0)
	SET @RETURN_VALUE=-3



BEGIN TRANSACTION
  BEGIN TRY
    IF(@RETURN_VALUE=0 AND @ACTOPE=3)
        BEGIN
          UPDATE TBIMPCAD 
             SET STAREC=13, 
                 UPDUSU=@USUAPR,
                 DATUPD=GETDATE()
           WHERE NIDIMH=@NIDIMH 
  	       IF(@@ERROR=0)
			      BEGIN
			        UPDATE TBIMPREG 
                 SET STAREC=13, 
                     UPDUSU=@USUAPR,
                     DATUPD=GETDATE() 
               WHERE NIDIMH = @NIDIMH
               
			        IF(@@ERROR=0)                  
					      BEGIN
						      SELECT @NIDBOL = ISNULL(NIDBOL,0) FROM TBIMPCAD (NOLOCK) WHERE NIDIMH=@NIDIMH
						      IF(@NIDBOL>0)
							      BEGIN
								      UPDATE TBREGBOL SET STAREC= 13, UPDUSU = @USUAPR, DATUPD=GETDATE() WHERE NIDBOL=@NIDBOL
								      SET @RETURN_VALUE = 1;
							      END
						    ELSE
						        SET @RETURN_VALUE = 1;
					    END
				    END
        END
    IF(@RETURN_VALUE=0 AND @ACTOPE=1)
        BEGIN
          IF(@STAREG=5)
             BEGIN
                UPDATE TBIMPCAD 
                   SET DATAPR=GETDATE(), 
                       USUAPR=@USUAPR, 
                       STAREG=@STAREG,
                       DATUPD=GETDATE(),
                       UPDUSU=@USUAPR
                 WHERE NIDIMH=@NIDIMH AND STAREC=1
				         IF(@@ERROR=0)
					        BEGIN
						        UPDATE TBIMPREG 
                       SET STAREG=@STAREG 
                     WHERE NIDIMH = @NIDIMH AND STAREC=1
						        SET @RETURN_VALUE = 1;
					        END
             END
          ELSE
             BEGIN
                UPDATE TBIMPCAD 
                   SET STAREG=@STAREG,
                       DATUPD=GETDATE(),
                       UPDUSU=@USUAPR
                 WHERE NIDIMH=@NIDIMH AND STAREC=1
				         IF(@@ERROR=0)
					          BEGIN
                        SELECT @UPDITE = ISNULL(UPDITE,0) FROM TBTRAREC (NOLOCK) WHERE STAREC=1 AND TIPPRO= 2 AND STAREG=@STAREG                    
						            UPDATE TBIMPREG 
                           SET STAREG=@UPDITE 
                         WHERE NIDIMH = @NIDIMH AND STAREC=1 AND @UPDITE>0
						            SET @RETURN_VALUE = 1;
					          END
			       END
        END
  END TRY
  BEGIN CATCH
    SET @RETURN_VALUE=-1;
    IF @@TRANCOUNT > 0  
       ROLLBACK TRANSACTION;  
  END CATCH
  
IF @@TRANCOUNT > 0  
    COMMIT TRANSACTION;    
   
RETURN @RETURN_VALUE

          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Importacao de Lote" name="NIDIMH" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="ID do Usuário Aprovador" name="USUAPR" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Status do Registro" name="STAREG" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código da Operação" name="ACTOPE" type="System.Byte" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="APPROVALROLLBACKED"/>
          <return value="-2" message="" error="APPROVALWITHOUTID"/>
          <return value="-3" message="" error="APPROVALWITHOUTUSER" />
          <return value="-4" message="" error="APPROVALREFUSED" />
        </returns>
      </item>
      <item script="true" alias="A." sql="" method="ChangeStatusPermission" return="int" returnmode="1" procname="PRIMPCADHASPRM" desc ="Verifica se o usuário tem permissão de alteração de status do lote" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=1;          
DECLARE @CODUSU INT = 0
IF( NOT ( EXISTS (SELECT 1 FROM TBUSUACE WHERE CODUSU=@USUAPR AND CODACE = 1) ) )
    BEGIN
        SELECT @CODUSU = CODUSU FROM TBIMPCAD WHERE NIDIMH=@NIDIMH
        IF(@CODUSU<>@USUAPR)
          SET @RETURN_VALUE=-1
    END
RETURN @RETURN_VALUE   
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Controle de Importação" name="NIDIMH" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="ID do Usuário Aprovador" name="USUAPR" type="System.Int32" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="APPROVALREFUSED" />
        </returns>
      </item>
    </methods>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRIMPCADSELALL" desc ="Seleciona todos os registros de Transferencia de lote TED do usuário">
        <query>
          <![CDATA[
SELECT A.NIDIMH,A.STAREC,STAREG,CONVERT(VARCHAR,A.DATCAD,103) DATCAD,CONVERT(VARCHAR,DATUPD,103) DATUPD
      ,A.UPDUSU,NIDLIM,QTDREG,VLRTOT,STALRE,NUMIPA,REGLOC,CODUSU
      ,FILNAM,USUPRO,CONVERT(VARCHAR,DATAPR,103) DATAPR
      ,USUAPR,VLRSAL,NIDBOL,NIDTRA,NUMITE,DSCERR
      ,CODFNL,CONVERT(VARCHAR,DATEXE,103) DATEXE
      ,ISNULL(H.NUMREC,0) APLDEL, A.ORGINC
		,ISNULL(B.DSCTAB,'') DSCREC
		,ISNULL(C.DSCTAB,'') DSCREG 
		,ISNULL(D.DSCTAB,'') DSCFNL   
		,ISNULL(E.DSCSTA,'') DSCSTA   
  FROM TBIMPCAD (NOLOCK) A
 INNER JOIN TBTABGER (NOLOCK) B 
    ON (7 = B.NUMTAB AND A.STAREC = B.KEYCOD)
 INNER JOIN TBTABGER (NOLOCK) C 
    ON (70 = C.NUMTAB AND A.STAREG = C.KEYCOD)
 INNER JOIN TBTABGER (NOLOCK) D 
    ON (305 = D.NUMTAB AND A.CODFNL = D.KEYTXT)
 INNER JOIN TBCADSTA (NOLOCK) E 
    ON (A.STALRE = E.CODSTA)          
 LEFT JOIN (SELECT NIDIMH, COUNT(*) NUMREC FROM TBIMPREG (NOLOCK) WHERE STAREG>=35 GROUP BY NIDIMH) H 
    ON (A.NIDIMH = H.NIDIMH)          
WHERE A.STAREC > 0
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Origem da Inclusão" name="ORGINC" type="System.Byte" default="1" output="" null="false"/>
        </parameters>
      </item>

      <item reference="0" script="true" alias="A." sql="" type="" method="RecordsToBeLaunched" return="DataTable" procname="PRIMPCADGETLAN" desc ="Obtêm a lista de registros a serem efetuadas as transferencias">
        <query>
          <![CDATA[
SELECT *, B.CODPRO, CASE WHEN (A.CODUSU=54) THEN cast(1 as bit) ELSE (cast(0 as bit)) END AS OMTSLD 
  FROM TBIMPCAD (NOLOCK) A 
 INNER JOIN TBUSUPRO (NOLOCK) B
    ON (A.USUPRO = B.USUPRO)
 WHERE CONVERT(VARCHAR, DATEXE,112) <=CONVERT(VARCHAR, GETDATE(),112) 
   AND STAREG = 15          
   AND A.STAREC = 1
   AND A.NIDTRA='']]>
        </query>
      </item>

    </selectallcommand>
  </item>
  <item create="true"  id="90" name="TBIMPREG" friendlyname="Import Control Item" modelversion="3">
    <UpdateKey>identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="ImportControlItem" procname="" desc ="Seleciona o registro de recarga de lote item de acordo com o ID do Registro de Carga">
        <query>
          <![CDATA[SELECT * FROM TBIMPREG (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Item de Registro de Importação" name="NIDIMI" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD'" procname="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'" procname="" >
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="" desc ="Seleciona todos os itens de Importação de TED de acordo com o lote informado">
        <query>
          <![CDATA[
	SELECT A.NIDIMI, 
	       A.NIDIMH, 
		   A.STAREC, 
		   A.STAREG,
		   A.UPDUSU, 
		   CONVERT(VARCHAR(10), A.DATCAD,103) DATCAD,
		   CONVERT(VARCHAR(10), A.DATEXE,103) DATEXE,
       A.NIDCRT, A.VLRMOV, A.ASSUSU, A.EXTNOM,
       A.EXTREF, 
       DBO.FORMATCMF(A.CODCMF) CODCMF, 
       A.NUMBCO,
       A.NUMAGE,
       A.DIGAGE,
       A.NUMCTA,
       A.NUMDVE,
       A.CODCRT, 
       A.VALREC,
       A.NIDTRA, 
       A.NUMITE, 
       DSCERR = LTRIM(RTRIM(A.DSCERR))+ ' ' + LTRIM(RTRIM(G.DSCERR)), 
       ISNULL(B.DSCTAB,'') AS DSCREC
	     ,ISNULL(C.LGNUSU,'') AS LGNUSU
	     ,ISNULL(E.NOMUSU,'') AS NOMUSU
	     ,DBO.NUMEROCARTAOX(F.NUMCRT) AS DSCCRT
	     ,D.DSCSTA 
       ,I.DSCTAB DSCREG
       ,G.NIDBOL
	   ,ISNULL(H.STABOR,0) STABOR
  FROM TBIMPREG (NOLOCK) A
 INNER JOIN TBTABGER (NOLOCK) B
    ON (7 = B.NUMTAB AND A.STAREC = B.KEYCOD)
 INNER JOIN TBTABGER (NOLOCK) I
    ON (70 = I.NUMTAB AND A.STAREG = I.KEYCOD)
  LEFT JOIN TBCADUSU (NOLOCK) C
    ON (A.UPDUSU = C.CODUSU)
 INNER JOIN TBIMPCAD (NOLOCK) G
    ON (A.NIDIMH = G.NIDIMH AND @ORGINC = G.ORGINC)
 INNER JOIN TBCADSTA (NOLOCK) D
    ON (G.STALRE = D.CODSTA)
  LEFT JOIN TBCADUSU (NOLOCK) E
    ON (A.ASSUSU = E.CODUSU)
  LEFT JOIN TBREGCRT (NOLOCK) F
    ON (A.CODCRT = F.CODCRT)
  LEFT JOIN (SELECT DISTINCT NIDTRA, STABOR FROM TBREGCCR (NOLOCK) WHERE STABOR >0 AND IDEPRE>0 AND STAREC=1) H
    ON (H.NIDTRA = A.NIDTRA)
 WHERE A.STAREC >0
          
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Importação" name="NIDIMH" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Origem da Inclusão" name="ORGINC" type="System.Byte" default="1" output="" null="false"/>
        </parameters>

      </item>

      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRIMPREGSELITE" desc ="Seleciona todos os itens de Importação de TED de acordo com o lote informado">
        <query>
          <![CDATA[
SELECT G.NIDIMI, 
       G.NIDIMH, 
		   G.STAREC, 
		   G.STAREG,
		   G.UPDUSU, 
		   CONVERT(VARCHAR(10), G.DATCAD,103) DATCAD,
		   CONVERT(VARCHAR(10), G.DATEXE,103) DATEXE,
       G.VLRMOV, 
		   G.EXTNOM,
       G.EXTREF, 
       DBO.FORMATCMF(G.CODCMF) CODCMF, 
       G.NUMBCO,
       G.NUMAGE,
       G.DIGAGE,
       G.NUMCTA,
       G.NUMDVE,
       G.VALREC,
       G.NIDTRA, 
       G.NUMITE, 
       A.DSCERR, 
       ISNULL(B.DSCTAB,'') AS DSCREC
	     ,ISNULL(C.LGNUSU,'') AS LGNUSU
	     ,D.DSCSTA 
       ,I.DSCTAB DSCREG
  FROM TBIMPCAD (NOLOCK) A
 INNER JOIN TBIMPREG (NOLOCK) G
    ON (G.NIDIMH = A.NIDIMH)
 INNER JOIN TBTABGER (NOLOCK) B
    ON (7 = B.NUMTAB AND A.STAREC = B.KEYCOD)
 INNER JOIN TBTABGER (NOLOCK) I
    ON (70 = I.NUMTAB AND A.STAREG = I.KEYCOD)
 INNER JOIN TBCADSTA (NOLOCK) D
    ON (A.STALRE = D.CODSTA)
  LEFT JOIN TBCADUSU (NOLOCK) C
    ON (A.UPDUSU = C.CODUSU)
 WHERE A.STAREC >0
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Origem da Inclusão" name="ORGINC" type="System.Byte" default="1" output="" null="false"/>
          <parameter input="true" apply="false" desc ="Status do Processamento" name="STAREG" type="System.Byte" sysnull="true" default="null" output="" null="true"/>
        </parameters>

      </item>

      <item reference="0" script="true" alias="A." sql="" type="" method="Select" return="DataTable" procname="PRIMPREGLSTSTA" desc ="Obtêm a lista de registros financeiros de acordo com o status">
        <query>
          <![CDATA[
SELECT A.*, B.CODUSU, B.USUPRO, C.CODPRO  
  FROM TBIMPREG (nolock) a
 INNER JOIN TBIMPCAD  (nolock) b
    on (a.NIDIMH = b.NIDIMH)
 INNER JOIN TBUSUPRO  (nolock) c
    ON (B.USUPRO = C.USUPRO)
 WHERE a.valrec=1
   AND A.STAREC=1
   AND a.nidcta>0
      ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Status do Registro" name="STAREG" type="System.Byte" default="" output="" null="false"/>
        </parameters>
      </item>

      <item reference="0" script="true" alias="A." sql="" type="" method="RecordsToBeLaunched" return="DataTable" procname="PRIMPREGLSTLAN" desc ="Obtêm a lista de registros a serem efetuadas as transferencias">
        <query>
          <![CDATA[

IF(@STAREG IS NULL)
  SET @STAREG=30
         
SELECT NIDIMI,A.NIDIMH,A.STAREC,A.STAREG
      ,A.DATEXE,NIDCRT,A.NIDCTA,VLRMOV
      ,ASSUSU,EXTNOM,EXTREF,A.CODCMF
      ,CODCRT,VALREC,A.NIDTRA,A.NUMITE
      ,A.DSCERR,A.TIPCTA,DSCMAL,A.NUMBCO
      ,A.NUMAGE,DIGAGE,A.NUMCTA,A.NUMDVE
      ,NIDCCR,E.CODPRO, D.CODUSU, D.CODFNL, CASE WHEN (D.CODUSU=54) THEN cast(1 as bit) ELSE (cast(0 as bit)) END AS OMTSLD
FROM TBIMPREG (NOLOCK) A 
INNER JOIN TBCADCTA (NOLOCK) B 
   ON (A.NIDCTA = B.NIDCTA) 
INNER JOIN TBTIPCTA (NOLOCK) C 
   ON (B.TIPCTA = C.TIPCTA) 
INNER JOIN TBIMPCAD (NOLOCK) D 
   ON (A.NIDIMH = D.NIDIMH) 
INNER JOIN TBUSUPRO (NOLOCK) E 
   ON (D.USUPRO = E.USUPRO) 
WHERE A.VALREC = 1 
  AND A.NIDTRA = '' 
  AND C.TIPEXT IN ('CC','PP')
  AND B.STACTA = 250  
  AND CAST(A.DATEXE AS INT) <= CAST(GETDATE() AS INT)
  AND A.STAREG=@STAREG          
  ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Status do Registro" name="STAREG" type="System.Byte" default="30" output="" null="false"/>
        </parameters>
      </item>
    </selectallcommand>

    <methods>
      <item script="true" alias="A." sql="" method="RemoveImportBatch" return="int" returnmode="1" procname="PRIMPREGEMBAT" desc ="Remove os registros de Item e Cabeça de Lote de Importação de TED" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE = 0
BEGIN TRY
  UPDATE TBIMPREG SET STAREC=0, UPDUSU=11 WHERE NIDIMH = @NIDIMH          
  UPDATE TBIMPCAD SET STAREC=0, UPDUSU=11 WHERE NIDIMH = @NIDIMH          
  SET @RETURN_VALUE=1
END TRY
BEGIN CATCH
  SET @RETURN_VALUE=-1
END CATCH
RETURN @RETURN_VALUE
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Importação" name="NIDIMH" type="System.Int32" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="FAILALL"/>
          <return value="0" message="" error="FAILALL" />
        </returns>
      </item>

      <item script="true" alias="A." sql="" method="UpdateImportAccounts" return="int" returnmode="1" procname="PRIMPREGUPDACT" desc ="Atualiza as contas externas não existente no cadastro" returnvalue="1">
        <query>
          <![CDATA[
    SET @RETURN_VALUE=0
UPDATE TBIMPREG
   SET ASSUSU = B.CODUSU
  FROM TBIMPREG A
 INNER JOIN TBCADUSU (NOLOCK) B
    ON (A.CODCMF = B.CODCMF)
 WHERE  A.STAREC= 1 
   AND  B.STAREC= 1
   AND B.STAUSU = 61
   AND A.NIDCTA = 0
   AND A.ASSUSU = 0
   AND A.STAREG = 15

/*
 * Conta vinculada ao usuário solicitante
 */
UPDATE TBIMPREG
   SET ASSUSU = B.CODUSU
  FROM TBIMPREG A
 INNER JOIN TBIMPCAD B
    ON (A.NIDIMH = B.NIDIMH)
 WHERE A.STAREC= 1 
   AND B.STAREC= 1
   AND A.ASSUSU = 0
   AND B.STAREG = 15
   AND A.TIPCTA > 1
   


INSERT INTO TBCADCTA (NUMAGE,NUMBCO,NUMCTA,NUMDVE,ORGCTA,STAREC,CODUSU,TIPCTA,UPDUSU,STACTA,DATVAL,DATINI,VLRLIM,APLTRF,TIPBNF,CODCMF,NOMBNF)
SELECT  DISTINCT  LTRIM(RTRIM(NUMAGE)) + LTRIM(RTRIM(DIGAGE)) AS NUMAGE
           ,LTRIM(RTRIM(NUMBCO))
           ,LTRIM(RTRIM(NUMCTA))
           ,LTRIM(RTRIM(NUMDVE))
           ,2 AS ORGCTA
           ,1 AS STAREC
           ,ASSUSU
           ,TIPCTA
           ,ASSUSU
           ,250 AS STACTA
           ,DATEADD(dd,730,GETDATE())
           ,GETDATE()
           ,1000000
           ,1
           ,2
           ,LTRIM(RTRIM(CODCMF))
           ,LTRIM(RTRIM(EXTNOM)) AS NOMBNF
FROM TBIMPREG (NOLOCK) A
 WHERE A.NIDCTA=0 
   AND A.ASSUSU>0 
   AND A.TIPCTA > 1
   AND A.STAREC=1
   AND A.STAREG = 15
   AND LTRIM(RTRIM(A.NUMCTA))<>''
AND LTRIM(RTRIM(A.NUMAGE)) + LTRIM(RTRIM(A.DIGAGE)) + LTRIM(RTRIM(A.NUMBCO)) + LTRIM(RTRIM(A.NUMCTA)) + LTRIM(RTRIM(A.NUMDVE)) +'2' + CAST(A.TIPCTA AS CHAR(1)) + RIGHT('000000' + CAST (A.ASSUSU AS VARCHAR(6)),6)
NOT IN (SELECT LTRIM(RTRIM(NUMAGE))+LTRIM(RTRIM(NUMBCO))+LTRIM(RTRIM(NUMCTA)) + LTRIM(RTRIM(NUMDVE)) +'2' + CAST(TIPCTA AS CHAR(1)) + RIGHT('000000' + CAST (CODUSU AS VARCHAR(6)),6) FROM TBCADCTA (NOLOCK) )
SET @RETURN_VALUE = @@ROWCOUNT          ]]>
        </query>
      </item>

      <item script="true" alias="A." sql="" method="UpdateImportData" return="int" returnmode="1" procname="PRIMPREGUPDDAT" desc ="Atualiza o item de recarga de lote com as informações do cartão associado" returnvalue="1">
        <query>
          <![CDATA[
         
SET @RETURN_VALUE=0
UPDATE TBIMPREG SET VALREC=0, DSCERR = '' WHERE VALREC <> 1
UPDATE TBIMPREG SET STAREG = 66, VALREC=6, DSCERR='TIPO DE CONTA INVALIDA'  WHERE TIPCTA<>2


UPDATE TBIMPREG
   SET NIDCTA = B.NIDCTA,
       VALREC = 1,
       DSCERR = ''
  FROM TBIMPREG A
 INNER JOIN TBCADCTA B
    ON ( LTRIM(RTRIM(REPLACE(B.NUMAGE,'-','')))  = LTRIM(RTRIM(A.NUMAGE))+ A.DIGAGE  
         AND B.NUMBCO = A.NUMBCO     
	       AND B.NUMCTA = A.NUMCTA
		     AND B.NUMDVE = A.NUMDVE
         AND B.ORGCTA = 2         
         AND B.TIPCTA = A.TIPCTA         
         AND B.CODUSU = A.ASSUSU                  
		     AND B.CODCMF = A.CODCMF
		     )
 WHERE VALREC=1 AND A.NIDCTA=0
   AND B.STAREC=1 AND B.STACTA=250
 
SET @RETURN_VALUE = @RETURN_VALUE + @@ROWCOUNT    

 /*
  * DECURSO DE PRAZO
  */
 UPDATE TBIMPREG 
    SET STAREG = 65, VALREC=1, DSCERR='' 
  WHERE DATEDIFF(DAY,DATEXE,GETDATE()) >3 AND STAREC=1 AND STAREG=30
  

]]>
        </query>
      </item>

      <item script="true" alias="A." sql="" method="UpdateImportBatch" return="int" returnmode="1" procname="PRIMPREGUPDBAT" desc ="Atualiza o registro de cabeça de lote com as informações do lote analítico" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0       
DECLARE @QTDREG INT = 0
DECLARE @VLRTOT FLOAT = 0
SELECT @QTDREG = ISNULL(COUNT(*),0), @VLRTOT= SUM(ISNULL(VLRMOV,0)) FROM TBIMPREG WHERE NIDIMH = @NIDIMH GROUP BY NIDIMH
UPDATE TBIMPCAD 
   SET QTDREG = @QTDREG
      ,VLRTOT = @VLRTOT
      ,DATUPD = GETDATE()
 WHERE NIDIMH= @NIDIMH          
   SET @RETURN_VALUE=@@ROWCOUNT
RETURN @RETURN_VALUE   
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Importação" name="NIDIMH" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>


      <item script="true" alias="A." sql="" method="UpdateTransaction" return="int" returnmode="1" procname="PRIMPREGUPDFIL" desc ="Atualiza o registro de cabeça de lote com as informações de processamento" returnvalue="1">
        <query>
          <![CDATA[
          
SET @RETURN_VALUE=0       
DECLARE @QTDVAL INT = 0
DECLARE @QTDREC INT = 0
DECLARE @QTD009 INT = 0
DECLARE @QTD099 INT = 0
SELECT @QTDVAL = COUNT(ISNULL(VALREC,0)) FROM TBIMPREG WHERE NIDIMH=@NIDIMH AND STAREC=1 AND STAREG IN (35,65,66)
/* SUCESSO OU CANCELAMENTO PELO PROCESSADOR DA TED */
SELECT @QTD099 = COUNT(ISNULL(VALREC,0)) FROM TBIMPREG WHERE NIDIMH=@NIDIMH AND STAREC=1 AND STAREG IN (99,67)
SELECT @QTD009 = COUNT(ISNULL(VALREC,0)) FROM TBIMPREG WHERE NIDIMH=@NIDIMH AND STAREC=1 AND STAREG NOT IN (35,65,66)
SELECT @QTDREC = ISNULL(COUNT(*),0) FROM TBIMPREG WHERE NIDIMH=@NIDIMH AND STAREC=1 GROUP BY NIDIMH

IF(@QTDREC >0 AND @QTDVAL =0)
   UPDATE TBIMPCAD SET STALRE = 223, DATUPD = GETDATE() WHERE NIDIMH= @NIDIMH          
IF(@QTDREC = @QTD009)
   UPDATE TBIMPCAD SET STALRE = 225, DATUPD = GETDATE() WHERE NIDIMH= @NIDIMH          
   
/* NUMERO DE REGISTRO E IGUAL AO NUMERO DE INSCRIÇOES */    
IF(@QTDREC = @QTDVAL)
   BEGIN
    UPDATE TBIMPCAD SET STALRE = 227, STAREG=88, DATUPD = GETDATE() WHERE NIDIMH= @NIDIMH          
   END
/* NUMERO DE REGISTRO E IGUAL AO NUMERO DE SUBMETIDOS E CANCELADOS */       
IF(@QTDREC = @QTD099)
   BEGIN
    UPDATE TBIMPCAD SET STAREG=99, DATUPD = GETDATE() WHERE NIDIMH= @NIDIMH          
   END
   
SET @RETURN_VALUE=@QTDREC
RETURN @RETURN_VALUE    
          
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Importação" name="NIDIMH" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="RemoveTransaction" return="int" returnmode="1" procname="PRIMPREGREMTRA" desc ="Remove uma transação e retorna o registro para o status normal de processamento" returnvalue="1">
        <query>
          <![CDATA[
	DECLARE @NIDRTI INT
	SET @RETURN_VALUE=0
	BEGIN TRANSACTION

	BEGIN TRY
		IF(@RETURN_VALUE=0)
			BEGIN
        IF(EXISTS(SELECT 1 FROM TBREGTED WHERE NIDTRA = @NIDTRA AND STAREC=1 AND STATED=27))
          BEGIN
				    UPDATE TBREGTED SET STAREC = 0 WHERE NIDTRA = @NIDTRA AND STAREC = 1
				    SELECT @NIDRTI = NIDRVM FROM TBREGCCR WHERE NIDTRA = @NIDTRA AND TIPRFE = 11
				    IF(@NIDRTI>0)
					    BEGIN
						    UPDATE TBREGCCR SET STAREC = 0 WHERE NIDTRA = @NIDTRA
						    UPDATE TBREGDLT SET STAREC = 0 WHERE NIDRTI = @NIDRTI
						    UPDATE TBREGTIN SET STAREC = 0 WHERE NIDRTI = @NIDRTI
						    UPDATE TBIMPREG SET STAREG=1, VALREC=0, NIDTRA='' WHERE NIDTRA =@NIDTRA
                SET @RETURN_VALUE=1                
					    END 
				    ELSE
              SET @RETURN_VALUE=0                            
          END
			END
	END TRY
	BEGIN CATCH
		SET @RETURN_VALUE=-1
	END CATCH

	IF(@RETURN_VALUE=1)
	   COMMIT TRANSACTION
	ELSE
	   ROLLBACK TRANSACTION

	RETURN @RETURN_VALUE
          
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da Transação" name="NIDTRA" type="System.String" size="13" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="FAILALL"/>
          <return value="0" message="" error="EMPTYDATA"/>
        </returns>

      </item>

    </methods>

  </item>
  <item create="true"  id="91" name="VWCADCRE" friendlyname="Accredited Query" modelversion="2" >
    <UpdateKey>Key</UpdateKey>
    <audit>False</audit>
    <keyaudit></keyaudit>
    <FilterSelect>false</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <procedure>000000000</procedure>
    <asp>000000000</asp>
    <csharp>0000000000</csharp>
    <IdNextNumber></IdNextNumber>
    <SetNextNumber></SetNextNumber>
  </item>

  <item create="true"  id="83" name="TBMNUACE" friendlyname="MenuAccess" modelversion="3">
    <UpdateKey>Identity</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>0000000000</procedure>
    <asp>0000000000</asp>
    <csharp>0000000000</csharp>

    <methods>
      <item script="true" alias="A." sql="" method="GetUserAccess" return="DataTable" returnmode="1" procname="PRMNUACESELACE" desc ="Seleciona os acessos de um usuário">
        <query>
          <![CDATA[
SELECT DISTINCT CODUSU, CODMNU
  FROM (
SELECT A.CODUSU, B.CODMNU
  FROM TBMNUACE A
 INNER JOIN TBCADMNU B
    ON (A.MNUACE = NIDMNU)
 WHERE A.CODUSU = @CODUSU
   AND A.TIPACE = 1
   AND A.STAREC = 1
   AND B.IDEMNU = @IDEMNU   
UNION   
   SELECT A1.CODUSU, A2.CODMNU 
     FROM TBCADUSU (NOLOCK) A1
   CROSS JOIN (SELECT DISTINCT CODMNU FROM TBCADMNU WHERE TIPMNU=2 AND IDEMNU=@IDEMNU) A2
		WHERE A1.STAREC=1 AND A1.STAUSU=61 AND A1.CODUSU=@CODUSU
) A          
         ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Identificacao do Menu" name="IDEMNU" type="System.Byte" default="1" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="InsertOrUpdate" return="int" returnmode="2" procname="PRMNUACEINSUPD" desc ="Insere ou atualiza um registro na tabela de Acessos e Permissões de Menus" returnvalue="0">
        <query>
          <![CDATA[
          DECLARE @IOMODE TINYINT = 1
          DECLARE @RETURN_VALUE INT = 0          
          BEGIN TRY
          IF(EXISTS(SELECT 1 FROM TBMNUACE (NOLOCK) WHERE CODUSU=@CODUSU AND MNUACE=@MNUACE))
             SET @IOMODE=2
             
          IF(@IOMODE=1)
               BEGIN
                   INSERT INTO TBMNUACE(STAREC,UPDUSU,CODUSU,MNUACE,TIPACE) VALUES (@STAREC,@UPDUSU,@CODUSU,@MNUACE,@TIPACE)
                   IF(@@ERROR=0)
                      SET @RETURN_VALUE=1
               END
          ELSE
               BEGIN
                  UPDATE TBMNUACE 
                     SET STAREC=@STAREC, 
                         UPDUSU=@UPDUSU, 
                         TIPACE=@TIPACE
                   WHERE CODUSU=@CODUSU AND MNUACE=@MNUACE
                   IF(@@ERROR=0)
                      SET @RETURN_VALUE=1
               END
          END TRY
          BEGIN CATCH
             SET @RETURN_VALUE=-1
          END CATCH
          SELECT @RETURN_VALUE
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Status do Registro" name="STAREC" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Código do Menu de Acesso" name="MNUACE" type="System.Int16" default="" output="" null="false"/>
          <parameter input="true" desc ="Tipo de Acesso" name="TIPACE" type="System.Byte" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="GetMenuAccess" return="int" returnmode="1" procname="PRMNUACEGET" desc ="Verifica se um usuário está contido no controle de acesso de menu informado" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE = 0
IF(EXISTS(SELECT 1 FROM TBMNUACE (NOLOCK) WHERE STAREC=1 AND CODUSU=@CODUSU AND MNUACE=@MNUACE))
		SET @RETURN_VALUE=1;
RETURN @RETURN_VALUE;          
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Código do Acesso" name="MNUACE" type="System.Int16" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="UpdateMenuAccess" return="int" returnmode="1" procname="PRMNUACEUPDACE" desc ="Atualiza o controle de menu com as opções automáticas" returnvalue="1">
        <query>
          <![CDATA[
          
IF(@IDEMNU=1)
  BEGIN
    /* ATUALIZACAO DE USUARIOS DE MAQUINAS PELA INATIVACAO */  
    UPDATE TBMNUACE
       SET STAREC = 0
      FROM TBMNUACE A
     INNER JOIN TBUSUMAQ B
        ON (A.CODUSU = B.USUREF)
     WHERE B.STAREC=0
       AND MNUACE IN (SELECT NIDMNU FROM TBCADMNU (NOLOCK) WHERE IDEMNU=@IDEMNU) 
   
    /* ATUALIZACAO DE USUARIOS DE MAQUINAS PELA ATIVACAO */  
    UPDATE TBMNUACE
       SET STAREC = 1
      FROM TBMNUACE A
     INNER JOIN TBUSUMAQ B
        ON (A.CODUSU = B.USUREF)
     WHERE B.STAREC=1 AND A.STAREC=0
       AND MNUACE IN (SELECT NIDMNU FROM TBCADMNU (NOLOCK) WHERE IDEMNU=@IDEMNU)

    INSERT INTO TBMNUACE (TIPACE, CODUSU, MNUACE)
    SELECT 1, USUREF, NIDMNU 
      FROM (
    SELECT DISTINCT USUREF, B.NIDMNU 
      FROM TBUSUMAQ A
     CROSS JOIN (SELECT NIDMNU FROM TBCADMNU WHERE STAREC=1 AND TIPMNU=1) B
     WHERE A.STAREC=1 
       AND A.USUREF NOT IN (SELECT CODUSU FROM TBMNUACE WHERE MNUACE IN (SELECT NIDMNU FROM TBCADMNU WHERE TIPMNU =1 AND IDEMNU=@IDEMNU))) A1
    WHERE RIGHT( '000000' +  CAST(A1.USUREF AS VARCHAR(6)),6)
    + RIGHT( '000000' +  CAST(A1.NIDMNU AS VARCHAR(6)),6)
    NOT IN (SELECT DISTINCT RIGHT( '000000' +  CAST(CODUSU AS VARCHAR(6)),6)
    + RIGHT( '000000' +  CAST(MNUACE AS VARCHAR(6)),6) FROM TBMNUACE)

    /* ATUALIZACAO DE USUARIOS PELA CONDICAO PADRAO */  
    INSERT INTO TBMNUACE (TIPACE, CODUSU, MNUACE)
    SELECT DISTINCT 1 TIPACE, 999999 CODUSU, NIDMNU 
      FROM TBCADMNU WHERE STAREC=1 AND TIPMNU=2
       AND NIDMNU NOT IN (SELECT NIDMNU FROM TBMNUACE WHERE CODUSU=999999 AND IDEMNU=@IDEMNU)
  END   
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Identificacao do Menu" name="IDEMNU" type="System.Byte" default="" output="" null="false"/>
        </parameters>

      </item>
    </methods>
  </item>

  <item create="true"  id="92" name="TBADMCRT" friendlyname="ManagerCard" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>true</audit>
    <keyaudit>CODCRT</keyaudit>
    <FilterSelect>True</FilterSelect>
    <listselect>STACRT</listselect>
    <CSharpPartial>true</CSharpPartial>
    <SqlTable></SqlTable>
    <fieldreturn></fieldreturn>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <MaxFields></MaxFields>

    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="ManagerCard" procname="PRADMCRTTSEL" desc ="Seleciona o registro de acordo com o Código do Cartão">
        <query>
          <![CDATA[SELECT * FROM TBADMCRT (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Cartão" name="CODCRT" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD=GETDATE();
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </updatecommand>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="" desc ="Seleciona todos os registros de endereço do usuário fornecido">
        <query>
          <![CDATA[
SELECT A.* 
      ,ISNULL(B.NOMUSU,'') AS NOMUSU
      ,ISNULL(C.NOMUSU,'') AS DSCTOM
      ,ISNULL(E.DSCTAB,'') AS DSCREC
      ,ISNULL(D.DSCSTA,'') AS DSCSTA
      ,ISNULL(F.LGNUSU,'') AS DSCUPD
      ,ISNULL(G.DSCSTA,'') AS DSCACT
      ,DATSLD = CASE WHEN S.DATUPD IS NOT NULL THEN (CONVERT(VARCHAR(10), S.DATUPD, 103) + ' ' + CONVERT(VARCHAR(10), S.DATUPD, 108)) ELSE '' END
      ,VLRSAL = ISNULL(S.VLRSAL,0)      
		  ,PRNCRT = dbo.NumeroCartaoX(CRD.NUMCRT)
		  ,PRNCMF = dbo.FormatCMF(B.codcmf)
		  ,CRD.NUMCRT 
		  ,CRD.NIDCRT       
		  ,B.codcmf 
  FROM TBADMCRT (NOLOCK) A
  LEFT JOIN TBCADUSU (NOLOCK) B
    ON (A.ASSUSU = B.CODUSU)
  LEFT JOIN TBCADUSU (NOLOCK) C
    ON (A.USUMEN = C.CODUSU)
 INNER JOIN TBCADSTA (NOLOCK) D
    ON (A.STACRT = D.CODSTA)
 INNER JOIN TBTABGER (NOLOCK) E
    ON (7 = E.NUMTAB AND A.STAREC= E.KEYCOD)
 INNER JOIN TBCADSTA (NOLOCK) G
    ON (A.LSTACT = G.CODSTA)
  LEFT JOIN TBCADUSU (NOLOCK) F
    ON (A.UPDUSU = F.CODUSU)
  LEFT JOIN TBCRTSAL (NOLOCK) S
    ON (S.CODCRT = A.CODCRT)
  LEFT JOIN TBREGCRT (NOLOCK) CRD
    ON (CRD.CODCRT = A.CODCRT)
        ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Gestor" name="USUPRO" type="int" sysnull="true" default="" output="" null=""/>
          <parameter input="true" apply="true" islike="true" desc ="Nome do Portador" name="NOMPRT" type="System.String" size="50" default="" output="" null="true"/>
          <parameter input="true" apply="true" islike="true" alias="CRD" desc ="Número do Cartão" name="NUMCRT" type="System.String" size="20" default="" output="" null="true"/>
          <parameter input="true" apply="true" islike="true" alias="B" desc ="Código do CMF" name="CODCMF" type="System.String"  default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Status do Cartão" name="STACRT" sysnull="true" type="System.Int16"  default="" output="" null="true"/>
        </parameters>
      </item>


    </selectallcommand>

    <methods>

      <item script="true" alias="A." sql="" method="GetCards" return="DataTable" procname="PRADMCRTLSTCRT" desc ="Obtêm a lista de cartões de acordo com o usuário e produto">
        <query>
          <![CDATA[
	IF(@NOMPRT IS NOT NULL)
	   SET @NOMPRT = '%' +@NOMPRT + '%'
	IF(@NUMCRT IS NOT NULL)
	   SET @NUMCRT = '%' +@NUMCRT + '%'
	IF(@CODCMF IS NOT NULL)
	   SET @CODCMF = '%' +@CODCMF + '%'
	SELECT A.*
      ,DATSLD = CASE WHEN S.DATUPD IS NOT NULL THEN (CONVERT(VARCHAR(10), S.DATUPD, 103) + ' ' + CONVERT(VARCHAR(10), S.DATUPD, 108)) ELSE '' END
      ,VLRSAL = ISNULL(S.VLRSAL,0)      
      ,NUMCRT = dbo.NumeroCartaoX(C.NUMCRT)
      ,CODCMF = dbo.FormatCMF(b.codcmf) 
      ,E.DSCSTA
      ,B.VALCRT
	  FROM TBADMCRT (NOLOCK) a
	 INNER JOIN TBREGCRT (NOLOCK) C 
	    ON (C.CODCRT = A.CODCRT)
	 INNER JOIN TBCADUSU (nolock) B 
 	    ON (a.assusu = b.codusu)
	 INNER JOIN TBCADSTA (nolock) E 
 	    ON (E.CODSTA = A.STACRT)
    LEFT JOIN TBCRTSAL (NOLOCK) S
      ON (S.CODCRT = A.CODCRT)
      
   WHERE A.USUPRO = @USUPRO
	   AND (@NOMPRT IS NULL OR A.NOMPRT LIKE @NOMPRT)
	   AND (@NUMCRT IS NULL OR C.NUMCRT LIKE @NUMCRT)
	   AND (@CODCMF IS NULL OR B.CODCMF LIKE @CODCMF)
	   AND (@STACRT IS NULL OR A.STACRT = @STACRT)     
		      
      ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Gestor" name="USUPRO" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Nome do Portador" name="NOMPRT" type="System.String" size="50" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Número do Cartão" name="NUMCRT" type="System.String" size="20" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Código do CMF" name="CODCMF" type="System.String" size="20" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Status do Cartão" name="STACRT" type="System.Int16" sysnull="true" default="" output="" null="true"/>
        </parameters>
      </item>


      <item script="true" alias="A." sql="" method="ChangePassword" return="int" procname="PRADMCRTCHGPSW" desc ="Efetua a alteração da senha do cartão" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0
DECLARE @AUDDSC VARCHAR(100) = N''
DECLARE @OLDPSW VARCHAR(100) = N''
BEGIN TRANSACTION
BEGIN TRY
IF(EXISTS (SELECT 1 FROM TBADMCRT WHERE CODCRT =@CODCRT))
  BEGIN
    SELECT @OLDPSW = ISNULL(PSWCRT,'') FROM TBADMCRT WHERE CODCRT =@CODCRT  
	  UPDATE TBADMCRT 
		   SET PSWCRT = @PSWCRT,
			     UPDUSU = @UPDUSU,
			     DATUPD = GETDATE()
	   WHERE CODCRT = @CODCRT
       AND STAREC = 1
    IF(@@ERROR=0)
        BEGIN
            SET @AUDDSC = 'ALTEROU O SENHA DO CARTAO DE ' + @OLDPSW + ' PARA ' + @PSWCRT  
            INSERT INTO TBAUDDAT ( UPDUSU,    AUDDAT, AUDKEY,  AUDIDR, AUDIMS, AUDDSC) 
                          VALUES (@UPDUSU, GETDATE(),     44, @CODCRT,      2, @AUDDSC)        
        END
  END        
END TRY
BEGIN CATCH
  SET @RETURN_VALUE=-1
END CATCH

IF(@RETURN_VALUE=1)
  COMMIT TRAN
ELSE
   ROLLBACK TRAN
RETURN @RETURN_VALUE   
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Cartão" name="CODCRT" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Novo Senha do Cartão" name="PSWCRT" type="System.String" size="10" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU" type="Int"  default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="0" message="" error="EMPTYDATA"/>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="FAILUREUPDATECARD"/>
        </returns>
      </item>


      <item script="true" alias="A." sql="" method="CancelAssociation" return="int" procname="PRADMCRTCHGASS" desc ="Efetua o cancelamento da associação de um cartão" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0
BEGIN TRANSACTION
BEGIN TRY
IF(EXISTS (SELECT 1 FROM TBADMCRT WHERE CODCRT =@CODCRT AND ASSUSU>0 AND ASSPRT>0))
  BEGIN
	  UPDATE TBADMCRT 
		   SET NOMPRT='',
		       NOMCR1='',
			     NOMCR2='',
			     NOMCR3='',
			     STACRT = 101,
			     UPDUSU = @UPDUSU,
			     DATUPD = GETDATE(),
           ASSPRT = 0,
           ASSUSU = 0
	   WHERE CODCRT = @CODCRT
    IF(@@ERROR=0)
        BEGIN
            INSERT INTO TBAUDDAT ( UPDUSU,    AUDDAT, AUDKEY,  AUDIDR, AUDIMS,AUDDSC) 
                          VALUES (@UPDUSU, GETDATE(),     44, @CODCRT,      2, 'ALTEROU O STATUS DO CARTAO PARA 101 - EM ESTOQUE')        
        END
  END        
END TRY
BEGIN CATCH
  SET @RETURN_VALUE=-1
END CATCH

IF(@RETURN_VALUE=1)
  COMMIT TRAN
ELSE
   ROLLBACK TRAN
RETURN @RETURN_VALUE   
   
          
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Cartão" name="CODCRT" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU" type="Int"  default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="0" message="" error="EMPTYDATA"/>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="FAILUREUPDATECARD"/>
        </returns>
      </item>

      <item script="true" alias="A." sql="" method="UpdateManagerCards" return="int" procname="PRADMCRT" desc ="Altera o status de Registro de todos os cartões de um determinado gestor" returnvalue="1">
        <query>
          <![CDATA[
SET @RETURN_VALUE=0          
IF(@USUPRO<=0)
   SET @RETURN_VALUE = -1

IF(@UPDUSU<=0)
   SET @RETURN_VALUE = -2
   
IF( NOT EXISTS(SELECT 1 FROM TBUSUACE WHERE CODUSU= @UPDUSU AND STAREC=1 AND CODACE=5))
	SET @RETURN_VALUE=-3
   

BEGIN TRANSACTION
BEGIN TRY
    UPDATE TBCADUSU
       SET STAREC = @STAREC, UPDUSU = @UPDUSU, DATUPD = GETDATE(),
           STAUSU = CASE WHEN @STAREC=0 THEN 62 ELSE 61 END
     WHERE STAREC <> @STAREC AND CODUSU IN (SELECT ASSUSU
      FROM TBADMCRT (NOLOCK)
    WHERE USUPRO =@USUPRO AND STAREC=1 AND ASSUSU IN
    (
      SELECT ASSUSU
        FROM TBADMCRT (NOLOCK)
       WHERE STAREC=1
       GROUP BY ASSUSU
       HAVING COUNT(DISTINCT USUPRO) = 1)
    )
    
    IF(@@ERROR=0)
      BEGIN
          UPDATE TBADMCRT
             SET STAREC = @STAREC,
                 UPDUSU = @UPDUSU,
                 DATUPD = GETDATE()
           WHERE STAREC <> @STAREC AND USUPRO = @USUPRO
           IF(@@ERROR=0)    
              SET @RETURN_VALUE=1           
      END
    ELSE
        SET @RETURN_VALUE=-1
END TRY
BEGIN CATCH
  SET @RETURN_VALUE=-1
END CATCH

IF(@RETURN_VALUE = 1)
   COMMIT TRANSACTION
ELSE
   ROLLBACK TRANSACTION
RETURN @RETURN_VALUE
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Gestor" name="USUPRO" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Status do Registro" name="STAREC" type="System.Byte" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU" type="Int"  default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="0" message="" error="EMPTYDATA"/>
          <return value="1" message="" error="OK"/>
          <return value="-1" message="" error="INVALIDMANAGERCODE"/>
          <return value="-2" message="" error="INVALIDUSERUPDATE"/>
          <return value="-3" message="" error="APPROVALBATCHMANAGERCARDS"/>
        </returns>
      </item>

    </methods>
  </item>
  <item create="true"  id="93" name="TBEXPTAR" friendlyname="ExpandedRate" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>

    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>

    <insertcommand key="key" fieldreturn="NIDTAR" exceptionparamns="'DATCAD','DATUPD'" procname="" method="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="key" fieldreturn="NIDTAR" exceptionparamns="'DATCAD'" procname="" method="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="ExpandedRate" procname="" desc ="Seleciona o registro de acordo com o codigo do produto">
        <query>
          <![CDATA[SELECT * FROM TBEXPTAR (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Tarifação" name="NIDTAR" type="int" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Linha de Aplicação" name="LVLAPL" type="System.Byte" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="" desc ="Seleciona todos os registros de endereço do usuário fornecido">
        <query order="A.NIDTAR, A.LVLAPL">
          <![CDATA[
    SELECT A.*, ISNULL(B.LGNUSU,'') DSCUPD 
    	,ISNULL(C.DSCTAB,'') DSCREC
    	,ISNULL(E.DSCTAB,'') DSCTAR
    	  FROM TBEXPTAR (NOLOCK) A 
    	  INNER JOIN TBTABGER (NOLOCK) C 
    	    ON (C.NUMTAB = 7 AND C.KEYCOD = A.STAREC)
    	  LEFT JOIN TBCADUSU (NOLOCK) B 
    	    ON (A.UPDUSU = B.CODUSU)
    	 INNER JOIN TBCADTAR (NOLOCK) D 
    	    ON (D.NIDTAR = A.NIDTAR)
    	 INNER JOIN TBTABGER (NOLOCK) E 
    	    ON (E.NUMTAB=24 AND E.KEYCOD = D.CODTAR)        ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Tarifação" name="NIDTAR" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectallcommand>

  </item>

  <item create="true"  id="94" name="TPIMPEXT" friendlyname="CardExtractImport" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>

    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD'" procname="" method="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[
SET @RETURN_VALUE =0        
DECLARE @ID INT = 0
DECLARE @ALTERED INT
IF(EXISTS(SELECT 1 FROM TPIMPEXT (NOLOCK) WHERE NUMTRA = @NUMTRA AND USROWN=@USROWN))
  SELECT @ID = NIDEXT FROM TPIMPEXT (NOLOCK) WHERE NUMTRA = @NUMTRA AND USROWN = @USROWN
IF(@ID >0)
   BEGIN
       SELECT @ALTERED = CASE WHEN (LTRIM(RTRIM(NUMTRA)) = LTRIM(RTRIM(@NUMTRA))
              AND LTRIM(RTRIM(NOMEST)) = LTRIM(RTRIM(@NOMEST))
              AND LTRIM(RTRIM(DATTRA)) = LTRIM(RTRIM(@DATTRA))
              AND LTRIM(RTRIM(MSKCRT)) = LTRIM(RTRIM(@MSKCRT))              
              AND LTRIM(RTRIM(DSCTRA)) = LTRIM(RTRIM(@DSCTRA))                            
              AND LTRIM(RTRIM(FINCRT)) = LTRIM(RTRIM(@FINCRT))                                          
              AND LTRIM(RTRIM(NOMPRT)) = LTRIM(RTRIM(@NOMPRT))                                                        
              AND LTRIM(RTRIM(NOMFML)) = LTRIM(RTRIM(@NOMFML))                                                                      
              AND LTRIM(RTRIM(HASITE)) = LTRIM(RTRIM(@HASITE))                                                                                    
              AND LTRIM(RTRIM(HASRMD)) = LTRIM(RTRIM(@HASRMD))                                                                                                  
              AND LTRIM(RTRIM(TIPLAN)) = LTRIM(RTRIM(@TIPLAN))                                                                                                                
              AND VLRTRA = @VLRTRA) THEN 1 ELSE 0 END                                                                                                                              
         FROM TPIMPEXT WHERE NIDEXT=@ID
      
      IF(@ALTERED=0)
        BEGIN
          /* ALTERADO */
          UPDATE TPIMPEXT SET INDPRO=0, DATUPD=GETDATE() WHERE NIDEXT=@ID 
        END
      ELSE
         /* REGISTRO JA EXISTE E NAO FOI ALTERADO */
         SET @RETURN_VALUE=-2  
   END
      ]]>
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDFOUND"/>
      </returns>
    </insertcommand>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="CardExtractImport" procname="" desc ="Seleciona o registro de acordo com o codigo do produto">
        <query>
          <![CDATA[SELECT * FROM TPIMPEXT (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da Transação de Extrato" name="NIDEXT" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRIMPEXTSELALLCRT" desc ="Seleciona todos os cartoes para coleta de extrato">
        <query>
          <![CDATA[
SELECT A.CODCRT, NUMCRT, CASE WHEN DATEXT IS NULL THEN DATEDIFF(dd, B.DATATV, GETDATE()) ELSE DATEDIFF(dd,B.DATEXT, GETDATE()) END QTDDIA
  FROM TBREGCRT (NOLOCK) A
 INNER JOIN TBADMCRT (NOLOCK) B
    ON (B.CODCRT = A.CODCRT)
 WHERE A.STAREC=1 AND A.STAREC=1
        ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Processadora do Cartão" name="OPRCRT" type="System.Byte" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="RecordsToBeLaunched" return="DataTable" procname="PRIMPEXTSELRECWRT" desc ="Seleciona todos os registros de extrato de cartoes para gravação">
        <query>
          <![CDATA[
SELECT NIDEXT,NUMTRA, USROWN, CODCRT, NOMEST, DATTRA = CONVERT(DATETIME,REPLACE(DATTRA,'-','')), VLRTRA,  SIGOPE = CASE WHEN TIPLAN = 'D' THEN -1 ELSE 1 END,  DSCTRA
 FROM TPIMPEXT (NOLOCK)    
WHERE INDPRO=1 AND INDLCD=0
        ]]>
        </query>
      </item>
    </selectallcommand>

    <methods>
      <item script="true" alias="A." sql="" method="UpdateImportData" return="int" returnmode="2" procname="PRREGEXTUPDIMP" desc ="Atualiza os registros de importação de extrato" returnvalue="0">
        <query>
          <![CDATA[
/* VERIFICA SE O LANCAMENTO EXISTE */
UPDATE TPIMPEXT
   SET INDLCD = 1
  FROM TPIMPEXT A
 INNER JOIN TBREGEXT B
    ON (A.NUMTRA = B.NUMTRA AND A.USROWN=B.USROWN)
 WHERE A.USROWN>0

/* ATUALIZA O CODIGO DO CARTAO */
UPDATE TPIMPEXT
   SET CODCRT = B.CODCRT
  FROM TPIMPEXT A
 INNER JOIN (SELECT DISTINCT LEFT(NUMCRT,4)+'********'+RIGHT(NUMCRT,4) NUMCRT,
                    CODCRT 
			   FROM TBREGCRT (NOLOCK)) B
    ON (REPLACE(REPLACE(A.MSKCRT,'**********',''),' ','********') = B.NUMCRT)
 WHERE A.CODCRT=0
   AND A.INDLCD=0
          ]]>
        </query>
      </item>
    </methods>

  </item>

  <item create="true"  id="95" name="TBREGEXT" friendlyname="CardExtract" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>

    <objectclass>
      <item script="true" alias="A." sql="" method="CardExtractRecord" return="int" returnmode="1" procname="" desc ="Objeto de Retenção de Informações de Cartões Associados" returnvalue="1">
        <query>
          <![CDATA[
DECLARE @RESULT TABLE (NIDREX INT, 
         NUMTRA VARCHAR(17),  
         CODCRT INT,
         DSCTRA VARCHAR(70),          
         NOMEST VARCHAR(100),                   
         VLRTRA MONEY DEFAULT 0, 
         INDCNC TINYINT DEFAULT 0,
         PRNDAT VARCHAR(10),
         PRNHOR VARCHAR(8),
         SBLMOE VARCHAR(15),
         CODPRO SMALLINT )
SELECT * FROM @RESULT
        ]]>

        </query>
      </item>
    </objectclass>


    <insertcommand key="identity" exceptionparamns="'DATCAD','DATUPD'" procname="" method="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre><![CDATA[]]></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD=GETDATE();
      </pre>
      <body>
      </body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="RECORDNOTFOUND"/>
      </returns>
    </updatecommand>

    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="CardExtract" procname="" desc ="Seleciona o registro de acordo com o ID do Registro de Extrato de Cartões">
        <query>
          <![CDATA[SELECT * FROM TBREGEXT (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID da Transação de Extrato" name="NIDREX" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>


    <!--<interface>
      <item script="false" alias="A." sql="" method="InsertOrUpdate" return="int" returnmode="2" procname="" desc ="Insere ou Atualiza um regitro na tabela de Registro de Extrato de Cartões" returnvalue="0">
        <query>
        </query>
        <parameters>
          <parameter input="true" desc ="Registro de Extrato de Cartoes" name="model" type="CardExtract" default="" output="" null="false"/>
        </parameters>
      </item>

    </interface>-->
    <methods>

      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="PRREGEXTSELALL" desc ="Seleciona o movimento de extrato do cartão informado">
        <query merge="true">
          <![CDATA[
SET @DATTRA = LTRIM(RTRIM(@DATTRA))
SELECT NIDREX 
       ,NUMTRA 
       ,A.CODCRT 
       ,NOMEST 
       ,DSCTRA 
       ,VLRTRA = (VLRTRA* SIGOPE)
       ,INDCNC
       ,CONVERT(VARCHAR(10),DATTRA,103) PRNDAT 
       ,CONVERT(VARCHAR(10),DATTRA,108) PRNHOR 
	     ,ISNULL(B.SBLMOE,'') SBLMOE
	     ,CODPRO = ISNULL(D.CODPRO,0)
  FROM TBREGEXT (NOLOCK) A
  LEFT JOIN TBCADMOE (NOLOCK) B
    ON (A.CODMOE = B.CODMOE)
  LEFT JOIN TBADMCRT (NOLOCK) C
	  ON (C.CODCRT = A.CODCRT)
  LEFT JOIN TBUSUPRO (NOLOCK) D
	  ON (D.USUPRO = C.USUPRO)
        ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Cartão" name="CODCRT" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Data de Coleta (yyyyMMdd HH:mm:ss)" name="DATTRA"  operator="&gt;=" type="System.String" size="20" default="" output="" null="false"/>
        </parameters>
      </item>


      <item script="true" alias="A." sql="" type="DataTableList" method="GetExtractCard" return="CardExtractRecord" procname="PRREGEXTLSTEXT" desc ="Obtêm o extrato de Cartão">
        <query merge="true">
          <![CDATA[
SELECT NIDREX 
       ,NUMTRA 
       ,A.CODCRT 
       ,NOMEST 
       ,DSCTRA 
       ,VLRTRA = (VLRTRA* SIGOPE)
       ,INDCNC
       ,CONVERT(VARCHAR(10),DATTRA,103) PRNDAT 
       ,CONVERT(VARCHAR(10),DATTRA,108) PRNHOR 
	     ,ISNULL(B.SBLMOE,'') SBLMOE
	     ,CODPRO = ISNULL(D.CODPRO,0)
  FROM TBREGEXT (NOLOCK) A
  LEFT JOIN TBCADMOE (NOLOCK) B
    ON (A.CODMOE = B.CODMOE)
  LEFT JOIN TBADMCRT (NOLOCK) C
	  ON (C.CODCRT = A.CODCRT)
  LEFT JOIN TBUSUPRO (NOLOCK) D
	  ON (D.USUPRO = C.USUPRO)
        
          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Cartão" name="CODCRT" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Data de Coleta (yyyyMMdd HH:mm:ss)" name="DATTRA" operator="&gt;=" type="System.String" size="20" default="" output="" null="false"/>
        </parameters>
      </item>


      <item script="true" alias="A." sql="" method="LocateRecord" return="int" returnmode="2" procname="PRREGEXTINSUPD" desc ="Localiza um registro na tabela de Extratos" returnvalue="0">
        <query>
          <![CDATA[
      DECLARE @RETURN_VALUE INT = 0          
	    IF(EXISTS(SELECT 1 FROM TBREGEXT (NOLOCK) WHERE NUMTRA = @NUMTRA AND USROWN = @USROWN AND CODCRT=@CODCRT))
		      SELECT @RETURN_VALUE = NIDREX FROM TBREGEXT WHERE NUMTRA = @NUMTRA AND USROWN = @USROWN AND CODCRT = @CODCRT
      SELECT @RETURN_VALUE
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="Número da Transacao" name="NUMTRA" type="System.String" size="17" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário Proprietário" name="USROWN" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Código do Cartão" name="CODCRT" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>

      <item script="true" alias="A." sql="" method="ChangeConciliation" return="int" returnmode="1" procname="PRREGEXTCHGCNC" desc ="Altera o Indicador de Conciliação de um Registro do Extrato" returnvalue="1">
        <query>
          <![CDATA[
    SET @RETURN_VALUE=0;
    IF(@NIDREX <= 0)
       SET @RETURN_VALUE=-1
    IF(@UPDUSU <= 0)
       SET @RETURN_VALUE=-3
    IF(@RETURN_VALUE=0)
      BEGIN
        UPDATE TBREGEXT SET INDCNC=@INDCNC, UPDUSU=@UPDUSU,NUMIPA=@NUMIPA WHERE NIDREX=@NIDREX
        IF(@@ERROR=0)
            SET @RETURN_VALUE=1
      END     
    RETURN @RETURN_VALUE
          ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Registro de Extrato" name="NIDREX" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="Indicador de Conciliação" name="INDCNC" type="System.Boolean" default="" output="" null="false"/>
          <parameter input="true" desc ="Usuário de Atualização" name="UPDUSU" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="ID do Host Solicitante" name="NUMIPA" type="System.String" size="50" default="" output="" null="false"/>
        </parameters>
        <returns>
          <return value="0" message="" error="EMPTYPROCESS"/>
          <return operator=">" value="0" message="" error="OK"/>
          <return value="-1" message="" error="INVALIDID"/>
          <return value="-3" message="" error="INVALIDUSERUPDATE"/>
        </returns>
      </item>

    </methods>
  </item>

  <item create="true"  id="96" name="TXBOLVAL" friendlyname="NextValueSlip" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
  </item>

  <item create="true"  id="97" name="CRATVCRE" friendlyname="Accredited Activity" modelversion="3">
    <UpdateKey>key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>
    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="AccreditedActivity" procname="" desc ="Seleciona o registro de Adquirente atraves do ID do Crendenciado e o tipo de ADQUIRENTE">
        <query>
          <![CDATA[SELECT * FROM CRATVCRE (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Credenciado" name="NIDCRE" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Código de Atividade" name="CODATV" type="System.Int16" default="" output="" null="false"/>
        </parameters>
      </item>

    </selectcommand>
    <insertcommand key="key" exceptionparamns="'DATCAD','DATUPD'" procname="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        IF(EXISTS(SELECT 1 FROM CRATVCRE WHERE NIDCRE=@NIDCRE AND CODATV = @CODATV))
        SET @RETURN_VALUE=1
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="key" fieldreturn="NIDCRE" exceptionparamns="'DATCAD'" procname="" >
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        IF(NOT EXISTS(SELECT 1 FROM CRATVCRE WHERE NIDCRE=@NIDCRE AND CODATV = @CODATV))
        SET @RETURN_VALUE=1
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>
  </item>

  <item create="true"  id="98" name="TBCADSIM" friendlyname="SimCard" modelversion="3">
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>

    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <objectclass>
      <item script="true" alias="A." sql="" prefix="public" modifier="abstract" inherit="SimCard" method="AbstractSimCard" return="int" returnmode="1" procname="" desc ="Objeto de Abstração de Importação de Sim Card's para importação" returnvalue="1">
        <query>
          <![CDATA[
        ]]>

        </query>
      </item>
      <item script="true" alias="A." sql="" prefix="public" modifier="" inherit="AbstractSimCard" method="ImportSimCard" return="int" returnmode="1" procname="" desc ="Objeto de Retenção de Importação de Sim Card's para importação" returnvalue="1">
        <query>
          <![CDATA[DECLARE @RESULT TABLE (NUMERR VARCHAR(35), DSCERR VARCHAR(200))
SELECT * FROM @RESULT
        ]]>
        </query>
      </item>

    </objectclass>

    <import>
      <item script="true" alias="A." sql="" method="Import" type="ImportSimCard" return="int" desc ="Efetua a importação de dados SIM CARD">
        <query>
          <![CDATA[
      ]]>
        </query>
      </item>
    </import>

    <insertcommand key="identity" fieldreturn="" exceptionparamns="'DATCAD','DATUPD'" procname="" method="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" fieldreturn="" exceptionparamns="'DATCAD'" procname="" method="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="SimCard" procname="" desc ="Recupera as informações do Sim Card">
        <query>
          <![CDATA[SELECT * FROM TBCADSIM (NOLOCK) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Sim Card" name="NIDSIM" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="" desc ="Recupera todos os registros de SIM's Cards cadastrados">
        <query>
          <![CDATA[
DECLARE @RECORDS INT
SELECT @RECORDS = COUNT(1) FROM TBCADSIM (NOLOCK)
SELECT * FROM (
    SELECT A1.* 
         ,ISNULL(B.LGNUSU,'') LGNUSU 
    	 ,C.DSCSTA
    	 ,D.DATEMI
    	 ,ISNULL(D.NUMDOC,'') NUMDOC
    	 ,ISNULL(D.NUMQTD,0) NUMQTD
    	 ,ISNULL(D.VLRUNI,0) VLRUNI
    	 ,ISNULL(D.VLRTOT,0) VLRTOT
    	 ,ISNULL(E.NOMUSU,'') NOMFOR
       ,F.DSCTAB DSCOPR
	   ,PAGNRO = FLOOR(((((ROW_NUMBER() OVER(ORDER BY NIDSIM DESC))-1)/@PAGSIZ))+1)
	   ,PAGMAX = CEILING(@RECORDS/@PAGSIZ)
      FROM TBCADSIM (NOLOCK) A1 
      LEFT JOIN TBCADUSU (NOLOCK) B ON (B.CODUSU = A1.UPDUSU)  
     INNER JOIN TBCADSTA (NOLOCK) C ON (C.CODSTA = A1.STASIM)
      LEFT JOIN TBGSTFOR (NOLOCK) D ON (D.NIDFOR = A1.NIDFOR)
      LEFT JOIN TBCADUSU (NOLOCK) E ON (E.CODUSU = D.CODFOR)
      LEFT JOIN TBTABGER (NOLOCK) F ON (F.NUMTAB = 45 AND F.KEYCOD = A1.CODOPR)
 WHERE (@NIDSIM IS NULL OR A1.NIDSIM=@NIDSIM)
       AND (@STASIM IS NULL OR A1.STASIM=@STASIM)
       AND (@NIDFOR IS NULL OR A1.NIDFOR=@NIDFOR)
       AND (@CODOPR IS NULL OR A1.CODOPR=@CODOPR)
       AND (@NUMDDD IS NULL OR A1.NUMDDD=@NUMDDD)
       AND (@DATCAD IS NULL OR A1.DATCAD>=@DATCAD)      
       AND (@NUMTEL IS NULL OR A1.NUMTEL LIKE @NUMTEL)      
       AND (@CODSIM IS NULL OR A1.CODSIM LIKE @CODSIM)             
      ) A
WHERE (1=1)       
      
        ]]>
        </query>
        <parameters>
          <parameter input="true" apply="false" desc ="ID do Registro de Sim Card" name="NIDSIM" type="int" default="" output="" null="true"/>
          <parameter input="true" apply="false" desc ="Status do Sim Card" name="STASIM" type="System.Int16" default="" output="" null="true"/>
          <parameter input="true" apply="false" desc ="ID do Registro de Suprimento" name="NIDFOR" type="System.Int32" default="" output="" null="true"/>
          <parameter input="true" apply="false" desc ="Código da Operadora" name="CODOPR" type="System.Int16" default="" output="" null="true"/>
          <parameter input="true" apply="false" desc ="DDD" name="NUMDDD" type="System.String" size="4" default="" output="" null="true"/>
          <parameter input="true" apply="false" islike="true" desc ="Código do Sim" name="CODSIM" type="System.String" size="25" default="" output="" null="true"/>
          <parameter input="true" apply="false" islike="true" desc ="Número do Telefone" name="NUMTEL" type="System.String" size="25" default="" output="" null="true"/>
          <parameter input="true" apply="false" desc ="Data de Inclusão" name="DATCAD" type="System.String" size="25" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Página solicitada" name="PAGNRO" type="System.Int32" default="1" output="1" null="false"/>
          <parameter input="true" apply="false" desc ="Tamanho da Página" name="PAGSIZ" type="System.Decimal" default="50" output="50" null="false"/>
        </parameters>

      </item>
    </selectallcommand>

  </item>
  <item create="true"  id="99" name="TBGSTFOR" friendlyname="Supplier Manager" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>

    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>

    <insertcommand key="identity" fieldreturn="" exceptionparamns="'DATCAD','DATUPD'" procname="" method="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre><![CDATA[
IF(@NUMQTD>0 AND @VLRTOT>0)
   SET @VLRUNI= @VLRTOT/@NUMQTD
]]>
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" fieldreturn="" exceptionparamns="'DATCAD'" procname="" method="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[
IF(@NUMQTD>0 AND @VLRTOT>0)
   SET @VLRUNI= @VLRTOT/@NUMQTD
]]>
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="SupplierManager" procname="" desc ="Recupera as informações de Gerenciamento de Fornecimento">
        <query>
          <![CDATA[SELECT * FROM TBGSTFOR (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Inscrição" name="NIDFOR" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="" desc ="Recupera todos os registros de SIM's Cards cadastrados">
        <query order="A.DATEMI DESC, A.NUMDOC">
          <![CDATA[
SELECT A.*, ISNULL(C.LGNUSU,'') LGNUSU, B.NOMUSU
  FROM TBGSTFOR (NOLOCK) A 
 INNER JOIN TBCADUSU (NOLOCK) B ON (B.CODUSU = A.CODFOR)    
  LEFT JOIN TBCADUSU (NOLOCK) C ON (C.CODUSU = A.UPDUSU)  
        ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código do Fornecedor" name="CODFOR" type="int" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Data de Emissão" name="DATEMI" type="System.String"  size="10" default="" output="" null="true"/>
          <parameter input="true" apply="true" islike="true" desc ="Número do Documento" name="NUMDOC" type="System.String"  size="15" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Tipo de Registro" name="TIPREC" type="System.Byte"  default="2" output="" null="false"/>
        </parameters>

      </item>
    </selectallcommand>

  </item>

  <item create="true"  id="100" name="TBSIMMAQ" friendlyname="SimCardxMachine" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>

    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>

    <updatecommand key="identity" fieldreturn="" exceptionparamns="'DATCAD'" procname="" method="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre></pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>
    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="SimCardxMachine" procname="" desc ="Recupera as informações de Associação de Sim Card x Máquina">
        <query>
          <![CDATA[SELECT * FROM TBSIMMAQ (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Associação Sim Card x Máquina" name="NIDSXM" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <methods>
      <item script="true" alias="A." sql="" method="AssociateMachine" return="int" returnmode="1" procname="PRSIMMAQASSMAC" desc ="Associa uma maquina a um SIM CARD" returnvalue="1">
        <query>
          <![CDATA[
    SET @RETURN_VALUE=0
DECLARE @NIDSXM INT = 0
IF(@NIDSIM=0)
    SET @RETURN_VALUE=-1
  
IF(@RETURN_VALUE=0)
  BEGIN
    IF(@NIDMAQ=0)
      SET @RETURN_VALUE=-2
  END      

IF(@RETURN_VALUE=0)
  BEGIN
    IF(NOT EXISTS(SELECT 1 FROM TBCADSIM (NOLOCK) WHERE NIDSIM=@NIDSIM AND STASIM=240))
      SET @RETURN_VALUE=-3;
  END

IF(@RETURN_VALUE=0)
  BEGIN
    IF(NOT EXISTS(SELECT 1 FROM TBCADMAQ (NOLOCK) WHERE NIDMAQ=@NIDMAQ AND STAREC=1))
      SET @RETURN_VALUE=-4;
  END      
  
BEGIN TRANSACTION

IF(@RETURN_VALUE=0)
	BEGIN
		/* NAO EXISTE NENHUM ASSOCIACAO ATIVA DO SIM */
		IF(NOT EXISTS (SELECT 1 FROM TBSIMMAQ (NOLOCK) WHERE NIDSIM=@NIDSIM AND STAREC=1))    
			BEGIN
				INSERT INTO TBSIMMAQ (NIDSIM, NIDMAQ,STAREC,UPDUSU) VALUES (@NIDSIM, @NIDMAQ, 1,@UPDUSU)
				IF(@@ERROR=0)
					SET @NIDSXM = @@IDENTITY
			END
		ELSE
			BEGIN
				SELECT @NIDSXM = NIDSXM FROM TBSIMMAQ (NOLOCK) WHERE NIDSIM=@NIDSIM AND STAREC=1
				IF(@NIDSXM>0)
					BEGIN
					    UPDATE TBSIMMAQ SET STAREC=0,UPDUSU=@UPDUSU,DATUPD=GETDATE() WHERE NIDSXM =@NIDSXM
						UPDATE TBCADMAQ SET NIDSXM=0,UPDUSU=@UPDUSU,DATUPD=GETDATE() WHERE NIDSXM=@NIDSXM
						INSERT INTO TBSIMMAQ (NIDSIM, NIDMAQ,STAREC,UPDUSU) VALUES (@NIDSIM, @NIDMAQ, 1,@UPDUSU)
						IF(@@ERROR=0)
							SET @NIDSXM = @@IDENTITY
					END
			END
	END 

IF(@RETURN_VALUE=0)
  BEGIN
    IF(@NIDSXM>0)
      BEGIN

        /* Atualiza o status do sim para alocado */ 
        UPDATE TBCADSIM SET STASIM=242,UPDUSU=@UPDUSU,DATUPD=GETDATE() WHERE NIDSIM=@NIDSIM


        /* Atualiza o ID de Associação para a Máquina */        
        UPDATE TBCADMAQ 
           SET NIDSXM = @NIDSXM,UPDUSU=@UPDUSU,DATUPD=GETDATE() 
         WHERE NIDMAQ = @NIDMAQ
        SET @RETURN_VALUE=@NIDSXM
      END
  END
  
IF(@RETURN_VALUE>0)
   COMMIT TRANSACTION
ELSE
   ROLLBACK TRANSACTION
RETURN @RETURN_VALUE
         ]]>
        </query>
        <parameters>
          <parameter input="true" desc ="ID do Sim Card" name="NIDSIM" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" desc ="ID da Máquina" name="NIDMAQ" type="System.Int32" default="" output="" null="false"/>
          <parameter input="true" apply="true" desc ="Usuário de Atualização" name="UPDUSU" type="Int"  default="" output="" null="false"/>
        </parameters>

        <returns>
          <return operator=">" value="0" message="" error="OK"/>
          <return value="-1" message="O ID DO SIM CARD NAO FOI FORNECIDO" error="INVALIDARGUMENT"/>
          <return value="-2" message="O ID DA MAQUINA NÃO FOI FORNECIDO" error="INVALIDARGUMENT"/>
          <return value="-3" message="O SIM CARD NAO ESTA DISPONIVEL OU NAO EXISTE" error="INVALIDARGUMENT"/>
          <return value="-4" message="A MAQUINA NAO ESTA DISPONIVEL" error="INVALIDARGUMENT"/>
        </returns>

      </item>
    </methods>
  </item>

  <item create="true"  id="101" name="TBCALTED" friendlyname="CallBackAbc" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>

    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <insertcommand key="key" fieldreturn="NIDTED" exceptionparamns="'DATCAD'" procname="" method="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
SET @NUMPTL = LTRIM(RTRIM(@NUMPTL))        
SELECT @NIDTED = NIDTED FROM TBREGTED (NOLOCK) WHERE LTRIM(RTRIM(NUMPTL))= @NUMPTL

IF(EXISTS(SELECT 1 FROM TBCALTED WHERE NIDTED=@NIDTED))
   UPDATE TBCALTED SET NUMOCO=NUMOCO+1 WHERE NIDTED=@NIDTED
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>

  </item>

  <item create="true"  id="102" name="TLREGMSG" friendlyname="MessagesLog" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>

    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <insertcommand key="identity" fieldreturn="NIDTFI" exceptionparamns="'DATCAD'" procname="" method="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @CODMTI = RIGHT('0000' + LTRIM(RTRIM(@NUMPTL)),4)
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>

  </item>

  <item create="true"  id="103" name="TBPROCRT" friendlyname="CardsProcessing" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>

    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <insertcommand key="identity" fieldreturn="NIDPCR" exceptionparamns="'DATCAD','DATUPD'" procname="" method="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[

     
IF(EXISTS(SELECT 1 FROM TBPROCRT WHERE CODACT = @CODACT AND CODSTA = @CODSTA AND CODCRT=@CODCRT AND STAREC=1)) 
  SET @RETURN_VALUE = -2
  
IF(@RETURN_VALUE=0)
  BEGIN
    IF((@CODACT=1) AND (@PSWCRT=''))
      SET @RETURN_VALUE = -3
  END
  
      ]]>
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="PROCESSCARDREQUESTEXISTS"/>
        <return value="-3" message="" error="CARDINVALIDPIN"/>
      </returns>
    </insertcommand>

  </item>

  <item create="true"  id="104" name="TBREGQRC" friendlyname="QRCodeRegister" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <extendedmodel>
      <![CDATA[SELECT TOP 1 NIDQRC,KEYQRC,DATCAD,DATUPD,	STAREC,	UPDUSU,	CODUSU,	TIPLCT,	VLRMOV,	KEYSND,	'' AS KEYINV FROM TBREGQRC (NOLOCK)]]>
    </extendedmodel>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>

    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>

    <objectclass>
      <item script="true" alias="A." sql="" method="QRCodeArgument" return="int" returnmode="1" procname="" desc ="Objeto de Retenção de Informações de QR-Code" returnvalue="1">
        <query>
          <![CDATA[
DECLARE @RESULT TABLE (
	[KEYQRC] [varchar](36) NOT NULL,
	[NUMAGE] [varchar](15) NOT NULL,
	[NUMCTA] [varchar](13) NOT NULL,
	[CODCMF] [char](15) NOT NULL,
	[NOMUSU] [varchar](70) NOT NULL,
	[KEYSND] [varchar](512) NOT NULL,
	[KEYARG] [varchar](512) NOT NULL  
  )
  
  SELECT * FROM @RESULT
        ]]>

        </query>
      </item>
    </objectclass>

    <insertcommand key="identity" fieldreturn="NIDQRC" exceptionparamns="'DATCAD','DATUPD','KEYQRC'" procname="" method="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[
  
  
      ]]>
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
        <return value="-2" message="" error="PROCESSCARDREQUESTEXISTS"/>
        <return value="-3" message="" error="CARDINVALIDPIN"/>
      </returns>
    </insertcommand>
    <selectcommand>
      <item script="true" alias="A." sql="SELECT top 1 *,dbo.CODEORUNCODE(KEYSND,1) KEYINV FROM TBREGQRC (NOLOCK) A" method="GetKey" return="QRCodeRegister" procname="PRREGQRCSELKEY" desc ="Obtêm o registro de QR-CODE de acordo com a chave fornecida">
        <query><![CDATA[SELECT *,dbo.CODEORUNCODE(KEYSND,1) KEYINV FROM TBREGQRC (NOLOCK) A]]></query>
        <parameters>
          <parameter input="true" apply="true" desc ="Chave do QR Code" name="KEYQRC" type="System.String"  size="36" default="" output="" null="false"/>
        </parameters>
      </item>
      <item script="true" alias="A." sql="" method="GetKey" return="QRCodeRegister" procname="PRREGQRCSELNID" desc ="Obtêm o registro de QR-CODE de acordo com o ID de Registro fornecido">
        <query><![CDATA[SELECT *,dbo.CODEORUNCODE(KEYSND,1) KEYINV FROM TBREGQRC (NOLOCK) A]]></query>
        <parameters>
          <parameter input="true" apply="true" desc ="Id de Registro do QR-Code" name="NIDQRC" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    <methods>
    <item script="true" alias="A." sql="SELECT KEYQRC=CONVERT(VARCHAR(36),KEYQRC) ,NUMAGE=case when isnull(numage,'')='' then '0001' else numage end,NUMCTA=NUMCTA + '-' + NUMDVE,B.CODCMF,NOMUSU,KEYSND,'' AS KEYARG  FROM TBCADCTA (NOLOCK) A INNER JOIN TBCADUSU (NOLOCK) B ON (A.CODUSU = B.CODUSU)  INNER JOIN TBREGQRC (NOLOCK) C  ON (C.NIDQRC = 1)  WHERE A.NIDCTA = 0" method="GetArgument" return="QRCodeArgument" procname="PRREGEXTGETARG" desc ="Obtêm o argumento de QR-Code Gerado">
      <query merge="true">
        <![CDATA[
    DECLARE @NIDCTA INT
	DECLARE @NIDQRC INT
	IF(@VLRMOV IS NULL)
	  SET @VLRMOV=0

	DECLARE @VLRTRA VARCHAR(12) = CASE WHEN (@VLRMOV>0) THEN RIGHT('000000000000' +REPLACE(LTRIM(RTRIM(@VLRMOV*100)),'.',''),12)  ELSE '' END
	SELECT @NIDCTA = NIDCTA FROM TBCADCTA (NOLOCK) WHERE CODUSU=@CODUSU AND ORGCTA=1 AND STAREC=1 AND STACTA=250

	DECLARE @KEYSND VARCHAR(512) = right('00000000' + convert(varchar(8), getdate(),112),8)
					  +	LEFT(replace(convert(varchar(125), getdate(),114),':',''),6)
					  +	RIGHT('000' + CONVERT(VARCHAR(3),@TIPLCT),3) 
	                  + RIGHT('00000000' + CONVERT(VARCHAR(8),@NIDCTA),8)

	IF(@VLRTRA<>'')
	  SET @KEYSND = @KEYSND + @VLRTRA

	DECLARE @KEYQRC VARCHAR(36)

    INSERT INTO TBREGQRC ( STAREC,  CODUSU,  TIPLCT,  VLRMOV)
    VALUES               (      1, @CODUSU, @TIPLCT, @VLRMOV)
	IF(@@ERROR=0)
		SET @NIDQRC = @@IDENTITY
		BEGIN
			IF(@NIDQRC>0)
				BEGIN
					SELECT @KEYQRC = CONVERT(VARCHAR(36), KEYQRC) FROM TBREGQRC WHERE NIDQRC=@NIDQRC
					IF(@KEYQRC<>'')
						BEGIN
							SET @KEYSND = @KEYSND + REPLACE(@KEYQRC,'-','')
							UPDATE TBREGQRC SET KEYSND = dbo.CODEORUNCODE(@KEYSND,0) WHERE NIDQRC=@NIDQRC
						END
				END
		END

    SELECT KEYQRC=CONVERT(VARCHAR(36),KEYQRC)	
  		  ,NUMAGE=case when isnull(numage,'')='' then '0001' else numage end
          ,NUMCTA=NUMCTA + '-' + NUMDVE 
          ,CODCMF= LTRIM(RTRIM(B.CODCMF))
          ,NOMUSU=LTRIM(RTRIM(NOMUSU))
          ,KEYSND
          ,KEYARG=''

  FROM TBCADCTA (NOLOCK) A
 INNER JOIN TBCADUSU (NOLOCK) B 
    ON (A.CODUSU = B.CODUSU)
 INNER JOIN TBREGQRC (NOLOCK) C 
    ON (C.NIDQRC = @NIDQRC)
 WHERE A.NIDCTA = @NIDCTA
        ]]>
      </query>
      <parameters>
        <parameter input="true" apply="false" desc ="Tipo de Lançamento" name="TIPLCT" type="System.Int16" default="" output="" null="false"/>
        <parameter input="true" apply="false" desc ="Código do Usuário" name="CODUSU"  type="System.Int32" default="" output="" null="false"/>
        <parameter input="true" apply="false" desc ="Valor da Operação" name="VLRMOV"  type="System.Double" default="" output="" null="true"/>
      </parameters>
    </item>
    </methods>

  </item>


  <item create="true"  id="105" name="TBREGSMS" friendlyname="SMSRegister" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>

    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <insertcommand key="identity" fieldreturn="NIDMSG" exceptionparamns="'DATCAD','DATUPD'" procname="" method="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        <![CDATA[
          SET @MSGNU1 = RIGHT('0000000000' + CONVERT(VARCHAR(10), CAST(RAND(CHECKSUM(NEWID())) * 32765 as INT)),4)	
          SET @MSGNU2 = RIGHT('0000000000' + CONVERT(VARCHAR(10), CAST(RAND(CHECKSUM(NEWID())) * 32764 as INT)),4)	
          
          IF(@MSGFRO='' OR @MSGFRO IS NULL)
             SET @MSGFRO='LIVRE'
         
          IF(@MSGCMF<>'')
             IF(EXISTS(SELECT 1 FROM TBCADUSU (NOLOCK) WHERE CODCMF = @MSGCMF AND STAREC=1))
                BEGIN 
                  SELECT @MSGNOM = NOMUSU, @MSGUSU=CODUSU FROM TBCADUSU (NOLOCK) WHERE CODCMF = @MSGCMF AND STAREC=1
                  SET @MSGEXI=1
                END

      ]]>
      </pre>
      <body></body>
      <pos>
        <![CDATA[
      
      IF(@RETURN_VALUE >0)
        BEGIN
            UPDATE TBREGSMS 
               SET MSGSND = REPLACE(@MSGSND,'@MSGNU1@',@MSGNU1),
                   MSGSTO = MSGCEL
             WHERE NIDMSG = @RETURN_VALUE;                   
        END
      
      ]]>

        </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="Identity" exceptionparamns="'DATCAD'" procname="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD=GETDATE()
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>


    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="SMSRegister" procname="PRSMSREGSEL" desc ="Seleciona o registro de envio de sms">
        <query>
          <![CDATA[SELECT * FROM TBREGSMS (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de SMS" name="NIDMSG" type="int" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
    </item>


  <item create="true"  id="106" name="TBCADMCC" friendlyname="Merchant Category Code" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>

    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <insertcommand key="key" fieldreturn="" exceptionparamns="'DATCAD','DATUPD'" procname="" method="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="Key" exceptionparamns="'DATCAD'" procname="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
        SET @DATUPD=GETDATE()
      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>

    <selectallcommand>
      <item script="true" alias="A." sql="" method="SelectAll" return="DataTable" procname="" desc ="Seleciona todos os registros de MCC">
        <query>
          <![CDATA[
SELECT CODMCC, DSCMCC, TIPLCT, ISNULL(B.DSCTAB,'') DSCLCT,  A.STAREC, ISNULL(C.DSCTAB,'') DSCREC
FROM TBCADMCC (NOLOCK) A 
INNER JOIN TBTABGER (NOLOCK) B
   ON (B.NUMTAB = 36  AND B.KEYCOD = A.TIPLCT)
INNER JOIN TBTABGER (NOLOCK) C
   ON (C.NUMTAB =  7  AND C.KEYCOD = A.STAREC)          
        ]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código da categoria do comerciante" name="CODMCC" type="System.String" size="4" sysnull="true" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Indicador de Lançamento" name="TIPLCT" type="System.Int16" sysnull="true" default="" output="" null="true"/>
          <parameter input="true" apply="true" desc ="Descrição do MCC" name="DSCMCC" type="System.String" size="50" sysnull="true" default="" output="" null="true"/>
        </parameters>
      </item>
    </selectallcommand>


    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="MerchantCategoryCode" procname="" desc ="Seleciona o registro de envio de sms">
        <query>
          <![CDATA[SELECT * FROM TBCADMCC (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="Código da categoria do comerciante" name="CODMCC" type="System.String" size="4" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
  </item>

  <item create="true"  id="107" name="TBREGPAY" friendlyname="PaySmartTransactions" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>

    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <insertcommand key="identity" fieldreturn="NIDPAY" exceptionparamns="'DATCAD','DATUPD'" procname="" method="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD'" procname="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>

      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>


    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="PaySmartTransactions" procname="" desc ="Seleciona o registro de uma transação pay smart">
        <query>
          <![CDATA[SELECT * FROM TBREGPAY (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Transação PaySmart" name="NIDPAY" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
  </item>
  <item create="true"  id="108" name="TBASSCRT" friendlyname="AssociatedCard" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>

    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>

    <selectcommand>
      <item script="true" alias="B." sql="SELECT TOP 1 * FROM TBREGCRT (NOLOCK)" method="Select" return="CadastroCartoes" procname="" desc ="Seleciona o registro do cartão com base em um id externo">
        <query>
          <![CDATA[
SELECT B.* FROM TBASSCRT  (NOLOCK) A
 INNER JOIN TBREGCRT (NOLOCK) B 
    ON (A.NUMCRT = B.NUMCRT)
 WHERE (A.IDPCRT=@IDPCRT)

          ]]>
        </query>
        <parameters>
          <parameter input="true" apply="false" desc ="ID PaySmart" alias="A." name="IDPCRT" type="System.String"  size="40" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
  </item>

  <item create="true"  id="107" name="TBREGPAE" friendlyname="PaySmartCardsIssuer" modelversion="3">
    <UpdateKey>Key</UpdateKey>
    <audit>FALSE</audit>
    <keyaudit></keyaudit>
    <FilterSelect>False</FilterSelect>
    <listselect></listselect>
    <CSharpPartial>False</CSharpPartial>
    <SqlTable></SqlTable>

    <procedure>1111000000</procedure>
    <asp>1111000000</asp>
    <csharp>1111000000</csharp>
    <insertcommand key="identity" fieldreturn="NIDPAE" exceptionparamns="'DATCAD','DATUPD','EMICOD','EMCARD','EMIKEY' " procname="" method="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>
      </pre>
      <body></body>
      <pos>
      </pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </insertcommand>
    <updatecommand key="identity" exceptionparamns="'DATCAD','EMICOD','EMCARD','EMIKEY'" procname="">
      <maxfield field=""/>
      <nextnumber field="" id="" />
      <pre>

      </pre>
      <body></body>
      <pos></pos>
      <returns>
        <return value="-1" message="" error="FAILALL"/>
      </returns>
    </updatecommand>


    <selectcommand>
      <item script="true" alias="A." sql="" method="Select" return="PaySmartCardsIssuer" procname="" desc ="Seleciona o registro de uma transação pay smart">
        <query>
          <![CDATA[SELECT * FROM TBREGPAE (nolock) A]]>
        </query>
        <parameters>
          <parameter input="true" apply="true" desc ="ID do Registro de Emissão de Cartoes" name="NIDPAE" type="System.Int32" default="" output="" null="false"/>
        </parameters>
      </item>
    </selectcommand>
  </item>  
  <lists>
    <item reference="0" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="TabelaGeralIndice" return="DataTable" procname="" desc ="Seleciona todos os Códigos de Índices da Tabela Geral">
      <query>
        <![CDATA[select keycod, dsctab from tbtabger (nolock) where numtab=0 and starec=1 order by keycod]]>
      </query>
    </item>

    <item reference="1" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="Paises" return="DataTable" procname="" desc ="Seleciona todos os Códigos de País">
      <query>
      </query>
    </item>
    <item reference="2" procbase="PRTABGERTXT" alias="A." sql="" type="" method="UF" return="DataTable" procname="" desc ="Obtêm todas as unidades da federação cadastradas">
      <query>
      </query>
    </item>

    <item reference="5" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="NiveisAplicacao" return="DataTable" procname="" desc ="Seleciona os registros de níveis de aplicação">
      <query>
      </query>
    </item>

    <item reference="7" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="StatusRegistro" return="DataTable" procname="" desc ="Obtêm os Códigos de Status de Registro">
      <query>
        <![CDATA[select keycod, dsctab from tbtabger (nolock) where numtab=7 and starec=1 order by keycod]]>
      </query>
    </item>
    <item reference="828" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="StatusVendas" webmethod="StatusRegistroUsuario" return="DataTable" procname="PRREGPOSLSTSTAREC" desc ="Obtêm os Códigos de Status de Registro da tabela de vendas associado a tabela de status de registro">
      <query>

      </query>
    </item>

    <item reference="8" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="TipoUsuario" return="DataTable" procname="" desc ="Seleciona todos os Códigos de Tipo de Usuário">
      <query>
      </query>
    </item>
    <item reference="9" procbase="PRTABGERTXT" script="true" alias="A." sql="" type="" method="PersonalidadeJuridica" return="DataTable" procname="" desc ="Seleciona todos os registros de personalidade jurídica">
      <query>
      </query>
    </item>

    <item reference="10" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="SinalOperacao" return="DataTable" procname="" desc ="Seleciona todos os Códigos de Sinal de Operações">
      <query>
      </query>
    </item>

    <item reference="12" procbase="PRTABGERTXT" script="true" alias="A." sql="" type="" method="Bancos" return="DataTable" procname="" desc ="Seleciona todos os Códigos de Bancos">
      <query>
      </query>
    </item>

    <item reference="13" procbase="PRTABGERTXT" script="true" alias="A." sql="" type="" method="TipoPessoa" return="DataTable" procname="" desc ="Seleciona todos os Códigos de Tipos de Pessoas">
      <query>
      </query>
    </item>

    <item reference="14" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="Modulos" return="DataTable" procname="" desc ="Seleciona todos os Códigos de Modulos">
      <query>
      </query>
    </item>
    <item reference="15" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="Perfil" return="DataTable" procname="" desc ="Seleciona todos os Perfis de Usuario">
      <query>
      </query>
    </item>

    <item reference="16" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="TipoBoleto" return="DataTable" procname="" desc ="Obtêm todos os códigos de tipo de boleto">
      <query>
      </query>
    </item>
    <!--<item reference="16" procbase="" script="true" alias="A." sql="" type="" method="TipoBoleto" webmethod="TipoBoletoReferencia" return="DataTable" procname="" desc ="Obtêm todos os códigos de tipo de boleto por referencia de visualização">
      <query>SELECT KEYCOD, DSCTAB FROM TBTABGER (NOLOCK) A WHERE STAREC=1
      </query>
      <parameters>
        <parameter input="true" apply="true" desc ="Valor de Referência " name="NUMREF" type="System.Int32" default="" output="" null=""/>
      </parameters>

    </item>-->

    <item reference="20" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="TipoBeneficiario" return="DataTable" procname="" desc ="Seleciona todos os Tipos de Beneficiarios">
      <query>
      </query>
    </item>
    <item reference="23" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="OrigemConta" return="DataTable" procname="" desc ="Seleciona todos os códigos de definição de origem de conta">
      <query>
      </query>
    </item>

    <item reference="24" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="Tarifas" return="DataTable" procname="" desc ="Seleciona todos os Códigos de Tarifas">
      <query>
      </query>
    </item>
    <item reference="26" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="AcoesRoteiro" return="DataTable" procname="" desc ="Seleciona todos as Ações do Roteiro">
      <query>
      </query>
    </item>
    <item reference="29" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="TipoValor" return="DataTable" procname="" desc ="Seleciona todos os Códigos de Tipo de Valor">
      <query>
      </query>
    </item>
    <item reference="30" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="FormaCobrancaTarifa" return="DataTable" procname="" desc ="Obtêm os códigos de Forma de Cobrança de Tarifa">
      <query>
      </query>
    </item>
    <item reference="31" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="TipoRegistroLote" return="DataTable" procname="" desc ="Seleciona todos os Códigos de Tipo de Registro de Lote">
      <query>
      </query>
    </item>

    <item reference="34" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="RegraComissao" return="DataTable" procname="spl_planocomissionamento" desc ="Seleciona todos os Códigos de Plano de Comissionamento">
      <query>
      </query>
    </item>
    <item reference="35" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="InstrucaoBaixa" return="DataTable" procname="spl_instrucaobaixa" desc ="Seleciona os códigos de tipo de registros de instrucao de baixa">
    </item>

    <item reference="36" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="TipoLancamento" return="DataTable" procname="PRTABGER036" desc ="Seleciona todos os Códigos de Tipo de Lançamento">
      <query>
      </query>
    </item>

    <item reference="37" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="AtributosCadastro" return="DataTable" procname="PRTABGER037" desc ="Seleciona os códigos de atributo do cadastro geral">
      <query>
      </query>
    </item>


    <item reference="38" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="LigacaoUsuario" return="DataTable" procname="spl_ligacaousuario" desc ="Seleciona os registros de identificação de ligação de usuario">
      <query>
        <![CDATA[select keycod, dsctab from tbtabger (nolock) where numtab=38 and starec = 1 order by keycod]]>
      </query>
    </item>

    <item reference="39" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="IndicadorLancamento" return="DataTable" procname="PRTABGER039" desc ="Seleciona todos os Códigos de Indicador de Lançamento">
      <query>
        <![CDATA[select keycod, dsctab from tbtabger (nolock) where numtab=39 and starec=1 order by keycod]]>
      </query>
    </item>
    <item reference="40" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="CodigoGerencialMovimento" return="DataTable" procname="" desc ="Obtêm os códigos gerenciais de movimento">
      <query>
      </query>
    </item>

    <item reference="41" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="SumarioTipoMovimento" return="DataTable" procname="" desc ="Seleciona todos os Códigos de Sumarização de Tipos de Movimento">
      <query>
      </query>
    </item>
    <item reference="42" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="CodigoRecorrencia" return="DataTable" procname="" desc ="Seleciona todos os Códigos de Recorrencia">
      <query>
      </query>
    </item>

    <item reference="43" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="NivelAtribuicao" return="DataTable" procname="" desc ="Seleciona todos os registros de identificação de tipo de usuário">
      <query>
      </query>
    </item>

    <item reference="44" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="LinhaVenda" return="DataTable" procname="PRTABGER044" desc ="Seleciona todos os registros de linha de venda">
    </item>

    <item reference="45" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="Operadoras" return="DataTable" procname="spl_operadoras" desc ="Obtêm os códigos de Operadoras de Telefonia">
    </item>

    <item reference="46" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="Recorrencias" return="DataTable" procname="spl_recorrencias" desc ="Seleciona todas as recorrencias cadastradas">
    </item>

    <item reference="47" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="RegrasValidacaoBoleto" return="DataTable" procname="spl_recorrencias" desc ="Obtêm a lista de regras de validação de boletos">
    </item>

    <item reference="48" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="LinhaCredito" return="DataTable" procname="PRTABGER048" desc ="Seleciona todas as linhas de crédito">
    </item>

    <item reference="50" script="true" alias="A." sql="" type="" method="TipoMensalidade" return="DataTable" procname="spl_tipomensalidade" desc ="Seleciona todos os Códigos de Tipo de Mensalidade">
      <query>
        <![CDATA[select keycod, dsctab from tbtabger (nolock) where numtab=50 and starec=1 order by keycod]]>
      </query>
    </item>

    <item reference="51" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="SituacaoPagamento" return="DataTable" procname="" desc ="Seleciona todos os tipos de situação de pagamento">
      <query>
      </query>
    </item>

    <item reference="51" script="true" alias="A." sql="" type="" method="SituacaoPagamento" webmethod="SituacaoPagamentoUsuario" return="DataTable" procname="PRTABGER051" desc ="Seleciona todos os tipos de situação de pagamento associado ao registro de vendas conforme o usuário">
      <query>
        <![CDATA[SELECT DISTINCT A.SITPGT KEYCOD, B.DSCTAB FROM TBREGPOS (NOLOCK) A INNER JOIN TBTABGER (NOLOCK) B ON (51 = B.NUMTAB AND A.SITPGT = B.KEYCOD)]]>
      </query>
      <parameters>
        <parameter input="true" apply="true" desc ="Código do Usuário" name="USUDLC" type="System.Int32" default="" output="" null="false"/>
      </parameters>
    </item>
    <item reference="53" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="TipoComissao" return="DataTable" procname="" desc ="Seleciona todos os códigos de tipo de comissão">
      <query>
      </query>
    </item>
    <item reference="54" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="NivelConfianca" return="DataTable" procname="" desc ="Obtêm as referências de nível de confiança">
    </item>
    <item reference="55" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="SumarioMovimento" return="DataTable" procname="" desc ="Obtêm as referências de sumarização de códigos de movimento">
    </item>
    <item reference="56" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="OrigemAtivacaoCartao" return="DataTable" procname="" desc ="Obtêm as referências de origem de ativação de cartões">
    </item>
    <item reference="57" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="LinhaLancamento" return="DataTable" procname="" desc ="Obtêm as referências de linhas de lancamento">
    </item>

    <item reference="58" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="RegrasDeAcesso" return="DataTable" procname="spl_regrasacesso" desc ="Seleciona todos os Códigos de Regra de Acesso à Plataforma Livre">
      <query>
        <![CDATA[select keycod, dsctab from tbtabger (nolock) where numtab=58 and starec=1 order by keycod]]>
      </query>
    </item>
    <item reference="59" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="TipoRegistroMovimento" return="DataTable" procname="" desc ="Seleciona todos os códigos de Tipo de Registro de Movimento">
      <query>
      </query>
    </item>
    <item reference="60" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="CodigosAcesso" return="DataTable" procname="PRTABGER060" desc ="Seleciona todos os códigos de acesso e permissão de oprações">
    </item>
    <item reference="63" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="Bandeiras" return="DataTable" procname="" desc ="Seleciona todos os códigos de bandeiras de crédito cadastradas">
      <query>
      </query>
    </item>
    <item reference="63" script="true" alias="A." sql="" type="" method="Bandeiras" webmethod="BandeirasUsuario" return="DataTable" procname="PRTABGER063" desc ="Seleciona todos os códigos de Bandeiras em situação de Vendas por cliente">
      <query>
        <![CDATA[SELECT DISTINCT A.CODBND, B.DSCTAB FROM TBREGPOS (NOLOCK) A INNER JOIN TBTABGER (NOLOCK) B ON (63 = B.NUMTAB AND A.CODBND = B.KEYCOD)]]>
      </query>
      <parameters>
        <parameter input="true" apply="true" desc ="Código do Usuário" name="USUDLC" type="System.Int32" default="" output="" null="false"/>
      </parameters>
    </item>

    <item reference="65" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="TipoAcesso" return="DataTable" procname="PRTABGER065" desc ="Seleciona todos os tipos de acesso cadastrados">
      <query>
        <![CDATA[select keycod, dsctab from tbtabger (nolock) where numtab=65 and starec=1 order by keycod]]>
      </query>
    </item>
    <item reference="66" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="Adquirentes" return="DataTable" procname="" desc ="Seleciona todos os tipos de adquirentes">
      <query>
        <![CDATA[select keycod, dsctab from tbtabger (nolock) where numtab=66 and starec=1 order by keycod]]>
      </query>
    </item>

    <item reference="68" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="TipoCartao" return="DataTable" procname="PRTABGER068" desc ="Seleciona todos os tipos de cartão">
      <query>
        <![CDATA[select keycod, dsctab from tbtabger (nolock) where numtab=68 and starec=1 order by keycod]]>
      </query>
    </item>

    <item reference="69" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="RamoAtividade" return="DataTable" procname="PRTABGER069" desc ="Seleciona todos os códigos de ramo de atividade">
      <query>
        <![CDATA[select keycod, dsctab from tbtabger (nolock) where numtab=69 and starec=1 order by keycod]]>
      </query>
    </item>
    <item reference="70" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="StatusRecargaLote" return="DataTable" procname="PRTABGER070" desc ="Seleciona todos os códigos de status de recarga de lote">
      <query>
        <![CDATA[select keycod, dsctab from tbtabger (nolock) where numtab=70 and starec=1 order by keycod]]>
      </query>
    </item>
    <item reference="70" procbase=""  script="true" alias="A." sql="" type="" method="StatusRecargaLoteUsuario" return="DataTable" procname="PRTABGERRECLOT" desc ="Seleciona todos os códigos de recarga de lote para o usuario">
      <query>
        <![CDATA[select keycod, dsctab from tbtabger (nolock) where numtab=70 and starec=1 and numref=1 order by keycod]]>
      </query>
    </item>
    <item reference="71" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="ProcessadoraCartao" return="DataTable" procname="" desc ="Seleciona todos os códigos de processadora de cartões">
    </item>
    <item reference="72" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="TipoMenu" return="DataTable" procname="" desc ="Seleciona todas as opções de processamento de menus">
    </item>
    <item reference="73" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="IdentificacaoMenu" return="DataTable" procname="" desc ="Seleciona todas os tipos de menus">
    </item>

    <item reference="102" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="TipoLancamentoTransferencia" return="DataTable" procname="PRTABGER102" desc ="Seleciona todos os registros de tipo de lancamento transferencias">
      <query>
        <![CDATA[select keycod, dsctab from tbtabger (nolock) where numtab=102 and starec=1 order by keycod]]>
      </query>
    </item>

    <item reference="104" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="ConfiguracaoProduto" return="DataTable" procname="PRTABGER104" desc ="Seleciona todos os registros de tipo de lancamento transferencias">
    </item>
    <item reference="105" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="ResponsavelTarifa" return="DataTable" procname="PRTABGER105" desc ="Seleciona todos os registros de responsabilidade de tarifa">
    </item>

    <item reference="302" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="TransacoesRede" return="DataTable" procname="" desc ="Seleciona todos os registros de transacoes Rede">
      <query>
        <![CDATA[select keycod, dsctab from tbtabger (nolock) where numtab=302 and starec=1 order by keycod]]>
      </query>
    </item>

    <item reference="305" procbase="PRTABGERTXT" script="true" alias="A." sql="" type="" method="FinalidadesTED" return="DataTable" procname="PRTABGER304305" desc ="Seleciona todos os Códigos de Finalidades de Mesma titularidade">
      <query>
        <![CDATA[select keytxt, dsctab from tbtabger (nolock) where numtab = 305 and starec=1 order by keytxt]]>
      </query>
    </item>
    <item reference="907" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="InstrucaoBaixaRegistro" return="DataTable" procname="spl_instrucaobaixa" desc ="Seleciona os códigos de tipo de registros de instrucao de baixa">
    </item>

    <item reference="911" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="BaixaBoletoTipoValor" return="DataTable" procname="" desc ="Seleciona todos os Códigos de Tipo de Valor de contabilização de Bixa de Boleto">
      <query>
      </query>
    </item>
    <item reference="912" procbase="PRTABGERCOD" script="true" alias="A." sql="" type="" method="TipoAdiantamentoDepositante" return="DataTable" procname="" desc ="Lista os tipos de adiantamento a depositante">
      <query>
      </query>
    </item>
  
    <item reference="920" script="true" alias="A." sql="" type="" method="BaixaBoletoTipoRegistro" return="DataTable" procname="PRTABGER920" desc ="Seleciona todos os Códigos de Tipo de Registro de contabilização de Bixa de Boleto">
      <query>
        <![CDATA[select keycod, dsctab from tbtabger (nolock) where numtab=920 and starec=1 order by keycod]]>
      </query>
    </item>
    <item reference="0" script="false" alias="A." sql="" type="" method="Produtos" return="DataTable" procname="PRCADPROLST" desc ="Seleciona todos os Produtos">
    </item>
    <!--<item reference="0" script="false" alias="A." sql="" type="" method="StatusTransacao" return="DataTable" procname="PRCADSTALST" desc ="Obtêm todos os status de registro de transação">
      <query order="CODSTA">
        <![CDATA[SELECT CODSTA, DSCSTA FROM TBCADSTA (NOLOCK) A WHERE STAREC=1]]>
      </query>
    </item>-->

    <item reference="0" script="true" alias="A." sql="" type="" method="StatusTransacao" webmethod="StatusTransacaoModulo" return="DataTable" procname="PRCADSTALSTMOD" desc ="Obtêm todos os Status de registro de transação específicos à módulo">
      <query order="CODSTA">
        <![CDATA[SELECT CODSTA, DSCSTA FROM TBCADSTA (NOLOCK) A WHERE STAREC=1]]>
      </query>
      <parameters>
        <parameter input="true" apply="true" desc ="Código do Módulo" name="CODMOD" sysnull="true" type="System.Int16" default="" output="" null="true"/>
      </parameters>
    </item>

    <item reference="0" script="true" alias="A." sql="" type="" method="StatusTransacaoReferencia" return="DataTable" procname="PRCADSTALSTREF" desc ="Obtêm todos os Status de Transação agrupados por referência de acordo com o modulo">
      <query order="CODSTA">
        <![CDATA[SELECT A.CODSTA, A.DSCSTA FROM TBCADSTA (NOLOCK) A INNER JOIN (SELECT DISTINCT CASE WHEN STAREF=0 THEN CODSTA ELSE STAREF END CODSTA FROM TBCADSTA (NOLOCK)) B ON (B.CODSTA = A.CODSTA) ]]>
      </query>
      <parameters>
        <parameter input="true" apply="true" desc ="Código do Módulo" name="CODMOD" sysnull="true" type="System.Int16" default="" output="" null="true"/>
      </parameters>
    </item>


    <!--<item reference="0" script="true" alias="A." sql="" type="" method="StatusTransacao" return="DataTable" procname="PRCADSTALST" desc ="Seleciona o Status relacionado a um determinado módulo">
      <query order="CODSTA">
        <![CDATA[SELECT CODSTA, DSCSTA FROM TBCADSTA (NOLOCK) A WHERE STAREC=1]]>
      </query>
      <parameters>
        <parameter input="true" apply="true" desc ="Código do Módulo" name="CODMOD" sysnull="true" type="System.Int16" default="" output="" null="true"/>
        <parameter input="true" apply="true" desc ="Código do Status" name="CODSTA" sysnull="true" type="System.Int16" default="" output="" null="true"/>
      </parameters>
    </item>-->

    <item reference="0" script="true" alias="A." sql="" type="" method="SubProdutos" return="DataTable" procname="PRCADSPRLSTCOD" desc ="Seleciona todos os SubProdutos">
      <query>
        <![CDATA[select codspr , dscspr from tbcadspr (nolock) A where starec=1]]>
      </query>
    </item>
    <item reference="0" script="true" alias="A." sql="" type="" method="TipoConta" return="DataTable" procname="PRTIPCTASELTIP" desc ="Seleciona todos os Tipos de Conta">
      <query>
        <![CDATA[select tipcta, dsccta from tbtipcta (nolock) where starec=1]]>
      </query>
    </item>
    <item reference="0" script="true" alias="A." sql="" type="" method="TipoContato" return="DataTable" procname="PRTIPCTOSELTIP" desc ="Seleciona todos os Tipos de Contato">
      <query>
        <![CDATA[select tipcto, dsccto from tbtipcto (nolock) where starec=1 order by tipcto]]>
      </query>
    </item>
    <item reference="0" script="true" alias="A." sql="" type="" method="TipoEndereco" return="DataTable" procname="PRTIPENDSELTIP" desc ="Seleciona todos os Tipos de Endereço">
      <query>
        <![CDATA[select tipend, dscten from tbtipend (nolock) where starec=1 order by tipend]]>
      </query>
    </item>
    <item reference="0" script="true" alias="A." sql="" type="" method="TipoLogradouro" return="DataTable" procname="PRTIPLOGSELTIP" desc ="Seleciona todos os Tipos de Logradouro">
      <query>
        <![CDATA[select TIPLOG, DSCLOG FROM TBTIPLOG (NOLOCK) WHERE starec=1 ORDER BY DSCLOG]]>
      </query>
    </item>

    <item reference="3"  procbase="PRCADUSUTIP" script="true" alias="A." sql="" type="" method="Gestores" return="DataTable" procname="" desc ="Obtêm a Lista de Gestores">
      <query>
      </query>
    </item>

    <item reference="4"  procbase="PRCADUSUATR" script="true" alias="A." sql="" type="" method="Fornecedores" return="DataTable" procname="" desc ="Obtêm a Lista de Funcionários">
      <query>
      </query>
    </item>

    <item reference="7" procbase="PRCADUSUTIP" script="true" alias="A." sql="" type="" method="Credenciados" return="DataTable" procname="" desc ="Obtêm a Lista de Credenciados">
      <query>
      </query>
    </item>

    <item reference="8" procbase="PRCADUSUATR" script="true" alias="A." sql="" type="" method="Funcionarios" return="DataTable" procname="" desc ="Obtêm a Lista de Funcionários">
      <query>
      </query>
    </item>
    <item reference="9" procbase="PRCADUSUATR" script="true" alias="A." sql="" type="" method="Credenciadores" return="DataTable" procname="" desc ="Obtêm a Lista de Credenciadores">
      <query>
      </query>
    </item>

    <item reference="" procbase=""  script="false" alias="A." sql="" type="" method="CredenciadoresVinculados" return="DataTable" procname="" desc ="Seleciona todos os credenciadores vinculados ao cadastro de credenciamento">
      <query>
        <![CDATA[SELECT DISTINCT CODCDO , B.NOMUSU NOMUSU FROM CRCADCRE (NOLOCK) A INNER JOIN TBCADUSU (NOLOCK) B ON (A.CODCDO = B.CODUSU) ORDER BY B.NOMUSU]]>
      </query>
    </item>



    <item reference="0" script="true" alias="A." sql="" type="" method="TipoMovimento" return="DataTable" procname="PRTIPMOVLST" desc ="Seleciona todos os Tipos de Movimento">
      <query>
        <![CDATA[select codmov, (CASE WHEN SIGOPE = 1 THEN 'CRÉDITO - ' ELSE ' DÉBITO - ' END + dscmov) AS DSCMOV from tbtipmov (nolock) where starec=1 ORDER BY (CASE WHEN SIGOPE = 1 THEN 'CRÉDITO - ' ELSE ' DÉBITO - ' END + dscmov)]]>
      </query>
    </item>
    <item reference="0" script="false" alias="A." sql="" type="" method="Gestor" return="DataTable" procname="PRUSUPROLSTGST" desc ="Obtêm a lista de gestores de produtos">
      <query>
      </query>
      <parameters>
        <parameter input="true" apply="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" sysnull="true" default="" output="" null="true"/>
        <parameter input="true" apply="true" desc ="Código do Produto" name="CODPRO" type="System.Int32" sysnull="true" default="" output="" null="true"/>
      </parameters>
    </item>
    <item reference="0" script="false" alias="A." sql="" type="" method="GestorUsuario" return="DataTable" procname="PRUSUPROLSTUSU" desc ="Obtêm a lista de usuarios associados ao gestor de produtos">
      <query order="">
      </query>
      <parameters>
        <parameter input="true" apply="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="true"/>
      </parameters>
    </item>
    <item reference="0" script="true" alias="C." sql="" type="" method="UsuariosCC" return="DataTable" procname="PRREGCCRUSUCCRLST" desc ="Recupera a lista de usuario com movimentação no conta corrente de acordo com o status da conta">
      <query order="B.NOMUSU">
        <![CDATA[
SELECT DISTINCT A.CODUSU, B.NOMUSU,
    RIGHT('00000000000' +C.NUMCTA,11) +'-'+ C.NUMDVE AS NUMCCR, D.DSCSTA,
    LEFT(LTRIM(RTRIM(B.NOMUSU)) + REPLICATE('#',70),70) + ' - [' + RIGHT('00000000000' +C.NUMCTA,11) +'-'+ C.NUMDVE  as NOMEXT
  FROM TBREGCCR (NOLOCK) A
 INNER JOIN TBCADUSU (NOLOCK) B
    ON (A.CODUSU = B.CODUSU)
 INNER JOIN TBCADCTA (NOLOCK) C
    ON (C.CODUSU = A.CODUSU)
 INNER JOIN TBCADSTA (NOLOCK) D
    ON (C.STACTA = D.CODSTA)
 WHERE A.CODUSU > 0 AND (C.ORGCTA=1 OR (C.ORGCTA=2 AND B.CODATR=7))
        ]]>
      </query>
      <parameters>
        <parameter input="true" apply="true" desc ="Status da Conta" name="STACTA" type="System.Int16" sysnull="true" default="" output="" null="true"/>
      </parameters>

    </item>

    <item reference="0" script="true" alias="A." sql="" type="" method="MaquinasDisponiveis" return="DataTable" procname="PRCADMAQLSTDSP" desc ="Lista máquinas disponíveis para atribuição">
      <query order="numser">
        <![CDATA[select nidmaq , ltrim(rtrim(numser)) dscmaq from tbcadmaq (nolock) A where stamaq=240 and starec=1 and ltrim(rtrim(isnull(numser,'')))<>'']]>
      </query>
      <parameters>
        <parameter input="true" apply="true" desc ="Usuário Proprietário" name="USUOWN" type="System.Int32" default="" output="" null="false"/>
      </parameters>
    </item>
    <item reference="0" script="true" alias="A." sql="" type="" method="Maquinas" return="DataTable" procname="PRCADMAQLSTALL" desc ="Lista todas as máquinas">
      <query order="numser">
        <![CDATA[select nidmaq , ltrim(rtrim(numser)) dscmaq from tbcadmaq (nolock) A WHERE STAREC=1 AND STAMAQ NOT IN (241,242,243) and ltrim(rtrim(isnull(numser,'')))<>'']]>
      </query>
      <parameters>
        <parameter input="true" apply="true" desc ="Usuário Proprietário" name="USUOWN" type="System.Int32" default="" output="" null="false"/>
      </parameters>
    </item>
    <item reference="0" script="true" alias="A." sql="" type="" method="Estabelecimento" return="DataTable" procname="PRCADUSUESTUSR" desc ="Lista os estabelecimentos associados a um determinado usuário">
      <query>
        <![CDATA[SELECT CODUSU, NOMUSU FROM TBCADUSU (NOLOCK) A WHERE CODATR=5 AND STAREC=1 AND STAUSU=61]]>
      </query>
      <parameters>
        <parameter input="true" apply="true" desc ="Código do Usuário Chave de Estabelecimento" name="SRCUSU" type="System.Int32" default="" output="" null="false"/>
      </parameters>
    </item>
    <item reference="0" script="true" alias="A." sql="" type="" method="FornecedoresMaquinas" return="DataTable" procname="PRCADMAQLSTFOR" desc ="Lista todos os fornecedores de Máquinas POS">
      <query>
        <![CDATA[select distinct codusu, nomusu from tbcadusu  (nolock) a inner join tbcadmaq (nolock) b  on (a.codusu = b.usuown) where a.starec=1 and b.starec=1 and a.stausu=61 and a.codatr=4]]>
      </query>
    </item>
    <item reference="0" script="true" alias="A." sql="" type="" method="UsuarioBoleto" return="DataTable" procname="PRREGBOLLSTUSU" desc ="Obtêm a lista de usuários ativos para geração de um novo boleto">
      <query>
        <![CDATA[
    /*
	   Códigos de Usuário
	   
	       usuario com status de registro ativo = STAREC = 1 
		   usuario com status de usuario ativo = STAUSU = 61
		   Atributo = CODATR IN (1 e3) USUARIOS E SACADOS
		   Tipo de usuario = 3 e 4 CLIENTE GESTOR/CLIENTE PORTADOR
		   SRCUSU = ATIVOS E HABILITADOS

	*/

	DECLARE @HASSRC TINYINT =0
	IF(@SRCUSU IS NOT NULL)
		BEGIN
			IF(EXISTS(SELECT 1 FROM TBCADUSU (NOLOCK) A WHERE SRCUSU=@SRCUSU))
				SET @HASSRC = 1
		END
	IF(@HASSRC=1)
		BEGIN
			SELECT CODUSU, NOMUSU, SRCUSU 
			  FROM tbcadusu (nolock) A
		 	 WHERE nomusu<>''  
			   and starec=1 and stausu=61 and codatr in (1,3) 
			   and tipusu in (3,4) 
			   and nomusu<>''
			   and srcusu not in (SELECT CODUSU FROM TBCADUSU WHERE starec=0 or stausu in (62,63) AND CODUSU IN(SELECT SRCUSU FROM TBCADUSU))
			   AND     (@SRCUSU IS NULL OR A.SRCUSU=@SRCUSU)
			 ORDER BY a.NOMUSU
		END
	ELSE
		SELECT CODUSU, NOMUSU, SRCUSU 
			  FROM tbcadusu (nolock) A
		 	 WHERE starec=1 and stausu=61 and codatr in (1,3) 
			   and tipusu in (3,4) 
			   and nomusu<>''
			   and srcusu not in (SELECT CODUSU FROM TBCADUSU WHERE starec=0 or stausu in (62,63) AND CODUSU IN(SELECT SRCUSU FROM TBCADUSU))
	     ORDER BY a.NOMUSU

        ]]>
      </query>
      <parameters>
        <parameter input="true" apply="false" desc ="Usuário de Atribuição" name="SRCUSU" type="System.Int32" sysnull="true" default="" output="" null="true"/>
      </parameters>
    </item>


    <item reference="0" script="true" alias="A." sql="" type="" method="ModalidadesTarifa" return="DataTable" procname="PRTARMODLST" desc ="Lista todos os códigos de modalidade de tarifa">
      <query>
        <![CDATA[select modcrt, dscmod from tbtarmod (nolock) where starec=1 order by modcrt]]>
      </query>
    </item>
    <item reference="0" script="true" alias="A." sql="" type="" method="ContaVirtual" return="DataTable" procname="PRCADCTASELCCVVRT" desc ="Obtêm a lista de contas virtuais">
      <query order="B.NOMUSU">
        <![CDATA[
SELECT NIDCTA,
   CODCMF = dbo.FormatCMF(B.CODCMF),
   NOMUSU = UPPER(B.NOMUSU),
   DSCCTA =REPLACE(LTRIM(RTRIM(NUMCTA)),'-','') + '-' + CAST(NUMDVE AS VARCHAR(1)) + ' - ' + B.NOMUSU
  FROM TBCADCTA (NOLOCK) A
 INNER JOIN TBCADUSU (NOLOCK) B
ON (A.CODUSU=B.CODUSU)
 WHERE A.STAREC = 1
   AND A.STACTA = 250
   AND B.STAUSU = 61
   AND B.STAREC = 1
   AND A.ORGCTA=1
   AND LTRIM(RTRIM(A.NUMCTA))<>''
          ]]>
      </query>
      <parameters>
        <parameter input="true" apply="true" desc ="Código do Usuário" name="CODUSU" sysnull="" type="System.Int32" default="" output="" null="true"/>
        <parameter input="true" apply="true" desc ="Origem da Conta" name="ORGCTA" type="System.Byte" default="1" output="" null="false"/>
      </parameters>
    </item>

    <item reference="0" script="true" alias="A." sql="" type="" method="ContaExterna" return="DataTable" procname="PRCADCTASELCCVEXT" desc ="Obtêm a lista de contas externas">
      <query order="A.NOMBNF">
        <![CDATA[
SELECT NIDCTA
 ,DSCCTA = 	LEFT('[' + LTRIM(RTRIM(A.NUMBCO)) + ' '
    + LTRIM(RTRIM(A.NUMAGE)) + ' '
    + REPLACE(LTRIM(RTRIM(NUMCTA)),'-','') + '-' + CAST(NUMDVE AS VARCHAR(1))+']_________________________',25)
    + RIGHT('_____________________' + dbo.FormatCMF(A.CODCMF),20)
	+ ' - ' + LTRIM(RTRIM(A.NOMBNF))
	+ ' - ' + LTRIM(RTRIM(A.NUMBCO))+ '-' +  ISNULL(C.DSCTAB,'')
  FROM TBCADCTA (NOLOCK) A
 INNER JOIN TBCADUSU (NOLOCK) B
ON (A.CODUSU=B.CODUSU)
  LEFT JOIN TBTABGER (NOLOCK) C
ON (A.NUMBCO = C.KEYTXT AND 12 = C.NUMTAB)
 WHERE A.STAREC = 1
   AND A.STACTA = 250
   AND B.STAUSU = 61
   AND A.STAREC = 1
   AND A.ORGCTA=2
   AND LTRIM(RTRIM(A.NUMCTA))<>''
   AND LTRIM(RTRIM(A.NOMBNF))<>''
   AND LTRIM(RTRIM(A.CODCMF))<>''
 AND     (@CODUSU IS NULL OR A.CODUSU=@CODUSU)
]]>
      </query>
      <parameters>
        <parameter input="true" apply="true" desc ="Código do Usuário" name="CODUSU" sysnull="" type="System.Int32" default="" output="" null="true"/>
      </parameters>
    </item>

    <item reference="0" script="false" alias="A." sql="" type="" method="LinkedAccount" return="DataTable" procname="PRCADCVLSELACT" desc ="Obtêm a lista de contas virtuais associadas para o usuário solicitante">
      <query order=""></query>
      <parameters>
        <parameter input="true" apply="false" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
      </parameters>
    </item>

    <item reference="0" script="false" alias="A." sql="" type="" method="CartaoAtivo" return="DataTable" procname="PRREGCRTSELACT" desc ="Obtêm a lista de cartões ativos associados para o usuário solicitante">
      <query><![CDATA[]]></query>
      <parameters>
        <parameter input="true" apply="false" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
      </parameters>
    </item>
    
    <item script="false" alias="A." sql="" type="" method= "ExtratoContaCorrente" return="DataTable" procname="PRREGCCREXTCCT" desc ="Obtêm o Extrato de conta corrente do usuário especificado">
      <query></query>
      <parameters>
        <parameter input="true" apply="false" desc ="Código do Usuário"            name="CODUSU"  type="System.Int32" default="" output="" null="false"/>
        <parameter input="true" apply="false" desc ="Data Inicial de Movimento"    name="DATMOV1" type="System.String" default="" output="" null="true"/>
        <parameter input="true" apply="false" desc ="Data Final de Movimento"      name="DATMOV2" type="System.String" default="" output="" null="true"/>
        <parameter input="true" apply="false" desc ="Código do Movimento"          name="CODMOV"  sysnull="true" type="System.Int16" default="null" output="" null="true"/>
        <parameter input="true" apply="false" desc ="Indicador de Lançamento"      name="INDLCT"  type="System.Int16" default="2" output="" null="false"/>
      </parameters>
    </item>

    <item reference="0" script="true" alias="A." sql="" type="" method="ProdutosUsuario" return="DataTable" procname="PRCADPROLSTUSU" desc ="Obtêm a lista de produtos associadas ao usuário solicitante">
      <query><![CDATA[SELECT A.CODUSU, B.DSCPRO, A.CODPRO, A.USUPRO FROM TBUSUPRO (NOLOCK) A INNER JOIN TBCADPRO (NOLOCK) B ON (A.CODPRO = B.CODPRO) WHERE A.STAREC = 1 AND B.STAREC = 1 ]]></query>
      <parameters>
        <parameter input="true" apply="true" desc ="Código do Usuário" name="CODUSU" type="System.Int32" default="" output="" null="false"/>
      </parameters>
    </item>

    <item reference="0" script="false" alias="A." sql="" type="" method="LinhaProduto" return="DataTable" procname="PRPROLINSELALL" desc ="Obtêm a lista de Linhas de Produtos existentes">
    </item>

    <item script="true" alias="A." sql="" type="" method= "Menus" return="DataTable" procname="PRCADMNULSTMNU" desc ="Obtêm os códigos de identificação dos menus disponiveis">
      <query order="ORDMNU, LVLMNU">SELECT NIDMNU, DSCMNU FROM TBCADMNU (NOLOCK) A WHERE STAREC=1</query>
      <parameters>
        <parameter input="true" apply="true" desc ="Identificação do Menu" name="IDEMNU" type="System.Byte" default="1" output="" null="true"/>
      </parameters>

    </item>

    <item reference="0" script="false" alias="A." sql="" type="" method="Cartoes" return="DataTable" procname="PRADMCRTLSTCRT" desc ="Obtêm a lista de cartões de acordo com o usuário e produto">
      <query>
        <![CDATA[
      
      ]]>
      </query>
      <parameters>
        <parameter input="true" apply="true" desc ="Gestor" name="USUPRO" type="System.Int32" default="" output="" null="false"/>
        <parameter input="true" apply="true" desc ="Nome do Portador" name="NOMPRT" type="System.String" size="50" default="" output="" null="true"/>
        <parameter input="true" apply="true" desc ="Número do Cartão" name="NUMCRT" type="System.String" size="20" default="" output="" null="true"/>
        <parameter input="true" apply="true" desc ="Código do CMF" name="CODCMF" type="System.String" size="20" default="" output="" null="true"/>
        <parameter input="true" apply="true" desc ="Status do Cartão" name="STACRT" type="System.Int16" sysnull="true" default="" output="" null="true"/>
      </parameters>
    </item>

    <item reference="0" script="true" alias="A." sql="" type="" method="UsuariosCartaoGestor" return="DataTable" procname="PRADMCRTLSTUSU" desc ="Obtêm a lista de usuários de cartões vinculados a um gestor">
      <query>
        <![CDATA[
SELECT DISTINCT ASSUSU AS CODUSU, B.NOMUSU FROM TBADMCRT (NOLOCK) A
 INNER JOIN TBCADUSU (NOLOCK) B
    ON (A.ASSUSU = B.CODUSU)
      ]]>
      </query>
      <parameters>
        <parameter input="true" apply="true" desc ="Código do Gestor" name="USUPRO" type="System.Int32" default="" output="" null="false"/>
      </parameters>
    </item>


    <item reference="0" script="false" alias="A." sql="" type="" method="UserAssociatedCards" return="DataTable" procname="PRREGCRTLSTCRTASS" desc ="Obtêm a Lista de cartões associados à um usuário">
      <query></query>
      <parameters>
        <parameter input="true" apply="true" desc ="Usuário Associado ao Cartão" name="ASSUSU" type="System.Int32" default="" output="" null="true"/>
      </parameters>
    </item>

    <item reference="0" script="true" alias="A." sql="" type="" method="CartoesGestor" return="DataTable" procname="PRADMCRTLSTCRTGST" desc ="Obtêm a lista de cartoes de um determinado gestor">
      <query>
        <![CDATA[
  SELECT ROW_NUMBER() OVER (ORDER BY A.CODCRT) AS INDICE , B.CODCMF [CPF], E.NIDCRT [ID DO CARTAO], 0.00 [VALOR], convert(varchar(10), GETDATE(),103) [DATA],A.NOMPRT [CONTROLE], D.DSCPRO [OBSERVACOES] FROM TBADMCRT (NOLOCK) A
    INNER JOIN TBCADUSU (NOLOCK) B ON (A.ASSUSU= B.CODUSU)
    INNER JOIN TBUSUPRO (NOLOCK) C ON (C.USUPRO = A.USUPRO)
    INNER JOIN TBCADPRO (NOLOCK) D ON (D.CODPRO = C.CODPRO)
    INNER JOIN TBREGCRT (NOLOCK) E ON (E.CODCRT = A.CODCRT)
    ]]>
      </query>
      <parameters>
        <parameter input="true" apply="true" desc ="Código do Gestor" name="USUPRO" type="System.Int32" default="" output="" null="false"/>
      </parameters>
    </item>
    <item reference="" script="true" alias="A." sql="" type="" method="Portadores" return="DataTable" procname="PRADMCRTLSTCRTSTA" desc ="Obtêm a lista de cartoes de um determinado gestor por status">
      <query order="A.NOMPRT">
        <![CDATA[
SELECT A.ASSPRT AS CODPRT, 
	LEFT(ltrim(rtrim(UPPER(A.NOMPRT))) + replicate('_',50),50) + ' - ' +  
          dbo.NumeroCartaoX(A.NUMCRT)  AS NOMPRT 
  FROM TBREGCRT (NOLOCK) A
 WHERE A.CODCRT > 0 
   AND A.STAREC= 1 
   AND A.ASSPRT > 0
   AND ((@STACRT IS NULL) OR (A.STACRT=@STACRT))
	 AND ((@USUPRO IS NULL) OR (A.USUPRO=@USUPRO))
    ]]>
      </query>
      <parameters>
        <parameter input="true" apply="true" desc ="Código do Gestor" name="USUPRO" type="System.Int32" sysnull="true" default="" output="" null="true"/>
        <parameter input="true" apply="true" desc ="Status do Cartão" name="STACRT" type="System.Int16" default="109" output="" null="false"/>
      </parameters>
    </item>


    <item reference="" script="true" alias="A." sql="" type="" method="BancosRecargaTED" return="DataTable" procname="PRCADCTALSTBOLTED" desc ="Obtêm a lista de bancos associados ao Boleto de Recarga por TED">
      <query order="NUMBCO">
        <![CDATA[
SELECT NIDCTA, NUMAGE, NUMBCO, NUMCTA, NUMDVE, CODCMF, NOMBNF FROM TBCADCTA (NOLOCK)
WHERE NIDCTA IN (SELECT KEYCOD FROM TBTABGER (NOLOCK) WHERE NUMTAB=74 AND STAREC=1)
AND ORGCTA=2 AND STAREC=1 AND STACTA=250
    ]]>
      </query>
    </item>

    <item reference="0" script="true" alias="A." sql="" type="" method="CartoesUsuario" return="DataTable" procname="PRREGCRTSELASS" desc ="Seleciona todos os cartões associados a um usuário">
      <query>
        <![CDATA[
    ]]>
      </query>
      <parameters>
        <parameter input="true" desc ="Usuário Associado" name="ASSUSU" type="int" default="" output="" null="false"/>
      </parameters>

    </item>
    <item reference="0" script="true" alias="A." sql="" type="" method="ContasVinculadas" return="DataTable" procname="PRCADCTASELCVL" desc ="Obtêm as contas vinculadas ao usuário">
      <query order="NIDCTA">
        <![CDATA[
    SELECT A.NIDCTA, 
		   ORGCTA, 
       NUMBCO, 
		   NUMAGE = LTRIM(RTRIM(REPLACE(NUMAGE,'-',''))),  
	     NUMCTA = LTRIM(RTRIM(REPLACE(NUMCTA,'-',''))), 
	     NUMDVE, 
	     CODCMF = LTRIM(RTRIM(CASE WHEN (A.ORGCTA=2) THEN A.CODCMF ELSE B.CODCMF END)), 
	     NOMBNF = LTRIM(RTRIM(CASE WHEN (A.ORGCTA=2) THEN A.NOMBNF ELSE B.NOMUSU END)), 
       DSCCTA = 'Conta : ' + LTRIM(RTRIM(REPLACE(NUMCTA,'-',''))) + '-' + NUMDVE 
       + ' - ' + LEFT ( CASE WHEN LEN(LTRIM(RTRIM(A.CODCMF)))=15 THEN 'CNPJ' Else 'CPF ' END + ': ' + dbo.FormatCMF(LTRIM(RTRIM(CASE WHEN (A.ORGCTA=2) THEN A.CODCMF ELSE B.CODCMF END)))+ REPLICATE(' ',25),25 )
       + ' Nome : ' + LTRIM(RTRIM(CASE WHEN (A.ORGCTA=2) THEN A.NOMBNF ELSE B.NOMUSU END))
  FROM TBCADCTA (NOLOCK) A
  LEFT JOIN TBCADUSU (NOLOCK) B 
	  ON (A.CODUSU = B.CODUSU)        
 INNER JOIN TBCADCVL (NOLOCK) C 
 	  ON (C.NIDCTA = A.NIDCTA)        
 WHERE A.STAREC = 1 
   AND A.STACTA = 250     
	AND C.STAREC = 1
    ]]>
      </query>
      <parameters>
        <parameter input="true" apply="true" alias="C." desc ="Código do Usuário" name="CODUSU" type="int" default="" output="" null="false"/>
        <parameter input="true" apply="true" desc ="Origem da Conta" name="ORGCTA" type="System.Byte" default="1" output="" null="false"/>        
      </parameters>
    </item>
    <item reference="" script="true" alias="A." sql="" type="" method="UsuarioContaVirtual" return="DataTable" procname="PRCADCTALSTUSU" desc ="Obtêm a lista de usuários que possuem conta virtual">
      <query order="B.NOMUSU">
        <![CDATA[
SELECT DISTINCT A.CODUSU, B.NOMUSU FROM TBCADCTA (NOLOCK) A 
 INNER JOIN TBCADUSU (NOLOCK) B
    ON (A.CODUSU = B.CODUSU)
 WHERE A.STAREC = 1 
   AND A.ORGCTA = 1
   AND A.STACTA = 250   
   AND LTRIM(RTRIM(B.NOMUSU)) <>''   
    ]]>
      </query>
      <parameters>
        <parameter input="true" desc ="Código do Usuário" name="CODUSU" type="int" sysnull="true" default="" output="" null="true"/>
      </parameters>
    </item>

    <item reference="" script="true" alias="A." sql="" type="" method="GestorBaseLote" return="DataTable" procname="PRUSUPROLSTGSTLOT" desc ="Obtêm a lista de gestores com base na tabela de lotes">
      <query order="B.NOMUSU, D.DSCPRO">
        <![CDATA[
SELECT a.codusu, (b.nomusu + ' ' + d.DSCPRO) as nomgst, a.usupro
  FROM TBUSUPRO (nolock) a
 inner join tbcadusu (nolock) b on (a.codusu = b.codusu)
 inner join tbcadpro (nolock) d on (a.codpro = d.codpro)
 where a.usupro in (select distinct usupro from tbgstlot (nolock) where tiprec=1 and numlot in (select numlot from tbregcrt (nolock) where numlot>0))
]]>
      </query>
      <parameters>
        <parameter input="true" desc ="Código do Usuário" name="CODUSU" type="int" sysnull="true" default="" output="" null="true"/>
      </parameters>
    </item>

    <item reference="" script="true" alias="A." sql="" type="" method="InformacoesContatoUsuario" return="DataTable" procname="PRCADUSULSTINFUSU" desc ="Obtêm as informações de endereço e contato do usuário">
      <query>
        <![CDATA[
SELECT A.CODUSU,
	     A.codcmf,
       A.datnac,
       Isnull(A.tippes, '') AS TIPPES,
       Isnull(A.nommae, '') AS NOMMAE,
       Isnull(B.codufe, '') AS CODUFE,
       Isnull(B.dscend, '') AS DSCEND,
       Isnull(B.numend, '') AS NUMEND,
       Isnull(B.dsccpl, '') AS DSCCPL,
       Isnull(B.dsccid, '') AS DSCCID,
       Isnull(B.dscbai, '') AS DSCBAI,
       Isnull(B1.dsctab, '') AS DSCPAI,
       B.codcep             AS CODCEP,
       Isnull(D.dscend, '') AS DSCMAL,
       C.tipcto,
       C.numddd,
       C.numtel
  FROM TBCADUSU (NOLOCK) A
 INNER JOIN TBCADEND (NOLOCK) B
    ON (B.CODUSU = A.CODUSU)
  LEFT JOIN tbtabger (NOLOCK) B1
    ON ( 1 = B1.numtab AND B.CODPAI = B1.KEYCOD )
  LEFT JOIN TBCADCTO (NOLOCK) C
    ON (C.CODUSU = A.CODUSU)
 INNER JOIN TBCADEND (NOLOCK) D
    ON (D.CODUSU = A.CODUSU)
 WHERE (B.TIPEND in (1,2) AND B.starec = 1  AND B.regatv = 1)
   AND (C.TIPCTO = 3 AND C.STAREC=1 AND C.REGATV=1)
   AND (D.tipend = 3 AND D.starec = 1  AND D.regatv = 1)
]]>
      </query>
      <parameters>
        <parameter input="true" desc ="Código do Usuário" name="CODUSU" type="int" sysnull="true" default="" output="" null="true"/>
      </parameters>
    </item>

    <item reference="" script="true" alias="A." sql="" type="" method="BoletoCedente" return="DataTable" procname="PRREGBOLLSTUSUCED" desc ="Obtêm a lista de usuários cedentes da tabela de boletos">
      <query order="B.NOMUSU">
        <![CDATA[SELECT DISTINCT A.USUCED AS CODUSU, B.nomusu FROM TBREGBOL (NOLOCK) A INNER JOIN TBCADUSU (nolock) b ON (a.usuced = b.codusu)]]>
      </query>
    </item>

    <item script="true" alias="A." sql="" type="" method= "ExtratoSimplificado" return="DataTable" procname="PRREGCCREXTSPF" desc ="Obtêm o Extrato simplificado de conta corrente do usuário especificado">
      <query>
        <![CDATA[
SELECT 
       MAX(DATMOV) DATMOV,
	     '' NIDTRA,
	     0 CODMOV,
	     'SALDO ANTERIOR' DSCMOV,
	     '' DSCCPL,
	     SUM(A.SIGOPE*A.VLRMOV) AS VLRTRA
  FROM TBREGCCR (NOLOCK) A
 WHERE CODUSU = @CODUSU
   AND A.INDLCT = @INDLCT
	 AND DATMOV<@DATMOV1
 UNION 
SELECT
       A.datmov,
       A.NIDTRA,
       A.codmov,
       B.DSCMOV,
       A.dscmov DSCCPL,
       A.SIGOPE*A.VLRMOV AS VLRTRA
  FROM TBREGCCR (NOLOCK) A
 INNER JOIN TBTIPMOV (NOLOCK) B
    ON (A.CODMOV = B.CODMOV)
 where codusu=@CODUSU
   AND A.INDLCT=@INDLCT
   and DATMOV BETWEEN @DATMOV1 AND @DATMOV2     
      ]]>
      </query>
      <parameters>
        <parameter input="true" apply="false" desc ="Código do Usuário"            name="CODUSU"  type="System.Int32" default="" output="" null="false"/>
        <parameter input="true" apply="false" desc ="Data Inicial de Movimento"    name="DATMOV1" type="System.String" default="" output="" null="true"/>
        <parameter input="true" apply="false" desc ="Data Final de Movimento"      name="DATMOV2" type="System.String" default="" output="" null="true"/>
        <parameter input="true" apply="false" desc ="Indicador de Lançamento"      name="INDLCT"  type="System.Int16" default="2" output="" null="false"/>
      </parameters>
    </item>


    <item script="true" alias="A." sql="" type="" method= "CartoesDisponiveis" return="DataTable" procname="PRGSTLOTBATDSP" desc ="Obtêm os lotes disponíveis para agregação de cartões por gestor">
      <query>
        <![CDATA[
SELECT a.numlot, cast(a.numlot as varchar(10)) + ' [' + cast(isnull(b.intcrt,0) as varchar(10)) + ' de ' + cast(numqtd as varchar(10)) + ']' as dscqtd 
  from tbgstlot (nolock) a 
  left join (select numlot, ISNULL(count(codcrt),0) as intcrt from tbregcrt (nolock) group by numlot) b 
	on (a.numlot = b.numlot)
 where a.tiprec=1
   and a.tipbol=6
   and a.starec=1
   and a.numlot >0
   and a.stalot<>122
   and (a.numqtd- isnull(b.intcrt,0))>0
       
      ]]>
      </query>
      <parameters>
        <parameter input="true" apply="true" desc ="Código do Gestor"  name="USUPRO"  type="System.Int32" default="" output="" null="false"/>
      </parameters>
    </item>

    <item script="true" alias="A." sql="" type="" method= "UsuarioCartao" return="DataTable" procname="PRREGCRTLSTUSU" desc ="Obtêm a lista de usuários associaodos ao cartões">
      <query order="A.NOMUSU">
        <![CDATA[
    SELECT CODUSU, NOMUSU        
  FROM (SELECT DISTINCT A1.ASSUSU CODUSU, UPPER(B.NOMUSU) AS NOMUSU
  FROM TBREGCRT (NOLOCK) A1
 INNER JOIN TBCADUSU (NOLOCK) B 
    ON (B.CODUSU = A1.ASSUSU)
 WHERE A1.ASSUSU > 0 AND  (@USUPRO IS NULL OR A1.USUPRO=@USUPRO)) A
       ]]>
      </query>
      <parameters>
        <parameter input="true" apply="false" desc ="Código do Gestor"            name="USUPRO"  type="System.Int32" sysnull="true" default="null" output="" null="false"/>
      </parameters>
    </item>

    <item script="true" alias="A." sql="" type="" method= "UsuarioCartaoAtivo" return="DataTable" procname="PRREGCRTLSTUSUATV" desc ="Obtêm a lista de usuários associaodos ao cartões ativos que possuem conta virtual">
      <query order="A.NOMUSU">
        <![CDATA[
SELECT CODUSU, NOMUSU
FROM (SELECT DISTINCT ASSUSU CODUSU, C1.NOMUSU
  FROM TBREGCRT (NOLOCK) A1
 INNER JOIN TBCADCTA (NOLOCK) B1
    ON (B1.CODUSU = A1.ASSUSU)
 INNER JOIN TBCADUSU (NOLOCK) C1
    ON (C1.CODUSU = A1.ASSUSU)
 WHERE A1.STAREC = 1
   AND A1.STACRT = 109
   AND A1.CODCRT > 0
   AND A1.ASSUSU > 0
   AND B1.STAREC=1
   AND B1.STACTA=250
   AND (@USUPRO IS NULL OR A1.USUPRO=@USUPRO)
   ) A        
       ]]>
      </query>
      <parameters>
        <parameter input="true" apply="false" desc ="Código do Gestor"            name="USUPRO"  type="System.Int32" sysnull="true" default="null" output="" null="false"/>
      </parameters>
    </item>
    <item script="true" alias="A." sql="" type="" method= "UsuariosMaquina" return="DataTable" procname="" desc ="Obtêm a lista de usuários associados as máquinas POS">
      <query order="A.NOMUSU">
        <![CDATA[SELECT DISTINCT usuref CODUSU, B.NOMUSU from tbusumaq (NOLOCK) A inner join TBCADUSU (NOLOCK) B ON (B.CODUSU = A.USUREF) WHERE A.STAREC=1 ORDER BY B.NOMUSU]]>
      </query>
    </item>

    <item script="true" alias="A." sql="" type="" method= "UsuarioTomadorTarifa" return="DataTable" procname="" desc ="Obtêm a lista de usuários tomadores de tarifa">
      <query order="A.NOMUSU">
        <![CDATA[SELECT B.CODUSU, C.NOMUSU FROM TBUSUCFG (NOLOCK) A INNER JOIN TBUSUPRO (NOLOCK) B ON (A.USUCFG = B.USUPRO) INNER JOIN TBCADUSU (NOLOCK) C ON (B.CODUSU = C.CODUSU) WHERE NIVCFG=1 AND A.TOMMEN=1 AND B.CODPRO<>21 ORDER BY C.NOMUSU]]>
      </query>
    </item>

    <item script="true" alias="A." sql="" type="" method= "UsuariosVinculados" return="DataTable" procname="PRLIGUSULSTUSU" desc ="Obtêm a lista de usuários ligados a um determinado usuário com base em um código de atributo">
      <query order="A.NOMUSU">
        <![CDATA[SELECT A.SRCUSU, A.CODUSU, A.NOMUSU, A.CODCMF FROM TBCADUSU (NOLOCK) A WHERE  A.STAREC=1	AND A.NOMUSU <>'']]>
      </query>
      <parameters>
        <parameter input="true" apply="false" desc ="Código do Usuário"  name="USUATR"  type="System.Int32"  default="" output="" null="false"/>
        <parameter input="true" apply="false" desc ="Código do Atributo" name="CODATR"  type="System.Int32"  default="" output="" null="false"/>
      </parameters>
    </item>

    <item script="true" alias="A." sql="" type="" method= "OrigemSuprimentos" return="DataTable" procname="PRGSTFORORIREC" desc ="Obtêm a lista de registros de suprimentos conforme o tipo de origem">
      <query>
        <![CDATA[SELECT NIDFOR, 
      CASE WHEN A.STAREC = 1 THEN ' ' ELSE '*' END + LEFT(B.NOMUSU + REPLICATE(' ', 70), 70) + ' DATA : ' + CONVERT(VARCHAR(10), DATEMI, 103) + ' DOC : ' + NUMDOC AS NOMUSU
  FROM TBGSTFOR(NOLOCK) A
 INNER JOIN TBCADUSU(NOLOCK) B
    ON (B.CODUSU = A.CODFOR)
]]>
      </query>
      <parameters>
        <parameter input="true" apply="true" desc ="Tipo de Registro"  name="TIPREC"  type="System.Byte"  default="" output="" null="false"/>
      </parameters>
    </item>

    <item script="true" alias="A." sql="" type="" method= "UsuariosContaVirtualNome" return="DataTable" procname="PRCADUSULSTUSRCCVNOM" desc ="Obtêm a lista de usuários com conta digital ativa por nome">
      <query order="A.NOMUSU" >
        <![CDATA[
SELECT CODUSU, NOMUSU
  FROM TBCADUSU (NOLOCK) A
 WHERE starec=1 
   and stausu=61 
   and tipusu in (3,4)
   and codusu in (SELECT CODUSU 
                    FROM TBCADCTA (NOLOCK) 
                   WHERE orgcta=1 
                     and starec=1 
                     and stacta=250 
                     and numcta<>'')
       
]]>
      </query>
      <parameters>
        <parameter input="true" apply="true" islike="true" desc ="Nome do Usuário"  name="NOMUSU"  type="System.String"  size="70" default="" output="" null="false"/>
      </parameters>
    </item>


    <item script="true" alias="A." sql="" type="" method= "Usuarios" return="DataTable" procname="PRCADUSULSTATR" desc ="Obtêm a lista de usuarios conforme o Código do Atributo">
      <query order="A.NOMUSU">
        <![CDATA[
IF(@CODATR<=0)
   SET @CODATR=NULL
IF(@CODUSU<=0)
   SET @CODUSU=NULL
 SELECT CODUSU, NOMUSU FROM TBCADUSU (NOLOCK) A  WHERE A.STAREC = 1 AND A.STAUSU = 61  AND LTRIM(RTRIM(NOMUSU))<>''
]]>
      </query>
      <parameters>
        <parameter input="true" apply="true" desc ="Código do Atributo do Cadastro Geral"  name="CODATR"  type="System.Int32"  default="0" output="" null="true"/>
        <parameter input="true" apply="true" desc ="Código do Usuário"  name="CODUSU"  type="System.Int32"  default="0" output="" null="true"/>
      </parameters>
    </item>

    <item script="true" alias="A." sql="" type="" method= "OperacoesFinanceiras" return="DataTable" procname="PRREGCCRLSTOPRFIN" desc ="Obtêm os registros de operações financeiras conforme o tipo de listagem de solicitação" remarks="1 - Transferencias para Outros Bancos (TED)">
      <query order="">
        <![CDATA[
    IF(@TIPLIS=1)
		BEGIN
			DECLARE @RESULT TABLE (
				[NIDCCR] [int] NOT NULL,
				[DATCAD] [datetime] NOT NULL,
				[DATMOV] [datetime] NOT NULL,
				[USUPRO] [int] NOT NULL,
				[CODUSU] [int] NOT NULL,
				[NIDTRA] [varchar](13) NOT NULL,
				[STABOR] [int] NOT NULL,
				[CODPRT] [int] NOT NULL,
				[CODCRT] [int] NOT NULL,
				[LOTFIN] [int] NOT NULL,
				[TIPRFE] tinyint NULL DEFAULT 0,
				[NIDRVM] [INT] NOT NULL,
				[NUMAGE] [varchar](15) NOT NULL,
				[NUMBCO] [char](3) NOT NULL,
				[NUMCTA] [varchar](11) NULL,
				[NUMDVE] [char](1) NOT NULL,
				[FLGREF] tinyint NULL DEFAULT 0,
				[NOMUSU] [varchar](70) NOT NULL,
				[CODCMF0] [char](15) NOT NULL,
				[CODCMF] [varchar](15) NOT NULL,
				[NOMBNF] [varchar](70) NULL,
				[VLRTRA] [money] NULL,
				[REFMOV] [varchar](201) NULL,
				[DSCSTA] [varchar](70) NOT NULL,
				[DSCBOR] [varchar](70) NOT NULL,
				[DSCMAL] [varchar](70) NOT NULL,
				[NUMDDD] [varchar](4) NOT NULL,
				[NUMTEL] [varchar](15) NOT NULL
			)


			INSERT INTO @RESULT(
				NIDCCR
				,DATCAD
				,DATMOV
				,USUPRO
				,CODUSU
				,NIDTRA
				,STABOR
				,CODPRT
				,CODCRT
				,NUMAGE
				,NUMBCO
				,NUMCTA
				,NUMDVE
				,FLGREF
				,NOMUSU
				,CODCMF0
				,CODCMF
				,NOMBNF
				,VLRTRA
				,REFMOV
				,DSCSTA
				,DSCBOR
				,DSCMAL
				,NUMDDD
				,NUMTEL
				,LOTFIN, TIPRFE, NIDRVM)

			  SELECT A.NIDCCR
					,A.DATCAD
					,A.DATMOV
					,I.USUPRO
					,A.CODUSU
					,A.NIDTRA
					,A.STABOR
					,A.CODPRT
					,I.CODCRT
					,B.NUMAGE
				  ,B.NUMBCO
				  ,NUMCTA = LTRIM(RTRIM(numcta))
				  ,B.NUMDVE
				  ,FLGREF = CASE WHEN ISNULL(J.NIDCCR,0)=0 THEN 0 ELSE ISNULL(J.FLGREF,1) END
				  ,ISNULL(F.NOMUSU,'')  AS NOMUSU
				  ,F.codcmf AS CODCMF0
				  ,CASE WHEN B.ORGCTA <> 1 THEN B.CODCMF ELSE F.CODCMF END AS CODCMF
				  ,NOMBNF = LTRIM(RTRIM(nombnf))
				  ,(A.SIGOPE*A.VLRMOV) AS VLRTRA
				  ,(LTRIM(RTRIM(A.DSCMOV)) + ' ' + LTRIM(RTRIM(C.DSCMOV))) AS REFMOV
				  ,D.DSCSTA
				  ,E.DSCSTA AS DSCBOR
				  ,ISNULL(H.DSCEND,'') AS DSCMAL
				  ,ISNULL(H.NUMDDD,'') AS NUMDDD
				  ,ISNULL(H.NUMTEL,'') AS NUMTEL
				  ,A.LOTFIN
				  ,A.TIPRFE
				  ,A.NIDRVM
		  
		

				  FROM TBREGCCR A(nolock) 
					  INNER JOIN TBCADCTA (nolock) B  ON (B.NIDCTA = A.NIDCTA)
					  INNER JOIN TBTIPMOV (NOLOCK) C  ON (C.CODMOV = A.CODMOV)
					  INNER JOIN TBCADSTA (NOLOCK) D  ON (D.CODSTA = A.STAREG)
					  INNER JOIN TBCADSTA (NOLOCK) E  ON (E.CODSTA = A.STABOR)
					  INNER JOIN TBCADUSU (NOLOCK) F  ON (F.CODUSU = A.CODUSU)
					  INNER JOIN (SELECT assprt, codcrt, usupro 
									FROM (
											SELECT  0 assprt, 0 codcrt, 13  usupro
											 UNION
											SELECT assprt, codcrt, case when usupro=0 then 13 else usupro end usupro from tbregcrt (nolock) where starec=1 and assprt>0 AND STACRT=109
										 ) a ) I
						  ON (I.ASSPRT = A.CODPRT)

					  LEFT JOIN (SELECT * FROM VW_USUARIO_EMAIL_TELEFONE) H
						  ON (A.CODUSU = H.CODUSU)
					  LEFT JOIN (SELECT NIDCCR, 2 FLGREF FROM TBREGTED (NOLOCK) WHERE STAREC=1 AND CODAPR=0) J
						  ON (J.NIDCCR = A.NIDCCR) 
				  WHERE		A.STAREC > 0 
					  AND A.TIPVAL = 1
					  AND A.INDLCT = 3
					  AND A.REGHAB = 1
  					  AND ((@CODUSU IS NULL) OR (A.CODUSU = @CODUSU))
 					  AND A.STABOR IN (SELECT KEYCOD FROM TBTABGER (NOLOCK) WHERE NUMTAB=853 AND STAREC=1 AND KEYCOD>0)		
					  AND A.CODMOV IN (SELECT KEYCOD FROM TBTABGER (NOLOCK) WHERE NUMTAB=850 AND STAREC=1 AND KEYCOD>0)

				DECLARE @SALDO TABLE (
					[CODUSU] [int] NOT NULL,
					[SLDCTA] [money] NULL)
				INSERT INTO @SALDO (CODUSU, SLDCTA)
			SELECT CODUSU, COALESCE(SUM((VLRMOV*SIGOPE)),0) AS SLDCTA 
								FROM TBREGCCR A1 (NOLOCK) 
							   WHERE (A1.STAREC >0)
								 AND (A1.TIPVAL IN (1))
								 AND (A1.INDLCT = 2)
								 AND (A1.REGHAB=1)
							   GROUP BY A1.CODUSU
		

			 SELECT A.* 
					,C.NOMUSU NOMGST 
					,D.SLDCTA 
					,ISNULL(E.NIDTED,0) NIDTED 
					,CANREV = dbo.GetKeyAccess(@updusu,120)
					,CANCAN = dbo.GetKeyAccess(@updusu,121)
			   FROM @RESULT A 
			  INNER JOIN TBUSUPRO (NOLOCK) B
				 ON (B.USUPRO = A.USUPRO)
			  INNER JOIN TBCADUSU (NOLOCK) C
				 ON (C.CODUSU = B.CODUSU)
			  INNER JOIN @SALDO D
				 ON (D.CODUSU = A.CODUSU)
			  LEFT JOIN TBREGTED E
				 ON (E.NIDCCR = A.NIDCCR)

			 ORDER BY A.DATCAD DESC
		END


        ]]>
      </query>
      <parameters>
        <parameter input="true" apply="false" desc ="Tipo de Operação"  name="TIPLIS"  type="System.Byte"  default="" output="" null="false"/>
        <parameter input="true" apply="false" desc ="Usuário de Atualização" name="UPDUSU"  type="System.Int32" sysnull="true" default="" output="" null="false"/>        
        <parameter input="true" apply="false" desc ="Código do Usuário" name="CODUSU"  type="System.Int32" sysnull="true" default="" output="" null="true"/>
      </parameters>
    </item>


    <item script="false" alias="A." sql="" method="GetCurrentAccountMovement" return="DataTable" procname="PRREGCCRSELCCT" desc ="Recupera os registros do conta corrente de acordo com os parâmetros fornecidos">
      <query></query>

      <parameters>
        <parameter input="true" apply="true" desc ="Indicador de Lancamento"      name="INDLCT"  type="System.Int16" default="" output="" null="false"/>
        <parameter input="true" apply="true" desc ="Código do Usuário"            name="CODUSU" sysnull="true" type="System.Int32" default="" output="" null="false"/>
        <parameter input="true" apply="true" desc ="Data Inicial de Movimento (yyyyMMdd)"    name="DATMOV1" size="20" type="System.String" default="" output="" null="true"/>
        <parameter input="true" apply="true" desc ="Data Final de Movimento (yyyyMMdd)"      name="DATMOV2" size="20" type="System.String" default="" output="" null="true"/>
        <parameter input="true" apply="true" desc ="Argumento de Seleção"         name="ARGSEL" type="System.String" size="50" default=" " output="" null="true"/>
        <parameter input="true" apply="true" desc ="Tipo de Selecao"              name="TIPSEL" type="System.Byte"  sysnull="true" output="" null="true"/>
        <parameter input="true" apply="true" desc ="Número Máximo de Registros"   name="TOPREC" type="System.Int32" sysnull="true" output="" null="true"/>
        <parameter input="true" apply="true" desc ="Numero de Dias para Exibição" name="NUMDAY" type="System.Int32" sysnull="true" output="" null="true"/>
      </parameters>

    </item>

    <item script="true" alias="A." sql="" type="" method= "Pagamentos" return="DataTable" procname="PRREGCCRLSTOPRPAG" desc ="Obtêm os registros de operações de pagamentos de títulos" remarks="Código de Acesso : 087 - Fechar Transação@Código de Acesso : 123 - Bloquear Registro">
      <query order="A.DATMOV DESC">
        <![CDATA[
        
	SELECT A.NIDCCR
		  ,A.REFNID
		  ,A.TIPLCT
		  ,A.CODAPR
      ,BLKNOM = ISNULL(N.LGNUSU,'')
		  ,A.DATCAD
		  ,A.CODPRT
		  ,A.CODUSU
		  ,A.USUPRO
		  ,A.SIGOPE
		  ,A.IDEPRE
		  ,A.CODMOV
		  ,A.VLRMOV
		  ,A.STAREG
		  ,A.NUMBOR
		  ,A.STABOR
		  ,A.INDLCT
		  ,A.NIDCTA
		  ,A.NIDTRA
	    ,VLRTRA = A.VLRMOV,
			(LTRIM(RTRIM(B.DSCMOV)) + ' ' + LTRIM(RTRIM(A.DSCMOV))) AS REFMOV,
			C.DSCSTA,
			D.DSCSTA AS DSCBOR,
			ISNULL(J.FLGREF,1)  AS FLGREF,
			ISNULL(F.NIDCRT,0)  AS NIDCRT, 
			ISNULL(F.NUMCRT,'') AS NUMCRT,
			dbo.NumeroCartaoX(F.NUMCRT) AS MSKCRT,
			ISNULL(M.NOMUSU,'') AS NOMGST,
			H.DSCEND AS DSCMAL,
			H.NUMDDD AS NUMDDD,
			H.NUMTEL AS NUMTEL,
			I.NUMTRL,
			I.DATVCT,
			K.NOMUSU,
			ISNULL(F.CODCMF,M.CODCMF) AS CODCMF0,
			ISNULL(K.CODCMF,M.CODCMF) AS CODCMF
      ,CANBXA = dbo.GetKeyAccess(@updusu,123)
	  FROM 	TBREGCCR A (NOLOCK)
			INNER JOIN TBTIPMOV B (NOLOCK)
				ON (A.CODMOV = B.CODMOV)
			INNER JOIN TBCADSTA C (NOLOCK)
				ON (A.STAREG = C.CODSTA)
			INNER JOIN TBCADSTA d (NOLOCK)
				ON (A.STABOR = d.CODSTA)
			INNER JOIN TBREGPAG I (NOLOCK)
				ON (A.NIDRVM = I.NIDPAG)
			INNER JOIN TBCADUSU K (NOLOCK)
				ON (A.CODUSU = K.CODUSU)
			INNER JOIN TBUSUPRO O (NOLOCK)
				ON (A.USUPRO = O.USUPRO)
			INNER JOIN TBCADUSU M (NOLOCK)
				ON (O.CODUSU = M.CODUSU)
			LEFT JOIN TBCADUSU N (NOLOCK)
				ON (N.CODUSU = A.CODAPR)
			LEFT JOIN VW_USUARIO_CARTAO F
				ON (A.CODUSU = F.ASSUSU AND A.CODPRT = F.ASSPRT)
			LEFT JOIN (SELECT * FROM VW_USUARIO_EMAIL_TELEFONE) H
				ON (A.CODUSU = H.CODUSU)
			LEFT JOIN (
						SELECT A1.NIDTRA, 
							CASE WHEN B1.STABOR=29 THEN 1 ELSE (CASE WHEN B1.STABOR IS NULL THEN 1 ELSE 0 END) END AS FLGREF
					FROM TBREGPAG (NOLOCK) A1 INNER JOIN TBREGCCR (NOLOCK) B1 ON (A1.LOTFIN = B1.LOTFIN) WHERE B1.CODMOV=105
				) J
					ON (A.NIDTRA = J.NIDTRA)
	 WHERE  A.STAREC >0 
		AND (f.STACRT IS NULL OR F.STACRT=109)
		AND A.CODMOV IN (81,82)
		AND A.REGHAB = 1
		AND A.TIPRFE = 21 
        ]]>
      </query>
      <parameters>
        <parameter input="true" apply="false" desc ="Código do Usuário" name="CODUSU"  type="System.Int32" sysnull="true" default="" output="" null="true"/>
        <parameter input="true" apply="false" desc ="Usuário de Atualização" name="UPDUSU"  type="System.Int32" default="" output="" null="false"/>        
        <parameter input="true" apply="false" desc ="Status do Bordero" name="STABOR"  type="System.Int16"  default="22" output="" null="true"/>

      </parameters>
    </item>


    <item script="true" alias="A." sql="" type="" method= "AprovacaoTed" return="DataTable" procname="PRREGTEDLSTAPREXE" desc ="Obtêm a lista de registros para aprovação de TED" remarks="Código de Acesso : 010 - Aprovação de TED">
      <query order="A.DATCAD DESC">
        <![CDATA[
SELECT cast(0 as bit) flgchk, A.*
      ,ISNULL(B.DSCTAB,'') AS DSCREC
      ,C.DSCSTA      
      ,D.NOMUSU
      ,ISNULL(E.LGNUSU,'') DSCAEX
      ,ISNULL(F.DSCTAB,'') DSCFIN      
      ,ISNULL(G.DATCAD,null) DATREJ      
      ,ISNULL(G.DSCERR,'') DSCREJ      
      ,ISNULL(I.LGNUSU,'') NOMAPR            
  FROM TBREGTED A WITH (NOLOCK) 
  LEFT JOIN TBTABGER (NOLOCK) B 
    ON (7 = B.NUMTAB AND A.STAREC = B.KEYCOD)
 INNER JOIN TBCADSTA (NOLOCK) C 
    ON (A.STATED = C.CODSTA)
  LEFT JOIN TBCADUSU (NOLOCK) D
    ON (A.CODUSU = D.CODUSU)
  LEFT JOIN TBCADUSU (NOLOCK) E
    ON (A.APREXE = E.CODUSU)
  LEFT JOIN TBTABGER (NOLOCK) F 
    ON (305 = F.NUMTAB AND LTRIM(RTRIM(F.KEYTXT)) = LTRIM(RTRIM(A.CODFNL)))
  LEFT JOIN (SELECT NIDTED, DATCAD, DSCERR FROM TBCALTED (nolock) WHERE NIDTED>0 AND NUMOCO=0) G 
    ON (G.NIDTED = A.NIDTED)    
  LEFT JOIN TBREGAPR (NOLOCK) H
    ON (H.CODAPR = A.CODAPR)
  LEFT JOIN TBCADUSU (NOLOCK) I
    ON (I.CODUSU = H.USUAPR)
 WHERE A.STAREC=1
   AND A.APREXE=0
   AND A.CODAPR>0
       
	      ]]>
      </query>
    </item>

    <item script="true" alias="A." sql="" type="" method= "UsuariosPorTipo" return="DataTable" procname="PRCADUSUSELUSUTIP" desc ="Obtêm a lista de usuarios por tipo de usuario" remarks="">
      <query order="A.NOMUSU">
        <![CDATA[
SELECT CODUSU, NOMUSU FROM TBCADUSU (NOLOCK) A
            WHERE A.STAREC = 1
            AND A.STAUSU = 61
            AND LTRIM(RTRIM(NOMUSU))<>''
	      ]]>
      </query>
      <parameters>
        <parameter input="true" apply="true" desc ="Tipo de Usuario"      name="TIPUSU"  type="System.Byte" default="" output="" null="false"/>
      </parameters>

    </item>
    
  </lists>
</root>