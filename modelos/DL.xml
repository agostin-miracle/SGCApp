<?xml version="1.0" encoding="utf-8"?>
<root>

	<item create="true"  id="1" name="CVPCDORI" api="false" apiname="" friendlyname="Origins" modelversion="3" descriptor="Tabela de Informações de Origens">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
		<insertcommand key="Key" fieldreturn="" exceptionparamns="" procname="CVPCDORINS" method="Insert">
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
IF(EXISTS(SELECT 1 FROM CVPCDORI (NOLOCK) WHERE ORGBAS=@ORGBAS AND NIDORI =@NIDORI))
	SET @RETURN_VALUE = -2;
      ]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
IF(@RETURN_VALUE= -2)
    BEGIN
		UPDATE CVPCDORI
		   SET HASREC = @HASREC
			  ,[APEPRO] = @APEPRO
			  ,[NUMCRV] = @NUMCRV
			  ,[UFECRV] = @UFECRV
			  ,[RAZSOC] = @RAZSOC
			  ,[DSCEND] = @DSCEND
			  ,[DSCCID] = @DSCCID
			  ,[CODUFE] = @CODUFE
			  ,[NUMTEL] = @NUMTEL
			  ,[NOMCTO] = @NOMCTO
			  ,[DSCMAL] = @DSCMAL
			  ,HASCLI = @HASCLI
			  ,HASLAN = @HASLAN
			  ,HASANI = @HASANI
			  ,HASORL = @HASORL
			  ,HASINT = @HASINT
			  ,OBSORI = @OBSORI
			  ,[DATUPD] = GETDATE()
		 WHERE ORGBAS = @ORGBAS AND NIDORI = @NIDORI
			IF(@@ERROR=0)
			   SET @RETURN_VALUE=2;
	END
        ]]>
			</pos>
			<returns>
				<return value="1" message="Registro inserido com sucesso" error=""></return>
				<return value="2" message="Registro alterado com sucesso" error=""></return>
				<return value="-1" message="" error="FAILALL"></return>
			</returns>
		</insertcommand>
		<selectcommand>
			<item script="false" alias="A." sql="" method="GetLastOrigin" return="int" returnmode="2" procname="" desc ="Obtêm o ID do Último Registro de Origens Gravado" returnvalue="0">
				<query>
					<![CDATA[IF(EXISTS (SELECT 1 FROM CVPCDORI (NOLOCK) WHERE ORGBAS = @ORGBAS))
    SELECT MAX(NIDORI) AS RETURN_VALUE FROM CVPCDORI (NOLOCK) WHERE ORGBAS=@ORGBAS
ELSE
	SELECT 0 AS RETURN_VALUE]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" omit="true" desc ="Origem da Base" name="ORGBAS" type="System.Byte" default="" output="" null=""/>
					<parameter input="false" apply="true" omit="true" desc ="Retorno" name="RETURN_VALUE" type="System.Int32" default="" output="" null="false" inputmode="4"/>

				</parameters>
			</item>

		</selectcommand>
	</item>

	<item create="true"  id="2" name="CVCADPCD" api="false" apiname="" friendlyname="Procedures" modelversion="3" descriptor="Tabela de Cadastro de Procedimentos">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>

		<insertcommand key="Key" fieldreturn="" exceptionparamns="" procname="CVCADPCDINS" method="Insert">
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
IF(EXISTS(SELECT 1 FROM CVCADPCD (NOLOCK) WHERE ORGBAS=@ORGBAS AND CODPCD =@CODPCD))
	SET @RETURN_VALUE = -2;
      ]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
IF(@RETURN_VALUE= -2)
    BEGIN
	 UPDATE CVCADPCD 
    		      SET TIPPCD = @TIPPCD, 
    				  DATUPD = GETDATE(),
					  DSCPCD = @DSCPCD,
					  SUBCAT = @SUBCAT,
    				  HASRET = @HASRET,
					  HASVAL = @HASVAL,
					  CODOPE = @CODOPE,
					  STAREC = @STAREC
					 ,NIVATE = @NIVATE
					 ,NIVQTF = @NIVQTF
				WHERE ORGBAS = @ORGBAS AND CODPCD = @CODPCD
    
    	  			IF(@@ERROR=0)
    					SET @RETURN_VALUE = 2;
	END
        ]]>
			</pos>
			<returns>
				<return value="1" message="Registro inserido com sucesso" error=""></return>
				<return value="2" message="Registro alterado com sucesso" error=""></return>
				<return value="-1" message="" error="FAILALL"></return>
			</returns>
		</insertcommand>

	</item>

	<item create="true"  id="3" name="CVORIORL" api="false" apiname="" friendlyname="OriginsRelationshipSales" modelversion="3" descriptor="Tabela de Informações de Origens x Relacionamentos">

		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>

		<insertcommand key="Key" fieldreturn="" exceptionparamns="'DATUPD'" procname="CVORIORLINS" method="Insert">
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
IF(EXISTS(SELECT 1 FROM CVORIORL (NOLOCK) WHERE ORGBAS=@ORGBAS AND NIDORL=@NIDORL))
	SET @RETURN_VALUE = -2;
      ]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
IF(@RETURN_VALUE= -2)
    BEGIN
		UPDATE CVORIORL
			 SET ORIKEY = @ORIKEY
				,NIDORI = @NIDORI
				,NIDBAS = @NIDBAS
				,DATINI = @DATINI
				,DATFIN = @DATFIN
				,STAREC = @STAREC
				,DATUPD = GETDATE()
				,IDXKEY = @IDXKEY
		   WHERE ORGBAS=@ORGBAS AND NIDORL=@NIDORL
   			IF(@@ERROR=0)
   				SET @RETURN_VALUE = 2;
	END
        ]]>
			</pos>
			<returns>
				<return value="1" message="Registro inserido com sucesso" error=""></return>
				<return value="2" message="Registro alterado com sucesso" error=""></return>
				<return value="-1" message="" error="FAILALL"></return>
			</returns>
		</insertcommand>

	</item>

	<item create="true"  id="4" name="CVCADANI" api="false" apiname="" friendlyname="Animals" modelversion="3" descriptor="Tabela de Informações de Animais">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
		<extendedmodel></extendedmodel>
		<insertcommand key="Key" fieldreturn="" exceptionparamns="'NUMPES','PESIDE','DATUPD','ULTPCD'" procname="CVCADANIINS" method="Insert">

			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
 IF(EXISTS (SELECT 1 FROM CVCADANI (NOLOCK) WHERE ORGBAS = @ORGBAS AND CODANI=@CODANI ))
	    SET @RETURN_VALUE = -2
      ]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
IF(@RETURN_VALUE=-2)
	BEGIN
	UPDATE CVCADANI
		   SET CODCMF = @CODCMF
			  ,NOMANI = @NOMANI
			  ,SEXANI = @SEXANI
			  ,DATNAC = @DATNAC
			  ,TXTPES = @TXTPES
			  ,TXTIDE = @TXTIDE
			  --,NUMPES = @NUMPES
			  --,PESIDE = @PESIDE
			  ,DSCRAC = @DSCRAC
			  ,DSCALE = @DSCALE
			  ,DSCCOR = @DSCCOR
			  ,CODESP = @CODESP
			  ,NUMRGA = @NUMRGA
			  ,OBSANI = @OBSANI
			  ,CODORI = @CODORI
			  ,HASFAL = @HASFAL
			  ,HASCAS = @HASCAS
			  ,DATOBT = @DATOBT
			  ,STAREC = @STAREC
			  ,DATATU = @DATATU
			  ,DATUPD = GETDATE()
		 WHERE  ORGBAS = @ORGBAS AND CODANI = @CODANI
		 
		 IF(@@ERROR=0)
		    SET @RETURN_VALUE=2;
	END
        ]]>
			</pos>
			<returns>
				<return value="1" operator="==" message="Registro incluido com sucesso" error="OK"/>
				<return value="2" operator="==" message="Registro alterado com sucesso" error="OK"/>
				<return value="-1" message="" error="FAILALL"/>
				<return value="-99999" message="" error="BROKENCONNECTION"/>
			</returns>
		</insertcommand>

		<selectcommand>
			<item script="false" alias="A." sql="" method="GetLastAnimal" return="int" returnmode="2" procname="" desc ="Obtêm o ID do Último Registro de Animal Gravado" returnvalue="0">
				<query>
					<![CDATA[IF(EXISTS (SELECT 1 FROM CVCADANI (NOLOCK) WHERE ORGBAS = @ORGBAS))
    SELECT MAX(CODANI) AS RETURN_VALUE FROM CVCADANI (NOLOCK) WHERE ORGBAS=@ORGBAS
ELSE
	SELECT 0 AS RETURN_VALUE]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" omit="true" desc ="Origem da Base" name="ORGBAS" type="System.Byte" default="" output="" null=""/>
					<parameter input="false" apply="true" omit="true" desc ="Retorno" name="RETURN_VALUE" type="System.Int32" default="" output="" null="false" inputmode="4"/>

				</parameters>
			</item>

		</selectcommand>
	</item>


	<item create="true"  id="5" name="CVCADCLI" api="true" apiname="" friendlyname="Clients" modelversion="3" descriptor="Tabela de Informações de Cliente">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>

		<view>
			<item owner="" script="true" definer="" name="VWCLIFON" desc ="View de Resumo de quantidades de telefones cadastrados por tipo e status">
				<query>
					<![CDATA[
  SELECT FON.ORGBAS
  ,DSCORG = CASE WHEN FON.ORGBAS=1 THEN 'SP' ELSE 'RJ' END 
        , FON.STAREC
		 ,DSCREC = CASE WHEN FON.STAREC=1 THEN 'OK' ELSE 'IRREGULAR' END 
        ,FON.NORTEL
		,DSCNOR = CASE WHEN FON.NORTEL=1 THEN 'NORMALIZADO' ELSE 'NÃO NORMALIZADO' END 
		,FON.TIPCTO , MAX(DSCCTO) AS DSCCTO, COUNT(*) AS NUMREC
  from TBCLIFON (NOLOCK) FON
 INNER JOIN RFTIPCTO (NOLOCK) TIP 
    ON (TIP.TIPCTO = FON.TIPCTO)
GROUP BY FON.ORGBAS, FON.STAREC, FON.NORTEL, FON.TIPCTO					

]]>
				</query>
			</item>
		</view>


		<insertcommand key="Key" fieldreturn="" supressidentity="true" exceptionparamns="'DATUPD','AVACEP','VALCEP','VALCEL','VALMAL','CLIKEY'" procname="PRCADCLIINS" >
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
IF(EXISTS (SELECT 1 FROM CVCADCLI (NOLOCK) WHERE ORGBAS = @ORGBAS AND CODCMF = @CODCMF ))
	    SET @RETURN_VALUE = -2;
		
SET @TYPCMF = IIF(LEFT(@CODCMF,7) IN ('0000000','1111111','2222222','3333333','444444','5555555','6666666','7777777','8888888','9999999'),0,@TYPCMF)

IF(@TYPCMF = 3)
   SET @VALCMF = 1;
ELSE
   SET @VALCMF = IIF(@TYPCMF IN (1,2),dbo.ValidateCMF(@CODCMF), 0);

      ]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
IF(@RETURN_VALUE = -2 )
	BEGIN
		UPDATE CVCADCLI
		   SET NOMCLI = @NOMCLI
		      ,TYPCMF = @TYPCMF
			  ,VALCMF = @VALCMF
			  ,CODCEP = @CODCEP
			  ,DSCEND = @DSCEND
              ,DSCCID = @DSCCID
			  ,CODCLA = @CODCLA
			  ,DSCCLA = @DSCCLA
			  ,DSCMAL = @DSCMAL
			  ,DATCAD = @DATCAD
			  ,CODUFE = @CODUFE
			  ,TELRES = @TELRES
			  ,TELCEL = @TELCEL
			  ,TELCOM = @TELCOM
			  ,ENVNEW = @ENVNEW
			  ,DATNAC = @DATNAC
			  ,DATATU = @DATATU
			  ,SEXCLI = @SEXCLI
			  ,DATUPD = GETDATE()
			  ,CODORI = @CODORI
		 WHERE ORGBAS = @ORGBAS AND CODCMF = @CODCMF
		 
		 IF(@@ERROR=0)
		    SET @RETURN_VALUE=2;
	END
        ]]>
			</pos>
			<returns>
				<return value="1" operator="==" message="Registro incluido com sucesso" error="OK"/>
				<return value="2" operator="==" message="Registro alterado com sucesso" error="OK"/>
				<return value="-1" message="" error="FAILALL"/>
			</returns>
		</insertcommand>

		<methods>
			<item script="true" alias="A." sql="" method="UpdateClassification" return="int" returnmode="2" procname="PRCADCLIUPDCLF" desc ="Atualiza a classificação de Clientes" returnvalue="0">
				<query>
					<![CDATA[
    DECLARE @RETURN_VALUE INT =0;
	DECLARE @VALUE SMALLINT
     UPDATE CVCADCLI
        SET CODCLA = CASE WHEN ISNUMERIC(DSCCLA)=1 THEN REPLACE(DSCCLA,'.','') ELSE 0 END  						
      WHERE ORGBAS = @ORGBAS
	    /* LIMITE DE CODIFICACAO */
	    AND CONVERT(INT, CASE WHEN ISNUMERIC(DSCCLA)=1 THEN REPLACE(DSCCLA,'.','') ELSE 0 END ) <255
		/* CARATER NAO CONVERTIVEL */
		AND NOT DSCCLA LIKE '%,%'
	    
        SET @RETURN_VALUE = @@ROWCOUNT;	 

	 UPDATE CVCADCLI
        SET CODCLA = 0  						
      WHERE ORGBAS = @ORGBAS AND CODCLA > 7	
        SET @RETURN_VALUE = @@ROWCOUNT;	 

     UPDATE CVCADCLI
        SET CODCLA = CASE DSCCLA 
        							WHEN N'Indicação PetShop / Clínica' THEN 1
        							WHEN N'Indicação Cliente / Funcionário' THEN 2
        							WHEN N'Pesquisa Google' THEN 3
        							WHEN N'Facebook' THEN 4
        							WHEN N'Ao passar em frente' THEN 5
        							WHEN N'Instagram' THEN 6
        							WHEN N'Plano de Saúde' THEN 7

        							--WHEN N'Indicação PetShop / Clínica' THEN 7
        							--WHEN N'Indicação Cliente / Funcionário' THEN 8
        							--WHEN N'Pesquisa Google' THEN 9
        							--WHEN N'Facebook' THEN 10
        							--WHEN N'Ao passar em frente' THEN 11
        							--WHEN N'Instagram' THEN 12
        						ELSE 0 END
     WHERE CODCLA = 0 AND ORGBAS = @ORGBAS		
    SET @RETURN_VALUE = @RETURN_VALUE +  @@ROWCOUNT;
    
    RETURN @RETURN_VALUE;
]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" omit="false" desc ="Origem da Base" name="ORGBAS" type="System.Byte" default="" output="" null=""/>
					<parameter input="false" apply="true" omit="true" desc ="Retorno" name="RETURN_VALUE" type="System.Int32" default="" output="" null="false" inputmode="4"/>

				</parameters>
			</item>

			<item script="true" alias="A." sql="" method="UpdateSalesInformation" return="int" returnmode="2" procname="PRCADCLIUPDSAL" desc ="Atualiza informações referente atualizações de venda de serviços (ultima Unidade, ultimo procedimento, etc...)" returnvalue="0">
				<query>
					<![CDATA[
    DECLARE @RETURN_VALUE INT = 0;
	
       -- LIMPA QUALQUER PROCESSAMENTO EXISTENTE
    UPDATE CVCADCLI 
	   SET ULTPCD  = null    -- ASSUME QUE NAO EXISTE NENHUMA DATA DE ATENDIMENTO
	      ,ULTEMP  = 0       -- ASSUME QUE NENHUMA EMPRESA ATENDEU O CLIENTE
		  ,PCDKEY =  0       -- ASSUME QUE NAO POSSUI NENHUM PROCEDIMENTO ULTIMO
		  ,FLGREC = 203      -- ASSUME QUE TODOS OS REGISTROS SAO INATIVOS
		  ,ULTBAS = 0        -- ASSUME QUE NAP EXISTE NENHUM ID DE BASE DE VENDAS
		  ,VALCEP = 0        -- ASSUME QUE NENHUM CEP É VALIDO
     WHERE ORGBAS=@ORGBAS;
		
    SET @RETURN_VALUE = @RETURN_VALUE + @@ROWCOUNT;

    UPDATE CVCADCLI
       SET ULTPCD  = UPD.ULTPCD
          ,ULTEMP  = UPD.ULTEMP
          ,PCDKEY =  UPD.PCDKEY
		  ,ULTBAS =  UPD.ULTBAS + CASE WHEN UPD.ULTBAS > 0 THEN (CASE WHEN @ORGBAS = 1 THEN 100 ELSE 200 END) ELSE 0 END
		  ,FLGREC =  UPD.STAREC
	
     FROM (SELECT A.ORGBAS
    			,CODCMF
    			,ULTLCT
    			,RIGHT('00' + CONVERT(VARCHAR, A.ORGBAS),2 ) + RIGHT('0000000' + CONVERT(VARCHAR,ULT.CODPCD),7) AS PCDKEY
    			,ULTPCD = ULT.DATPCD
    			,ULTEMP = ULT.CODEMP
				,ULTBAS = ORL.NIDBAS
				,ULT.STAREC
    		FROM (SELECT LAN.ORGBAS
    			        ,ANI.CODCMF
    			        ,MAX(LAN.NIDPCD) AS ULTLCT
                    FROM CVPCDLAN (NOLOCK) LAN
    			   INNER JOIN CVCADANI (NOLOCK) ANI 
    			      ON (ANI.ORGBAS = LAN.ORGBAS AND ANI.CODANI = LAN.CODANI)
    			   WHERE LAN.ORGBAS = @ORGBAS
    			GROUP BY LAN.ORGBAS, ANI.CODCMF) A
    		INNER JOIN (SELECT NIDPCD, STAREC, DATPCD, CODPCD, CODEMP,CODORI FROM CVPCDLAN (NOLOCK) WHERE ORGBAS=@ORGBAS) ULT 
    			ON (ULT.NIDPCD = A.ULTLCT)
		    INNER JOIN CVORIORL (NOLOCK) ORL 
			   ON (ORL.ORGBAS = A.ORGBAS AND ORL.NIDORI = ULT.CODORI AND ULT.DATPCD >= ORL.DATINI AND ULT.DATPCD <= ORL.DATFIN) 
    	   ) UPD
      INNER JOIN CVCADCLI CLI
    	 ON (CLI.ORGBAS= UPD.ORGBAS AND CLI.CODCMF = UPD.CODCMF)
     WHERE UPD.ORGBAS=@ORGBAS;
    SET @RETURN_VALUE = @RETURN_VALUE + @@ROWCOUNT;

	/* ATUALIZACAO POR CONTA DE REGISTROS INATIVOS */
	UPDATE CVCADCLI
       SET ULTBAS = Z01.NIDBAS + CASE WHEN Z01.NIDBAS > 0 THEN (CASE WHEN @ORGBAS = 1 THEN 100 ELSE 200 END) ELSE 0 END
          ,ULTEMP = Z01.CODEMP
	      ,PCDKEY = RIGHT('00' + CONVERT(VARCHAR, Z01.ORGBAS),2 ) + RIGHT('0000000' + CONVERT(VARCHAR,Z01.CODPCD),7)
		  ,ULTPCD = Z01.DATPCD
		  ,FLGREC = Z01.STAREC
	   
      FROM CVCADCLI 
	 INNER JOIN (SELECT DISTINCT A01.ORGBAS
		  ,A01.CODCMF
		  ,LAN.CODORI
		  ,LAN.CODEMP
		  ,LAN.DATPCD
		  ,ORL.NIDBAS
		  ,LAN.CODPCD
		  ,LAN.STAREC
	  FROM CVPCDLAN (NOLOCK) LAN
	 INNER JOIN (SELECT DISTINCT A02.ORGBAS, ANI.CODCMF, MAX(NIDPCD) AS NIDPCD 
				   FROM CVPCDLAN (NOLOCK) A02
				  INNER JOIN CVCADANI (NOLOCK) ANI ON (ANI.ORGBAS = A02.ORGBAS AND ANI.CODANI = A02.CODANI)
				  WHERE A02.ORGBAS = @ORGBAS  
				  GROUP BY A02.ORGBAS, ANI.CODCMF) A01
		ON (A01.ORGBAS = LAN.ORGBAS AND A01.NIDPCD = LAN.NIDPCD)
	 INNER JOIN CVORIORL (NOLOCK) ORL ON (ORL.ORGBAS = LAN.ORGBAS AND ORL.NIDORI = LAN.CODORI AND LAN.DATPCD >= ORL.DATINI AND LAN.DATPCD <= ORL.DATFIN )
	) Z01
	     ON (Z01.ORGBAS = CVCADCLI.ORGBAS AND Z01.CODCMF = CVCADCLI.CODCMF)
	  WHERE CVCADCLI.ORGBAS = @ORGBAS
	    SET @RETURN_VALUE = @RETURN_VALUE + @@ROWCOUNT;


	/*
	 * HASANI = 2, DEFINE REGISTROS QUE ESTÃO EXPURGADOS OU REMOVIDOS DE CARGA DE PROCESSAMENTO
	 */
	UPDATE CVCADCLI
	   SET ULTBAS = Z01.NIDBAS + CASE WHEN Z01.NIDBAS > 0 THEN (CASE WHEN @ORGBAS = 1 THEN 100 ELSE 200 END) ELSE 0 END
		  ,ULTEMP = Z01.CODEMP
		  ,PCDKEY = RIGHT('00' + CONVERT(VARCHAR, Z01.ORGBAS),2 ) + RIGHT('0000000' + CONVERT(VARCHAR,Z01.CODPCD),7)
		  ,ULTPCD = Z01.DATPCD
		  ,FLGREC = Z01.STAREC
	  FROM CVCADCLI 
	 INNER JOIN (SELECT DISTINCT A01.ORGBAS
		  ,A01.CODCMF
		  ,LAN.CODORI
		  ,LAN.CODEMP
		  ,LAN.DATPCD
		  ,ORL.NIDBAS
		  ,LAN.CODPCD
		  ,LAN.STAREC
	  FROM CVPCDLAN (NOLOCK) LAN
	 INNER JOIN (SELECT DISTINCT A02.ORGBAS, ANI.CODCMF, MAX(NIDPCD) AS NIDPCD 
				   FROM CVPCDLAN (NOLOCK) A02
				  INNER JOIN CVCADANI (NOLOCK) ANI ON (ANI.ORGBAS = A02.ORGBAS AND ANI.CODANI = A02.CODANI)
				  WHERE A02.ORGBAS = @ORGBAS AND A02.STAREC <>1   
				  GROUP BY A02.ORGBAS, ANI.CODCMF) A01
		ON (A01.ORGBAS = LAN.ORGBAS AND A01.NIDPCD = LAN.NIDPCD)
	 INNER JOIN CVORIORL (NOLOCK) ORL ON (ORL.ORGBAS = LAN.ORGBAS AND ORL.NIDORI = LAN.CODORI AND LAN.DATPCD >= ORL.DATINI AND LAN.DATPCD <= ORL.DATFIN )
	) Z01
	     ON (Z01.ORGBAS = CVCADCLI.ORGBAS AND Z01.CODCMF = CVCADCLI.CODCMF)
	  WHERE CVCADCLI.ORGBAS = @ORGBAS
	    SET @RETURN_VALUE = @RETURN_VALUE + @@ROWCOUNT;

	/* AJUSTE DE EMPRESAS DO RIO DE JANEIRO */
	IF(@ORGBAS = 2)
		BEGIN
			UPDATE CVCADCLI SET ULTEMP = 28 WHERE ULTEMP = 1;
		    SET @RETURN_VALUE = @RETURN_VALUE + @@ROWCOUNT;
	        UPDATE CVCADCLI SET ULTEMP = 29 WHERE ULTEMP = 2;
			SET @RETURN_VALUE = @RETURN_VALUE + @@ROWCOUNT;
		END

    -- CEP VALIDO DE ACORDO COM O CEP DE ORIGE
	UPDATE CVCADCLI
	   SET VALCEP = 1
	 WHERE CODCEP  IN (SELECT CODCEP FROM CEP.dbo.TBCADCEP (NOLOCK) WHERE DSCBAI <> '') AND ORGBAS=@ORGBAS;

	-- ATUALIZA O CEP DE SUBSTITUICAO SE EXISTIR NA CONDICAO DE EXISTIR O BAIRRO ASSOCIADO
    UPDATE CVCADCLI
	   SET VALCEP = 2
	 WHERE AVACEP  IN (SELECT CODCEP FROM CEP.dbo.TBCADCEP (NOLOCK) WHERE DSCBAI <> '') AND ORGBAS=@ORGBAS; 

    -- CELULARES VALIDOS
	UPDATE CVCADCLI SET VALCEL = 1
                     FROM CVCADCLI CLI
	 INNER JOIN (SELECT CODCMF, TELCEL
                   FROM CVCADCLI 
			      WHERE LEN(REPLACE(REPLACE(REPLACE(REPLACE(TELCEL,' ',''),'(',''),')',''),'+','')) = 13 
				    AND ISNUMERIC (REPLACE(REPLACE(REPLACE(REPLACE(TELCEL,' ',''),'(',''),')',''),'+',''))=1
				    AND (LEFT (REPLACE(REPLACE(REPLACE(REPLACE(TELCEL,' ',''),'(',''),')',''),'+',''),2)<>
						SUBSTRING (REPLACE(REPLACE(REPLACE(REPLACE(TELCEL,' ',''),'(',''),')',''),'+',''),3,2))
				    AND LEFT (REPLACE(REPLACE(REPLACE(REPLACE(TELCEL,' ',''),'(',''),')',''),'+',''),2)='55'
				    AND RIGHT  (REPLACE(REPLACE(REPLACE(REPLACE(TELCEL,' ',''),'(',''),')',''),'+',''),9) NOT IN ('000000000','111111111','222222222','333333333','444444444','555555555','666666666','777777777','888888888','999999999')) AS C01
         ON (C01.CODCMF = CLI.CODCMF) 
      WHERE CLI.ORGBAS = @ORGBAS
		
		
RETURN @RETURN_VALUE    
    
]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" omit="false" alias="UPD" desc ="Origem da Base" name="ORGBAS" type="System.Byte" default="" output="" null=""/>
					<parameter input="false" apply="true" omit="true" desc ="Retorno" name="RETURN_VALUE" type="System.Int32" default="" output="" null="false" inputmode="4"/>

				</parameters>
			</item>

			<item script="true" alias="A." sql="" method="UpdatePhones" return="int" returnmode="2" procname="PRCADCLIUPDFON" desc ="Promove a atualização da base de controle de telefones de clientes" returnvalue="0">
				<query>
					<![CDATA[
    DECLARE @remove_chars varchar(100) = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ()./+@,-_;'
    
    MERGE 
        TBCLIFON AS TGT
    USING  (SELECT DISTINCT 
                   ORGBAS
                  ,TIPCTO
    			  ,CODCMF
    			  ,LEFT(REPLACE(TELRES, NUMTEL,'') + REPLICATE( ' ', 25),25) AS NOMCTT
    			  ,NUMTEL
    			  ,STAREC= CASE WHEN LEN(NUMTEL)<8 THEN 0
    						    WHEN LEN(NUMTEL)=8 AND TIPCTO=3 THEN 0
    						    WHEN LEN(NUMTEL)=10 AND TIPCTO=1 AND LEFT(NUMTEL,2)='00' THEN 0
    			            	ELSE 1 END
    	  	      ,NORTEL = CASE WHEN TIPCTO = 1 AND LEN(NUMTEL) =8 THEN 1
    			                 WHEN TIPCTO = 1 AND LEN(NUMTEL)= 9 AND LEFT(NUMTEL,1)='9' THEN 0
    			                 WHEN TIPCTO = 1 AND LEN(NUMTEL)= 11 AND SUBSTRING(NUMTEL,3,1)='9' THEN 0
    
    	                         WHEN TIPCTO = 3 AND LEN(NUMTEL) =13 THEN 1
    					         WHEN TIPCTO = 2 AND LEN(NUMTEL)= 9 AND LEFT(NUMTEL,1)='9' THEN 0
    				             ELSE 0 
    							  END
    	      FROM (
    				SELECT
    				     ORGBAS,
    					 TIPCTO=1,
    					 CODCMF,
    					 replace(replace(replace(replace(replace(replace(TELRES Collate SQL_Latin1_General_Cp1253_CI_AI,' ',''),'-',''),'(',''),')',''),'+',''),'/','') AS TELRES, 
    					 replace(Translate(replace(TELRES Collate SQL_Latin1_General_Cp1253_CI_AI,' ',''), @remove_chars, replicate('~', len(@remove_chars))), '~', '') AS NUMTEL
    				from cvcadcli
    				WHERE ISNULL(TELRES,'') <>'' 
    				UNION ALL
    				SELECT
    				     ORGBAS,
    					 TIPCTO=2,
    					 CODCMF,
    					 replace(replace(replace(replace(replace(replace(TELCOM Collate SQL_Latin1_General_Cp1253_CI_AI,' ',''),'-',''),'(',''),')',''),'+',''),'/','') AS TELRES, 
    					 replace(Translate(replace(TELCOM Collate SQL_Latin1_General_Cp1253_CI_AI,' ',''), @remove_chars, replicate('~', len(@remove_chars))), '~', '') AS NUMTEL
    				from cvcadcli
    				WHERE ISNULL(TELCOM,'') <>''
    
    				UNION ALL
    				SELECT
    				     ORGBAS,
    					 TIPCTO=3,
    					 CODCMF,
    					 replace(replace(replace(replace(replace(replace(TELCEL Collate SQL_Latin1_General_Cp1253_CI_AI,' ',''),'-',''),'(',''),')',''),'+',''),'/','') AS TELRES, 
    					 replace(Translate(replace(TELCEL Collate SQL_Latin1_General_Cp1253_CI_AI,' ',''), @remove_chars, replicate('~', len(@remove_chars))), '~', '') AS NUMTEL
    				from cvcadcli
    				WHERE ISNULL(TELCEL,'') <>'' 
    
    				UNION ALL
    				SELECT DISTINCT
    				     ORGBAS,
    					 TIPCTO=5,
    					 CODCMF,
    					 replace(replace(replace(replace(replace(replace(NOMRS1 Collate SQL_Latin1_General_Cp1253_CI_AI,' ',''),'-',''),'(',''),')',''),'+',''),'/','') AS TELRES, 
    					 replace(Translate(replace(NOMRS1 Collate SQL_Latin1_General_Cp1253_CI_AI,' ',''), @remove_chars, replicate('~', len(@remove_chars))), '~', '') AS NUMTEL
    				from cvcadcli
    				WHERE ISNULL(NOMRS1,'') <>'' 
    
					UNION ALL
    				SELECT DISTINCT 
    				     ORGBAS,
    					 TIPCTO=6,
    					 CODCMF,
    					 replace(replace(replace(replace(replace(replace(NOMRS2 Collate SQL_Latin1_General_Cp1253_CI_AI,' ',''),'-',''),'(',''),')',''),'+',''),'/','') AS TELRES, 
    					 replace(Translate(replace(NOMRS2 Collate SQL_Latin1_General_Cp1253_CI_AI,' ',''), @remove_chars, replicate('~', len(@remove_chars))), '~', '') AS NUMTEL
    				from cvcadcli
    				WHERE ISNULL(NOMRS2,'') <>''
    			
    				) A
    				WHERE NUMTEL<>'' 
					AND LEFT(NUMTEL,8) NOT IN ('00000000','11111111','11000000','10000000','99999999','00010001','02100000')
    				AND ISNUMERIC(NUMTEL)=1 
					AND (LEN(NUMTEL)>=8 AND LEN(NUMTEL)<=25)
           ) AS SRC
    	   ON (TGT.ORGBAS = SRC.ORGBAS AND 
    	       TGT.CODCMF = SRC.CODCMF AND
    		   TGT.NUMTEL = SRC.NUMTEL AND
    		   TGT.TIPCTO = SRC.TIPCTO)
    WHEN MATCHED THEN
        UPDATE SET 
            TGT.STAREC = SRC.STAREC,
            TGT.NORTEL = SRC.NORTEL,
            TGT.DATUPD = GETDATE(),
    		TGT.NOMCTT = SRC.NOMCTT
    WHEN NOT MATCHED BY SOURCE THEN
        DELETE
    WHEN NOT MATCHED BY TARGET THEN
        
        INSERT 
         VALUES (SRC.ORGBAS, SRC.CODCMF, SRC.STAREC, SRC.NORTEL, SRC.NOMCTT, SRC.NUMTEL, SRC.TIPCTO, GETDATE());
    RETURN @@ROWCOUNT;

				]]>

				</query>
				<parameters>
					<parameter input="false" apply="true" omit="true" desc ="Retorno" name="RETURN_VALUE" type="System.Int32" default="" output="" null="false" inputmode="4"/>
				</parameters>
			</item>

	
		</methods>
	</item>

	<item create="true"  id="6" name="CVPCDLAN" api="true" apiname="" friendlyname="ProceduresRecords" modelversion="3" descriptor="Tabela de Informações de Lançamentos de Procedimentos">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>

		<view>
			<item owner="" script="true" definer="" name="VWLANVWC" desc ="View de Lançamentos associada a VET WE CARE">
				<query>
					<![CDATA[
SELECT
       LAN.ORGBAS
      ,LAN.NIDPCD
      ,LAN.STAREC
      ,LAN.STACHG
      ,LAN.CODEMP
      ,LAN.CODANI
      ,LAN.DATPCD
      ,LAN.VLRPCD
      ,LAN.VLRPGT
      ,LAN.APEVET
      ,LAN.NUMOSS
	  ,RIGHT('00' + CONVERT(varchar, LAN.ORGBAS), 2) + RIGHT('0000000' + CONVERT(varchar, LAN.NUMOSS), 7) AS OSSKEY
      ,LAN.NUMQTD
      ,LAN.CODPCD
      ,LAN.CODORI
      ,LAN.CODINT
      ,LAN.HASCVN
      ,LAN.INDDES
      ,LAN.NIDIND
      ,ORL.NIDBAS
	  ,BAS.APEBAS
	  ,URLLDO = COALESCE(LDO.URLLDO,'')
	  ,HASRF2 = CAST( CASE WHEN RF1.CODPCD IS NULL THEN 0 ELSE 1 END AS TINYINT)
	  ,HASRF1 = CAST( CASE WHEN RF2.CODPCD IS NULL THEN 0 ELSE 1 END AS TINYINT)
	  ,HASSR1 = CAST( CASE WHEN RF21.CODPCD IS NULL THEN 0 ELSE 1 END AS TINYINT)
	  ,HASDRS = CAST( CASE WHEN DRS.CODPCD IS NULL THEN 0 ELSE 1 END AS TINYINT)
	  ,HASRF3 = CAST( CASE WHEN RF3.CODPCD IS NULL THEN 0 ELSE 1 END AS TINYINT)
	  ,HASSR3 = CAST( CASE WHEN RF31.CODPCD IS NULL THEN 0 ELSE 1 END AS TINYINT)
  FROM CVPCDLAN (NOLOCK) LAN
 INNER JOIN CVORIORL (NOLOCK) ORL ON (ORL.NIDORI = LAN.CODORI)
 INNER JOIN RFORGBAS (NOLOCK) BAS ON (BAS.ORGBAS = ORL.ORGBAS AND BAS.NIDBAS = ORL.NIDBAS)
  LEFT JOIN CVLDOCTO (NOLOCK) LDO ON (LDO.ORGBAS = LAN.ORGBAS AND LDO.NIDPCD = LAN.NIDPCD)
  LEFT JOIN (SELECT CODPCD FROM RFSTAOSV WHERE TIPREL=2) RF1 ON (RF1.CODPCD = LAN.CODPCD)
  LEFT JOIN (SELECT CODPCD FROM RFSTAOSV WHERE TIPREL=1) RF2 ON (RF2.CODPCD = LAN.CODPCD)
  LEFT JOIN (SELECT CODPCD FROM RFSTAOSV WHERE TIPREL=1 AND TIPRF1 = 1) RF21 ON (RF21.CODPCD = LAN.CODPCD)
  LEFT JOIN (SELECT CODPCD FROM RFSTAOSS WHERE HASDRS = 1 ) DRS ON (DRS.CODPCD = LAN.CODPCD)
  LEFT JOIN (SELECT CODPCD FROM RFSTAOSV WHERE TIPREL=3) RF3 ON (RF3.CODPCD = LAN.CODPCD)
  LEFT JOIN (SELECT CODPCD FROM RFSTAOSV WHERE TIPREL=3 AND TIPRF1 = 1) RF31 ON (RF31.CODPCD = LAN.CODPCD)
 WHERE LAN.STAREC=1 AND BAS.NIDBAS NOT IN (0,11,13,4,20)
   AND DATPCD > '20211231 23:59:59']]>
				</query>
			</item>
		</view>
		<insertcommand key="Key" fieldreturn="" exceptionparamns="" procname="CVPCDLANINS" >
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
 IF(EXISTS (SELECT 1 FROM CVPCDLAN (NOLOCK) WHERE ORGBAS = @ORGBAS AND NIDPCD=@NIDPCD ))
	    SET @RETURN_VALUE = -2
 
      ]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
IF(@RETURN_VALUE=-2)
	BEGIN
		UPDATE CVPCDLAN
		   SET STAREC = @STAREC
			  ,STACHG = @STACHG
			  ,CODEMP = @CODEMP
			  ,CODANI = @CODANI
			  ,DATPCD = @DATPCD
			  ,VLRPCD = @VLRPCD
			  ,VLRPGT = @VLRPGT
			  ,APEVET = @APEVET
			  ,NUMOSS = @NUMOSS
			  ,NUMQTD = @NUMQTD
			  ,CODPCD = @CODPCD
			  ,CODORI = @CODORI
			  ,CODINT = @CODINT
			  ,HASCVN = @HASCVN
			  ,INDDES = @INDDES
			  ,NIDIND = @NIDIND
		 WHERE ORGBAS = @ORGBAS AND NIDPCD = @NIDPCD
		 
		 IF(@@ERROR=0)
		    SET @RETURN_VALUE = 2;
	END
		
		
        ]]>
			</pos>
			<returns>
				<return value="1" message="Registro inserido com sucesso" error="OK"></return>
				<return value="2" message="Registro alterado com sucesso" error="OK"></return>
				<return value="-1" message="" error="FAILALL"/>
				<return value="-2" message="" error="RECORDFOUND"/>
			</returns>
		</insertcommand>

		<selectcommand>
			<item script="false" alias="A." sql="" method="Select" return="ProceduresRecords" procname="" desc ="Obtêm o registro de lançamento de acordo com a origem e o id de registro" >
				<query>
					<![CDATA[SELECT * FROM CVPCDLAN (NOLOCK) A]]>
				</query>
				<parameters>
					<parameter input="true" apply="true"  desc ="Origem da Base" name="ORGBAS" type="System.Byte" default="" output="" null=""/>
					<parameter input="true" apply="true"  desc ="ID do Lancamento" name="NIDPCD" type="System.Int32" default="" output="" null=""/>

				</parameters>
			</item>
		</selectcommand>

		<methods>
			<item script="true" alias="A." sql="" method="GetLastProcedure" return="int" returnmode="2" procname="CVPCDLANLASPCD" desc ="Obtêm o ID do Último Registro de Procedimento Gravado" returnvalue="0">
				<query>
					<![CDATA[
DECLARE @RETURN_VALUE INT = 0;
SELECT @RETURN_VALUE = MAX(NIDPCD) FROM CVPCDLAN (NOLOCK) WHERE ORGBAS=@ORGBAS AND STAREC=1;
IF(@RETURN_VALUE IS NULL)
   SET @RETURN_VALUE = 0;
RETURN @RETURN_VALUE;]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" omit="true" desc ="Origem da Base" name="ORGBAS" type="System.Byte" default="" output="" null=""/>
					<parameter input="false" apply="true" omit="true" desc ="Retorno" name="RETURN_VALUE" type="System.Int32" default="" output="" null="false" inputmode="4"/>
				</parameters>
			</item>



			<item script="true" alias="A." sql="" method="UpdateBaseInformation" return="int" returnmode="2" procname="PRPCDLANUPDCLIBAS" desc ="Atualiza informações referente a ultima base de vendas aplicada para os registros de procedimento" returnvalue="0">
				<query>
					<![CDATA[
/* 
 * ATUALIZA AS INFORMAÇÕES DO ULTIMO ID DE BASE DE VENDAS
 */
DECLARE @RETURN_VALUE INT = 0;
UPDATE CVCADCLI
   SET ULTBAS = Z01.NIDBAS 
  FROM CVCADCLI 
 INNER JOIN (SELECT DISTINCT A01.ORGBAS
      ,A01.CODCMF
      ,LAN.CODORI
      ,LAN.CODEMP
	  ,LAN.DATPCD
	  ,ORL.NIDBAS
  FROM CVPCDLAN (NOLOCK) LAN
 INNER JOIN (SELECT DISTINCT A02.ORGBAS, ANI.CODCMF, MAX(NIDPCD) AS NIDPCD 
               FROM CVPCDLAN (NOLOCK) A02
              INNER JOIN CVCADANI (NOLOCK) ANI ON (ANI.ORGBAS = A02.ORGBAS AND ANI.CODANI = A02.CODANI)
			  WHERE A02.CODEMP IN (SELECT DISTINCT CODEMP FROM CVCADEMP (NOLOCK) WHERE ORGBAS=@ORGBAS AND HASPRO=1)  
              GROUP BY A02.ORGBAS, ANI.CODCMF) A01
    ON (A01.ORGBAS = LAN.ORGBAS AND A01.NIDPCD = LAN.NIDPCD)
 INNER JOIN CVORIORL (NOLOCK) ORL ON (ORL.ORGBAS = LAN.ORGBAS AND ORL.NIDORI = LAN.CODORI AND LAN.DATPCD >= ORL.DATINI AND LAN.DATPCD <= ORL.DATFIN )
) Z01
ON (Z01.ORGBAS = CVCADCLI.ORGBAS AND Z01.CODCMF = CVCADCLI.CODCMF)
WHERE CVCADCLI.ORGBAS = @ORGBAS
SET @RETURN_VALUE = @@ROWCOUNT;
RETRUN @RETURN_VALUE;
]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" omit="true" alias="" desc ="Origem da Base" name="ORGBAS" type="System.Byte" default="" output="" null=""/>
					<parameter input="false" apply="true" omit="true" desc ="Retorno" name="RETURN_VALUE" type="System.Int32" default="" output="" null="false" inputmode="4"/>

				</parameters>
			</item>

		</methods>

		<selectallcommand>

			<item script="false" alias="A." sql="" method="GetAllIDS" type="List" return="int" procname="" desc ="Obtêm uma lista de id's de lançamentos para comparativo" remarks="">
				<query>
					<![CDATA[SELECT NIDPCD FROM CVPCDLAN (NOLOCK) WHERE ORGBAS = {0} AND NIDPCD >0 AND NIDPCD >= @NIDPCD AND STAREC=1 ORDER BY 1]]>
				</query>

				<parameters>
					<parameter input="true" apply="true" omit="true" desc ="Origem de Base" name="ORGBAS" type="System.Byte" default="" output="" null=""/>
					<parameter input="true" apply="true" omit="true" desc ="ID de Registro" name="NIDPCD" type="System.Int32" default="" output="" null=""/>

				</parameters>

			</item>
		</selectallcommand>

	</item>

	<item create="true"  id="7" name="CVSTAOSS" api="true" apiname="" friendlyname="OS" modelversion="3" descriptor="Tabela de Informações de Ordens de Serviço">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
		<insertcommand key="Key" fieldreturn="" exceptionparamns="'FCEINT'" procname="CVSTAOSSINS" >
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
 IF(EXISTS (SELECT 1 FROM CVSTAOSS (NOLOCK) WHERE ORGBAS = @ORGBAS AND NUMOSS=@NUMOSS ))
	    SET @RETURN_VALUE = -2
      ]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
IF(@RETURN_VALUE=-2)
	BEGIN
		UPDATE CVSTAOSS
		   SET CODANI = @CODANI
			  ,DATABE = @DATABE
			  ,DATFEC = @DATFEC
			  ,CODEMP = @CODEMP
			  ,STAOSS = @STAOSS
			  ,IDAANI = @IDAANI
			  ,STAREC = @STAREC
		 WHERE ORGBAS = @ORGBAS AND NUMOSS = @NUMOSS
		 
		 IF(@@ERROR=0)
		    SET @RETURN_VALUE = 2;
	END
        ]]>
			</pos>
			<returns>
				<return value="1" message="Registro inserido com sucesso" error="OK"></return>
				<return value="2" message="Registro alterado com sucesso" error="OK"></return>

				<return value="-1" message="" error="FAILALL"/>
				<return value="-2" message="" error="RECORDFOUND"/>


			</returns>
		</insertcommand>

		<selectcommand>
			<item script="false" alias="A." sql="" method="Select" return="ProceduresRecords" procname="" desc ="Obtêm o registro de lançamento de acordo com a origem e o id de registro" >
				<query>
					<![CDATA[SELECT * FROM CVSTAOSS (NOLOCK)]]>
				</query>
				<parameters>
					<parameter input="true" apply="true"  desc ="Origem da Base" name="ORGBAS" type="System.Byte" default="" output="" null=""/>
					<parameter input="true" apply="true"  desc ="OS" name="NUMOSS" type="System.Int32" default="" output="" null=""/>

				</parameters>
			</item>
		</selectcommand>

		<!--<methods>
			<item script="true" alias="A." sql="" method="GetLastOS" return="int" returnmode="2" procname="CVSTAOSSLASOSS" desc ="Obtêm o ID da Última OS não fechada Gravada" returnvalue="0">
				<query>
					<![CDATA[
DECLARE @RETURN_VALUE INT = 0;
SELECT @RETURN_VALUE = MAX(NUMOSS) FROM CVSTAOSS (NOLOCK) WHERE ORGBAS=@ORGBAS AND STAOSS <> 'S';
IF(@RETURN_VALUE IS NULL)
   SET @RETURN_VALUE = 0;
RETURN @RETURN_VALUE;]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" omit="true" desc ="Origem da Base" name="ORGBAS" type="System.Byte" default="" output="" null=""/>
					<parameter input="false" apply="true" omit="true" desc ="Retorno" name="RETURN_VALUE" type="System.Int32" default="" output="" null="false" inputmode="4"/>
				</parameters>
			</item>


			<item script="true" alias="A." sql="" method="UpdateReferencesVWC" return="int" returnmode="2" procname="CVSTAOSSUPDVWC" desc ="Atualiza as informações de referências relativas à VETWECARE para a tabela de OS" returnvalue="0">
				<query>
					<![CDATA[
					
	  ,HASRF1 = CAST( CASE WHEN RF1.CODPCD IS NULL THEN 0 ELSE 1 END AS TINYINT)
	  ,HASRF2 = CAST( CASE WHEN RF2.CODPCD IS NULL THEN 0 ELSE 1 END AS TINYINT)
	  ,HASSR1 = CAST( CASE WHEN RF21.CODPCD IS NULL THEN 0 ELSE 1 END AS TINYINT)
	  ,HASDRS = CAST( CASE WHEN DRS.CODPCD IS NULL THEN 0 ELSE 1 END AS TINYINT)
	  ,HASRF3 = CAST( CASE WHEN RF3.CODPCD IS NULL THEN 0 ELSE 1 END AS TINYINT)
	  ,HASSR3 = CAST( CASE WHEN RF31.CODPCD IS NULL THEN 0 ELSE 1 END AS TINYINT)
	  
	  LEFT JOIN (SELECT CODPCD FROM RFSTAOSV WHERE TIPREL=2) RF1 ON (RF1.CODPCD = LAN.CODPCD)
  LEFT JOIN (SELECT CODPCD FROM RFSTAOSV WHERE TIPREL=1) RF2 ON (RF2.CODPCD = LAN.CODPCD)
  LEFT JOIN (SELECT CODPCD FROM RFSTAOSV WHERE TIPREL=1 AND TIPRF1 = 1) RF21 ON (RF21.CODPCD = LAN.CODPCD)

  LEFT JOIN (SELECT CODPCD FROM RFSTAOSS WHERE HASDRS = 1 ) DRS ON (DRS.CODPCD = LAN.CODPCD)
  LEFT JOIN (SELECT CODPCD FROM RFSTAOSV WHERE TIPREL=3) RF3 ON (RF3.CODPCD = LAN.CODPCD)
  LEFT JOIN (SELECT CODPCD FROM RFSTAOSV WHERE TIPREL=3 AND TIPRF1 = 1) RF31 ON (RF31.CODPCD = LAN.CODPCD)
				
					
					
    DECLARE @RETURN_VALUE INT = 0;
    UPDATE CVSTAOSS
       SET HASRF1 = CAST(CASE WHEN VWC.HASRF1 = 1 AND VWC.HASRF2 = 1 THEN 1 ELSE 0 END AS TINYINT)
          ,HASRF2 = CAST(CASE WHEN VWC.HASRF1 = 1 AND VWC.HASRF2 = 1 AND VWC.HASSR1 = 1 AND VWC.URLLDO<>'' THEN 1 ELSE 0 END  AS TINYINT)
    	  ,HASRF3 = CAST(CASE WHEN VWC.HASDRS = 1 AND VWC.HASRF3 = 1 THEN 1 ELSE 0 END AS TINYINT)
    	  ,HASRF4 = CAST(CASE WHEN VWC.HASDRS = 1 AND VWC.HASRF3 = 1 AND VWC.HASSR3 = 1 AND VWC.URLLDO<>'' THEN 1 ELSE 0 END AS TINYINT)
      FROM CVSTAOSS (NOLOCK) OS
     INNER JOIN (SELECT ORGBAS
    	                ,NUMOSS
    					,MAX(URLLDO) AS URLLDO
    					,MAX(HASDRS) AS HASDRS
    					,MAX(HASRF2) AS HASRF2
    					,MAX(HASRF1) AS HASRF1
    					,MAX(HASSR1)  AS HASSR1
    					,HASRF3 = MAX(HASRF3)
    					,HASSR3 = MAX(HASSR3)
    				FROM VWLANVWC
    			    WHERE ORGBAS = @ORGBAS
    				GROUP BY ORGBAS, NUMOSS) VWC
    	ON (VWC.ORGBAS = OS.ORGBAS AND VWC.NUMOSS = OS.NUMOSS)
	SET @RETURN_VALUE= @@ROWCOUNT;
    RETURN @RETURN_VALUE;]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" omit="true" desc ="Origem da Base" name="ORGBAS" type="System.Byte" default="" output="" null=""/>
					<parameter input="false" apply="true" omit="true" desc ="Retorno" name="RETURN_VALUE" type="System.Int32" default="" output="" null="false" inputmode="4"/>
				</parameters>
			</item>
		</methods>-->



	</item>

	<item create="true"  id="8" name="CVCADORC" api="true" apiname="" friendlyname="Budgets" modelversion="3" descriptor="Tabela de Informações de Orçamentos">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
		<insertcommand key="Key" fieldreturn="" exceptionparamns="" procname="CVCADORCINS" >
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
 IF(EXISTS (SELECT 1 FROM CVCADORC (NOLOCK) WHERE ORGBAS = @ORGBAS AND NIDORC=@NIDORC ))
	    SET @RETURN_VALUE = -2


       
      ]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
IF(@RETURN_VALUE=-2)
	BEGIN
		UPDATE CVCADORC
		   SET CODANI = @CODANI
			  ,DATORC = @DATORC
			  ,APEVET = @APEVET
			  ,HASAPR = @HASAPR
			  ,DSCTIT = @DSCTIT
			  ,VLRTOT = @VLRTOT
			  ,VLRDCT = @VLRDCT
			  ,TIPDCT = @TIPDCT
			  ,VLRLIQ = @VLRLIQ
		 WHERE  ORGBAS = @ORGBAS AND NIDORC = @NIDORC
		 
		 IF(@@ERROR=0)
		    SET @RETURN_VALUE = 2;
	END
		
		
        ]]>
			</pos>
			<returns>
				<return value="1" message="Registro inserido com sucesso" error=""></return>
				<return value="2" message="Registro alterado com sucesso" error=""></return>
				<return value="-1" message="" error="FAILALL"/>
			</returns>
		</insertcommand>
	</item>

	<item create="true"  id="9" name="CVORCLAN" api="true" apiname="" friendlyname="BudgetsRelease" modelversion="3" descriptor="Tabela de Informações de Orçamentos - Lançamentos">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
		<insertcommand key="Key" fieldreturn="" exceptionparamns="" procname="CVORCLANINS" >
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
 IF(EXISTS (SELECT 1 FROM CVORCLAN (NOLOCK) WHERE ORGBAS = @ORGBAS AND ORCLAN=@ORCLAN ))
	    SET @RETURN_VALUE = -2
     
      ]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
IF(@RETURN_VALUE=-2)
	BEGIN
		UPDATE CVORCLAN
		   SET NIDORC = @NIDORC
			  ,DSCORC = @DSCORC
			  ,VLRPAD = @VLRPAD
			  ,VLRLAN = @VLRLAN
			  ,OBSORC = @OBSORC
			  ,QTDNUM = @QTDNUM
			  ,TIPORC = @TIPORC
			  ,CODPCD = @CODPCD
		 WHERE  ORGBAS = @ORGBAS AND ORCLAN = @ORCLAN
		 
		 IF(@@ERROR=0)
		    SET @RETURN_VALUE = 2;
	END
		
		
        ]]>
			</pos>
			<returns>
				<return value="1" message="Registro inserido com sucesso" error=""></return>
				<return value="2" message="Registro alterado com sucesso" error=""></return>
				<return value="-1" message="" error="FAILALL"/>
			</returns>
		</insertcommand>
	</item>


	<item create="true"  id="10" name="CVCADINT" api="true" apiname="" friendlyname="Hospitalization" modelversion="3" descriptor="Tabela de Informações de Internação">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
		<insertcommand key="Key" fieldreturn="" exceptionparamns="'DATUPD'" procname="CVCADINTINS" >
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
 IF(EXISTS (SELECT 1 FROM CVCADINT (NOLOCK) WHERE ORGBAS = @ORGBAS AND NIDINT=@NIDINT ))
	    SET @RETURN_VALUE = -2
      ]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
IF(@RETURN_VALUE=-2)
	BEGIN
		UPDATE CVCADINT
		   SET CODANI = @CODANI
			  ,NOMRSP = @NOMRSP
			  ,CTOTEL = @CTOTEL
			  ,CODORI = @CODORI
			  ,VETRSP = @VETRSP
			  ,VETRSI = @VETRSI
			  ,DSCPTC = @DSCPTC
			  ,QXACLI = @QXACLI
			  ,DSCSIN = @DSCSIN
			  ,DSCANA = @DSCANA
			  ,DATINT = @DATINT
			  ,DATALT = @DATALT
			  ,ACTREA = @ACTREA
			  ,ALTOBT = @ALTOBT
			  ,VALMAX = @VALMAX
			  ,RSPALT = @RSPALT
			  ,CODEMP = @CODEMP
			  ,DATUPD = GETDATE()
		 WHERE ORGBAS = @ORGBAS AND NIDINT = @NIDINT	
		 
		 IF(@@ERROR=0)
		    SET @RETURN_VALUE = 2;
	END
		
		
        ]]>
			</pos>
			<returns>
				<return value="1" message="Registro inserido com sucesso" error=""></return>
				<return value="2" message="Registro alterado com sucesso" error=""></return>

				<return value="-1" message="" error="FAILALL"/>
				<return value="-2" message="" error="RECORDFOUND"/>


			</returns>
		</insertcommand>



		<methods>
			<item script="true" alias="A." sql="" method="GetLastRecord" return="int" returnmode="2" procname="CVCADINTLASNID" desc ="Obtêm o ID do Último Lançamento de Internação gravada" returnvalue="0">
				<query>
					<![CDATA[
DECLARE @RETURN_VALUE INT = 0;
SELECT @RETURN_VALUE = MAX(NIDINT) FROM CVCADINT (NOLOCK) WHERE ORGBAS=@ORGBAS;
IF(@RETURN_VALUE IS NULL)
   SET @RETURN_VALUE = 0;
RETURN @RETURN_VALUE;]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" omit="true" desc ="Origem da Base" name="ORGBAS" type="System.Byte" default="" output="" null=""/>
					<parameter input="false" apply="true" omit="true" desc ="Retorno" name="RETURN_VALUE" type="System.Int32" default="" output="" null="false" inputmode="4"/>
				</parameters>
			</item>
		</methods>



	</item>

	<item create="true"  id="11" name="CVBASORI" api="true" apiname="" friendlyname="OriginBasis" modelversion="3" descriptor="Tabela de Informações de Composição entre as bases de origens e origem base relac" comments ="Esta tabela sintetiza as operações de origens entre as tabelas CVPCDLAN, CVORIORL, CVPCDORI. Por falha de integridade relacional, os dados destas tabelas não fecham entre si, portanto a sintetização aqui se torna necessária devido ao fato de uma mesma origem possuir várias definições de base.">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
		<methods>
			<item script="false" alias="A." sql="" method="Create" return="int" responsemode="1" returnmode="2" procname="PRBASORICRT" desc ="Obtêm os dados de junção da tabela de origens x origens base relac" returnvalue="0">
				<query>
					<![CDATA[]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" omit="true" desc ="Origem da Base" name="ORGBAS" type="System.Byte" default="" output="" null=""/>

					<parameter input="false" apply="true" omit="true" desc ="Retorno" name="RETURN_VALUE" type="System.Int32" default="" output="" null="false" inputmode="4"/>
				</parameters>
			</item>
		</methods>
	</item>


	<item create="true"  id="12" name="CVPCDVAL" api="true" apiname="" friendlyname="ProcedureValues" modelversion="3" descriptor="Tabela de Informações de Procedimentos e Valores padrão de referência">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
		<insertcommand key="Key" fieldreturn="" exceptionparamns="'DATUPD'" procname="CVPCDVALINS" >
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[

      ]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[

        ]]>
			</pos>
			<returns>
				<return value="1" message="Registro inserido com sucesso" error=""></return>
				<return value="-1" message="" error="FAILALL"/>
			</returns>
		</insertcommand>



		<methods>
			<item script="true" alias="A." sql="" method="Delete" return="int" returnmode="2" procname="CVPCDVALDEL" desc ="Remove os registros existentes da tabela de procedimentos valores" returnvalue="0">
				<query>
					<![CDATA[
DECLARE @RETURN_VALUE INT = 0;
DELETE FROM CVPCDVAL WHERE ORGBAS = @ORGBAS
SET @RETURN_VALUE = @@ROWCOUNT;
RETURN @RETURN_VALUE;]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" omit="true" desc ="Origem da Base" name="ORGBAS" type="System.Byte" default="" output="" null=""/>
					<parameter input="false" apply="true" omit="true" desc ="Retorno" name="RETURN_VALUE" type="System.Int32" default="" output="" null="false" inputmode="4"/>
				</parameters>
			</item>
		</methods>
	</item>

	<item create="true"  id="14" name="CVHSTPCD" api="true" apiname="" friendlyname="ProcedureHistory" modelversion="3" descriptor="Tabela de Informações de Histórico de Alteração de Valores de Procedimento">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>

		<insertcommand key="Key" fieldreturn="" exceptionparamns="'DATUPD'" procname="CVHSTPCDINS" method="Insert">
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
IF(EXISTS(SELECT 1 FROM CVHSTPCD (NOLOCK) WHERE ORGBAS = @ORGBAS AND NIDALT = @NIDALT))
	SET @RETURN_VALUE = -2;
       ]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
IF(@RETURN_VALUE=-2)
	BEGIN
		UPDATE CVHSTPCD SET EMPKEY = @EMPKEY, CODPCD = @CODPCD, DATALT = @DATALT, VLRREF = @VLRREF, DATUPD = GETDATE() WHERE ORGBAS = @ORGBAS AND NIDALT = @NIDALT;
		IF(@@ERROR=0)
		   SET @RETURN_VALUE = 2;
	END
        ]]>
			</pos>
			<returns>
				<return value="1"  message="Registro incluindo com sucesso" error="OK"></return>
				<return value="2"  message="Registro incluindo com sucesso" error="OK"></return>
				<return value="-1" message="" error="FAILALL"></return>
			</returns>
		</insertcommand>


	</item>

	<item create="true"  id="15" type="TABLE" name="RFSTAOSS" api="true" apiname="" friendlyname="HospitalizationReferences" modelversion="3" descriptor="Tabela de Parâmetros de Internação" comments="Tabela que define os códigos de procedimentos atrelados a operação de internação e definição de controle de diárias (coleta)">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
	</item>

	<item create="true"  id="16" name="CVPCDALT" api="true" apiname="" friendlyname="ProceduresRecordsHistory" modelversion="3" descriptor="Tabela de Informações de Lançamentos de Procedimentos alterados">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>

		<insertcommand key="Key" fieldreturn="" exceptionparamns="'DATUPD'" procname="CVPCDALTINS" >
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
 IF(EXISTS (SELECT 1 
              FROM CVPCDALT (NOLOCK) 
			 WHERE ORGBAS = @ORGBAS AND NIDALT = @NIDAT))
	    SET @RETURN_VALUE = -2

  
      ]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
	
		
		
        ]]>
			</pos>
			<returns>
				<return value="1" message="Registro incluido com sucesso" error="OK"></return>
				<return value="-1" message="" error="FAILALL"/>
				<return value="-2" message="" error="RECORDFOUND"/>

			</returns>
		</insertcommand>

		<selectcommand>
			<item script="false" alias="A." sql="" method="GetLastProcedure" return="int" returnmode="2" procname="" desc ="Obtêm o ID do Último Registro de Alteração de Procedimento Gravado" returnvalue="0">
				<query>
					<![CDATA[SELECT COALESCE(MAX(NIDALT),0) AS RETURN_VALUE FROM CVPCDALT (NOLOCK)]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" desc ="Origem da Base" name="ORGBAS" type="System.Byte" default="" output="" null=""/>
				</parameters>
			</item>
		</selectcommand>

	</item>

	<item create="true"  id="17" name="CVCADEMP" api="true" apiname="" friendlyname="Units" modelversion="3" descriptor="Tabela de informações de Unidades" remarks="">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
	</item>


	<item create="true"  id="18" name="TBCLIFON" api="false" apiname="" friendlyname="Phones" modelversion="3" descriptor="Tabela de Informações de Telefones de Clientes">

		<SqlTable></SqlTable>
		<insertcommand script="true" key="Key" fieldreturn="" exceptionparamns="'DATUPD'" procname="PRCLIFONINS" method="Insert">
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
  IF(LEN(@NUMTEL)=10 AND @TIPCTO=3 )
     BEGIN
		SET @STAREC=0
		SET NORTEL =0
     END
  IF(LEN(@NUMTEL)=10 AND SUBSTRING(@NUMTEL,3,1)='9')
     BEGIN
		SET @TIPCTO=3
		SET @STAREC=0
		SET NORTEL =0
     END
  IF(LEN(@NUMTEL)=11 AND SUBSTRING(@NUMTEL,3,1)='9' )
     BEGIN
		SET @TIPCTO=3
		SET @STAREC=1
		SET NORTEL =0
     END]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[]]>
			</pos>
			<returns>
				<return operator=">" value="0" message="Registro inserido com sucesso" error="OK"/>
			</returns>
		</insertcommand>
	</item>

	<item create="true"  id="18" name="TBBLAFON" api="false" apiname="" friendlyname="PhonesBlackList" modelversion="3" descriptor="Tabela de Informações de Telefones de Clientes bloqueados para exposição">
		<SqlTable></SqlTable>
	</item>

	<item create="true"  id="19" name="CVCADVET" api="false" apiname="" friendlyname="Veterinarians" modelversion="3" descriptor="Tabela de Informações sobre veterinarios">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
		<insertcommand key="Key" exceptionparamns="'DATUPD'" fieldreturn="NIDSPT" procname="CVCADVETINS">
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
IF(NOT EXISTS(SELECT 1 FROM CVCADVET WHERE VETKEY = 0)) 
     INSERT INTO CVCADVET(VETKEY, APEVET, ORGBAS, DSCVET) VALUES(0, '', 0, 'N/D')	
 
IF(EXISTS(SELECT 1 FROM CVCADVET (NOLOCK) WHERE APEVET = @APEVET AND ORGBAS = @ORGBAS))
	SET @RETURN_VALUE = -2;
	
IF(@RETURN_VALUE=0)
	BEGIN
		SELECT @VETKEY = COALESCE(MAX(VETKEY),0)+1 FROM CVCADVET (NOLOCK)
	END
			]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
IF (@RETURN_VALUE=-2)
     BEGIN
	     UPDATE CVCADVET 
		    SET DSCVET = @DSCVET
			   ,NIDSPT = @NIDSPT
			   ,TIPFUN=@TIPFUN 
		  WHERE APEVET = @APEVET AND ORGBAS = @ORGBAS
		 IF(@@ERROR=0)
			SET @RETURN_VALUE = 2;
     END			
				
					]]>
			</pos>
			<returns>
				<return value="1" message="Registro inserido com sucesso" error="OK"/>
				<return value="2" message="Registro alterado com sucesso" error="OK"/>
				<return value="-2" message="" error="RECORDFOUND"></return>
			</returns>
		</insertcommand>

	</item>

	<item create="true"  id="20" name="CVVETSPT" api="true" apiname="" friendlyname="VeterinarySpecialties" modelversion="3" descriptor="Tabela de Informações sobre especialidades de veterinarios">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>


		<insertcommand key="Identity" exceptionparamns="'DATUPD'" fieldreturn="NIDSPT" procname="PRVETSPTINS">
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[IF(NOT EXISTS(SELECT 1 FROM CVVETSPT (NOLOCK) WHERE NIDSPT =0)) INSERT INTO CVVETSPT(NIDSPT, DSCSPT) VALUES (0,'N/D');
IF(EXISTS(SELECT 1 FROM CVVETSPT (NOLOCK) WHERE NIDSPT =@NIDSPT))
   SET @RETURN_VALUE=-2;
			
			]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[]]>
			</pos>
			<returns>
				<return operator=">" value="0" message="Registro inserido com sucesso" error="OK"/>
				<return value="-2" message="" error="RECORDFOUND"></return>

			</returns>
		</insertcommand>

	</item>


	<item create="true"  id="21" name="CVCADARE" api="false" apiname="" friendlyname="HospitalizationArea" modelversion="3" descriptor="Tabela de Cadastro de Áreas de Internação">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>

		<insertcommand key="Key" fieldreturn="" exceptionparamns="" procname="PRCADAREINS" method="Insert">
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
IF(NOT EXISTS (SELECT 1 FROM CVCADARE (NOLOCK) WHERE AREKEY=0))
     BEGIN
		INSERT INTO CVCADARE (AREKEY,NOMARE,LOCARE,PTEARE,OBSARE,SECARE,EMPKEY) VALUES (0,'N/D','N/D','N/D','N/D','N/D',0)
	 END
IF(EXISTS (SELECT 1 FROM CVCADARE (NOLOCK) WHERE AREKEY=@AREKEY))
   SET @RETURN_VALUE = -2;
   
				
				]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
IF(@RETURN_VALUE=-2)
   BEGIN
		UPDATE CVCADARE 
		   SET NOMARE =@NOMARE
		      , LOCARE=@LOCARE
		      , PTEARE=@PTEARE
		      , OBSARE=@OBSARE
		      , EMPKEY=@EMPKEY 
		 WHERE AREKEY=@AREKEY
	
	IF(@@ERROR=0)
	   SET @RETURN_VALUE=2;
   END
			]]>
			</pos>
			<returns>
				<return value="1" message="Registro inserido com sucesso" error="OK"/>
				<return value="2" message="Registro alterado com sucesso" error="OK"/>
				<return value="-1" message="" error="FAILALL"></return>
				<return value="-2" message="" error="RECORDFOUND"></return>
			</returns>
		</insertcommand>

	</item>


	<item create="true"  id="22" name="TTSQB010" api="true" apiname="" friendlyname="Departments"  modelversion="3" descriptor="Cadastro de Departamentos" comments="Base de origem : SQB010/SQB030 - Departamentos">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>

		<insertcommand key="Key" fieldreturn="" exceptionparamns="'DATUPD'" procname="PRSQB010INS" method="Insert">
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
DECLARE @TMPKEY INT =0
IF(NOT EXISTS(SELECT 1 FROM TTSQB010 (NOLOCK) WHERE DPTKEY=0))
    INSERT INTO TTSQB010 (DPTKEY, CODEMP, CODFIL, CODDPT, DSCDPT, CODCCU) VALUES (0,0,'','','','');
	
IF(EXISTS(SELECT 1 FROM TTSQB010 (NOLOCK) WHERE CODEMP =@CODEMP AND CODFIL = @CODFIL AND CODDPT = @CODDPT))
	BEGIN
		 SET @RETURN_VALUE=-2;
		 SELECT @DPTKEY = DPTKEY FROM TTSQB010 (NOLOCK) WHERE CODEMP =@CODEMP AND CODFIL = @CODFIL AND CODDPT = @CODDPT;
	END

IF(@RETURN_VALUE = 0) 
	BEGIN
        SELECT @TMPKEY = ISNULL(MAX(DPTKEY),0)+1 FROM TTSQB010 WITH (NOLOCK)
		SET @DPTKEY = RIGHT('00' + CONVERT(VARCHAR,@CODEMP),2) + RIGHT('0000000' + CONVERT(VARCHAR,@TMPKEY),7)
	END
				]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
IF(@RETURN_VALUE=-2)
	BEGIN
		UPDATE TTSQB010
		   SET DSCDPT = @DSCDPT
		      ,CODCCU = @CODCCU
			  ,DATUPD = GETDATE()
		 WHERE CODEMP = @CODEMP
		   AND CODFIL = @CODFIL
		   AND CODDPT = @CODDPT
		 
		 IF(@@ERROR=0)
			SET @RETURN_VALUE = 2;
	END
				]]>
			</pos>
			<returns>
				<return value="-1" message="" error="FAILALL"></return>
			</returns>
		</insertcommand>


	</item>

	<item create="true"  id="23" name="TTSRJ010" api="true" apiname="" friendlyname="EmployeeRole"  modelversion="3" descriptor="Registro de Funções de Funcionários" comments="Base de origem : SRJ010/SRJ030 - Funções">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>


	</item>


	<item create="true"  id="24" name="TTSL1010" api="true" apiname="" friendlyname="FinancialRecord" modelversion="3" descriptor="Registro Financeiro">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
		<extendedmodel></extendedmodel>

		<view>
			<item owner="" script="true" definer="" name="VWSL1010" desc ="View de Junção de dados das tabelas TTSL1010, TTLS1011, EXTPCDLV que compõem informações do faturamento">
				<query>
					<![CDATA[
SELECT NIDFIN
          ,TIPREG
		  ,MODINP = CASE WHEN TIPREG IN (2,3) THEN 15 ELSE 1 END
          ,HASCHG
          ,NUMANO
          ,NUMMES
          ,CODEMP
          ,EMPKEY = ISNULL(EMP.EMPKEY,0)
          ,DATFEC
          ,DATEMI
    	  ,DATFEC AS DATPGT
          ,TTSL1010.CODFIL
          ,NUMOSS
          ,CODPCD
          ,VLRLIQ
          ,VLRBRT
          ,NUMNFE
          ,SERNFE
          ,CODANI
          ,VLRPIS
          ,VLRCOF
          ,VLRISS
          ,VLRIRF
          ,VLRCSL
          ,VLRDCT
          ,VLRVCH
          ,VLRGLO
		  ,VLRCPT=0
		  ,VLRREP=0
          ,HASACT
          ,DATACT
          ,NUMORC
          ,DSCSRV
          ,NUMVCH
          ,EMIVCH
          ,NUMITE
          ,STAREC = CASE WHEN TIPREG IN (2,3) THEN 1 ELSE 0 END 
          ,VLROSS
		  ,NIDPCD=0
      FROM TTSL1010 (NOLOCK)
     INNER JOIN (SELECT CODFIL, EMPKEY FROM CVCADEMP (NOLOCK) WHERE HASPRO=1) EMP ON (EMP.CODFIL = TTSL1010.CODFIL)
    WHERE TTSL1010.STAREC = 1
    UNION ALL
    SELECT NIDFIN
          ,TIPREG
		  ,MODINP = CASE WHEN TIPREG = 4 THEN 13 ELSE 18 END
          ,HASCHG
          ,NUMANO
          ,NUMMES
          ,CODEMP
          ,EMPKEY = ISNULL(EMP.EMPKEY,0)
          ,DATFEC
          ,DATEMI
    	  ,DATFEC AS DATPGT
          ,TTSL1011.CODFIL
          ,NUMOSS
          ,CODPCD
          ,VLRLIQ
          ,VLRBRT
          ,NUMNFE
          ,SERNFE
          ,CODANI
          ,VLRPIS
          ,VLRCOF
          ,VLRISS
          ,VLRIRF
          ,VLRCSL
          ,VLRDCT
          ,VLRVCH
          ,VLRGLO
		  ,VLRCPT=0
		  ,VLRREP=0
          ,HASACT
          ,DATACT
          ,NUMORC
          ,DSCSRV
          ,NUMVCH
          ,EMIVCH
          ,NUMITE
          ,1 AS STAREC
          ,VLROSS
		  ,NIDPCD=0
      FROM TTSL1011 (NOLOCK)
     INNER JOIN (SELECT CODFIL, EMPKEY FROM CVCADEMP (NOLOCK) WHERE HASPRO=1) EMP ON (EMP.CODFIL = TTSL1011.CODFIL)
     WHERE TTSL1011.STAREC = 1 AND TIPREG>0
     UNION ALL
    SELECT NIDFIN
          ,TIPREG
		  ,MODINP =13
          ,HASCHG=1
          ,NUMANO
          ,NUMMES
          ,CODEMP
          ,EMPKEY = CODEMP
          ,DATFEC
          ,DATEMI
    	  ,DATFEC AS DATPGT
          ,LOV.CODFIL
          ,NUMOSS
          ,CODPCD
          ,VLRREP
          ,VLRREP
          ,NUMNFE
          ,SERNFE
          ,CODANI
          ,VLRPIS=0
          ,VLRCOF=0
          ,VLRISS=0
          ,VLRIRF=0
          ,VLRCSL=0
          ,VLRDCT=0
          ,VLRVCH=0
          ,VLRGLO=0
		  ,VLRCPT
		  ,VLRREP
          ,HASACT=1
          ,DATACT=NULL
          ,NUMORC=''
          ,DSCSRV
          ,NUMVCH=''
          ,EMIVCH=NULL
          ,NUMITE=1
          ,112 AS STAREC
          ,VLROSS
		  ,NIDPCD
      FROM EXTPCDLV (NOLOCK) LOV
    WHERE LOV.CODFIL IN (SELECT  CODFIL FROM CVCADEMP (NOLOCK) WHERE HASPRO = 1)
      AND LOV.STAREC = 1


]]>
				</query>
			</item>
		</view>
		
		<insertcommand key="Key" fieldreturn="" exceptionparamns="'DATUPD','CHKPCD','CHKANI'" procname="PRSL1010INS" method="Insert">
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
SET @NUMMES = MONTH(@DATFEC);
SET @NUMANO = YEAR(@DATFEC);
SET @HASCHG = 0;

SET @NUMITE = 0;

SELECT @NUMITE = COALESCE(MAX(NUMITE),0)+1 FROM TTSL1010 (NOLOCK) WHERE NIDFIN= @NIDFIN AND TIPREG=@TIPREG;

IF(EXISTS (SELECT 1 FROM TTSL1010 (NOLOCK) WHERE NIDFIN = @NIDFIN AND TIPREG=@TIPREG))
   SET @RETURN_VALUE=-2;
  
IF(@RETURN_VALUE = 0)
	BEGIN
		SELECT @CODEMP = ISNULL(CODEMP,0) FROM CVCADEMP (NOLOCK) WHERE CODFIL = @CODFIL AND HASPRO=1;
		IF(@CODEMP IS NULL)
		   SET @CODEMP = 0;
    END

				]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
  
				]]>
			</pos>
			<returns>
				<return value="1" message="Registro incluido com sucesso" error="OK"></return>
				<return value="2" message="Registro alterado com sucesso" error="OK"></return>
				<return value="-1" message="" error="FAILALL"></return>
			</returns>
		</insertcommand>
		<updatecommand key="Key" fieldreturn="" exceptionparamns="'DATUPD','CHKPCD','CHKANI'" procname="PRSL1010UPD" method="Update">
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
SET @NUMMES = MONTH(@DATFEC);
SET @NUMANO = YEAR(@DATFEC);
SET @HASCHG = 1;
SET @NUMITE = 0;
SELECT @NUMITE = COALESCE(MAX(NUMITE),0)+1 FROM TTSL1010 (NOLOCK) WHERE NIDFIN= @NIDFIN AND TIPREG=@TIPREG;

SELECT @CODEMP = ISNULL(CODEMP,0) FROM CVCADEMP (NOLOCK) WHERE CODFIL = @CODFIL AND HASPRO=1;
IF(@CODEMP IS NULL)
   SET @CODEMP = 0;


				]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[


				]]>
			</pos>
			<returns>
				<return value="1" message="Registro incluido com sucesso" error="OK"></return>
				<return value="2" message="Registro alterado com sucesso" error="OK"></return>

				<return value="-1" message="" error="FAILALL"></return>
			</returns>
		</updatecommand>


		<selectcommand>
			<item script="false" alias="A." sql="" method="Exists" return="int" returnmode="2" procname="" desc ="Verifica se o ID de Registro para o tipo de Registro já existe na tabela de contenção" returnvalue="0">
				<query>
					<![CDATA[IF(EXISTS (SELECT 1 FROM TTSL1010 (NOLOCK) WHERE NIDFIN = @NIDFIN AND TIPREG=@TIPREG))
    SELECT 1 AS RETURN_VALUE
ELSE
	SELECT 0 AS RETURN_VALUE]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" omit="true" desc ="ID de Registro" name="NIDFIN" type="System.Int32" default="" output="" null=""/>
					<parameter input="true" apply="true" omit="true" desc ="Tipo de Registro" name="TIPREG" type="System.Byte" default="" output="" null=""/>
					<parameter input="false" apply="true" omit="true" desc ="Retorno" name="RETURN_VALUE" type="System.Int32" default="" output="" null="false" inputmode="4"/>

				</parameters>
			</item>

		</selectcommand>



	</item>


	<item create="true"  id="25" name="TTSL1011" api="true" apiname="" friendlyname="FinancialRecordService" modelversion="3" descriptor="Registro Financeiro de Serviços">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
		<extendedmodel></extendedmodel>



		<insertcommand key="Key" fieldreturn="" exceptionparamns="'DATUPD','CHKPCD','CHKANI'" procname="PRSL1011INS" method="Insert">
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
SET @NUMMES = MONTH(@DATFEC);
SET @NUMANO = YEAR(@DATFEC);
SET @HASCHG = 0;

SET @NUMITE = 0;

SELECT @NUMITE = COALESCE(MAX(NUMITE),0)+1 FROM TTSL1011 (NOLOCK) WHERE NIDFIN= @NIDFIN AND TIPREG=@TIPREG;

IF(EXISTS (SELECT 1 FROM TTSL1011 (NOLOCK) WHERE NIDFIN = @NIDFIN AND TIPREG=@TIPREG))
   SET @RETURN_VALUE=-2;
  
IF(@RETURN_VALUE = 0)
	BEGIN
		SELECT @CODEMP = ISNULL(CODEMP,0) FROM CVCADEMP (NOLOCK) WHERE CODFIL = @CODFIL AND HASPRO=1;
		IF(@CODEMP IS NULL)
		   SET @CODEMP = 0;
    END

				]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
  
				]]>
			</pos>
			<returns>
				<return value="1" operator="==" message="Registro alterado com sucesso" error="OK"></return>
				<return value="-1" message="" error="FAILALL"></return>
			</returns>
		</insertcommand>
		<updatecommand key="Key" fieldreturn="" exceptionparamns="'DATUPD','CHKPCD','CHKANI'" procname="PRSL1011UPD" method="Update">
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
SET @NUMMES = MONTH(@DATFEC);
SET @NUMANO = YEAR(@DATFEC);
SET @HASCHG = 1;
SET @NUMITE = 0;
SELECT @NUMITE = COALESCE(MAX(NUMITE),0)+1 FROM TTSL1011 (NOLOCK) WHERE NIDFIN= @NIDFIN AND TIPREG=@TIPREG;

SELECT @CODEMP = ISNULL(CODEMP,0) FROM CVCADEMP (NOLOCK) WHERE CODFIL = @CODFIL AND HASPRO=1;
IF(@CODEMP IS NULL)
   SET @CODEMP = 0;


				]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[


				]]>
			</pos>
			<returns>
				<return value="1" operator="==" message="Registro alterado com sucesso" error="OK"></return>
				<return value="-1" message="" error="FAILALL"></return>
			</returns>
		</updatecommand>


		<selectcommand>
			<item script="false" alias="A." sql="" method="Exists" return="int" returnmode="2" procname="" desc ="Verifica se o ID de Registro para o tipo de Registro já existe na tabela de contenção" returnvalue="0">
				<query>
					<![CDATA[
DECLARE @RETURN_VALUE INT = 0;		
SELECT @RETURN_VALUE = COALESCE(STAREC,0) FROM TTSL1011 (NOLOCK) WHERE NIDFIN = @NIDFIN AND TIPREG=@TIPREG
IF(@RETURN_VALUE IS NULL)
   SET @RETURN_VALUE = 0;
SELECT @RETURN_VALUE AS RETURN_VALUE;]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" omit="true" desc ="ID de Registro" name="NIDFIN" type="System.Int32" default="" output="" null=""/>
					<parameter input="true" apply="true" omit="true" desc ="Tipo de Registro" name="TIPREG" type="System.Byte" default="" output="" null=""/>
					<parameter input="false" apply="true" omit="true" desc ="Retorno" name="RETURN_VALUE" type="System.Int32" default="" output="" null="false" inputmode="4"/>

				</parameters>
			</item>

		</selectcommand>


	</item>




	<item create="true"  id="25" name="TBLOCCEP" api="true" apiname="" friendlyname="PostalAddressBook" modelversion="3" descriptor="CEP Localizado">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
		<extendedmodel></extendedmodel>



		<insertcommand key="Key" fieldreturn="" exceptionparamns="'DATCAD'" procname="PRLOCCEPINS" method="Insert">
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
				
IF(EXISTS(SELECT 1 FROM TBLOCCEP (NOLOCK) WHERE ORGBAS = @ORGBAS AND CODCMF = @CODCMF))
    SET @RETURN_VALUE= -2
				]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
  
				]]>
			</pos>
			<returns>
				<return value="1" message="Registro incluido com sucesso" error="OK"></return>
				<return value="-1" message="" error="FAILALL"></return>
				<return value="-2" message="" error="RECORDFOUND"></return>
			</returns>
		</insertcommand>
		<updatecommand key="Key" fieldreturn="" exceptionparamns="'DATCAD','DSCEND'" procname="PRLOCCEPUPD" method="Update">
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
				
IF(NOT EXISTS(SELECT 1 FROM TBLOCCEP (NOLOCK) WHERE ORGBAS = @ORGBAS AND CODCMF = @CODCMF))
    SET @RETURN_VALUE= -2
				]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
  
				]]>
			</pos>
			<returns>
				<return value="1" message="Registro alterado com sucesso" error="OK"></return>
				<return value="-1" message="" error="FAILALL"></return>
				<return value="-2" message="" error="RECORDNOTFOUND"></return>
			</returns>
		</updatecommand>


		<selectallcommand>

			<item script="false" alias="A." sql="" method="SelectAll" type="List" return="PostalAddressBook" procname="" desc ="Obtêm uma lista de todos os clientes e cep's cadastrados" remarks="">
				<query>
					<![CDATA[SELECT * FROM TBLOCCEP (NOLOCK) WHERE STAREC=0]]>
				</query>


			</item>
		</selectallcommand>

		<methods>
			<item script="true" alias="" sql="" method="UpdateClientBase" return="int" returnmode="21" procname="PRLOCCEPUPDCLI" desc ="Atualiza a base de clientes com o cep localizado e anula o registro de localização" returnvalue="0">
				<query>
					<![CDATA[
DECLARE @CODCEP VARCHAR(8)
DECLARE @RETURN_VALUE INT =0;
IF(EXISTS(SELECT 1 FROM TBLOCCEP (NOLOCK) WHERE ORGBAS = @ORGBAS AND CODCMF = @CODCMF AND VRFCEP=1))
	BEGIN
		SELECT @CODCEP = CODCEP FROM TBLOCCEP (NOLOCK) WHERE ORGBAS = @ORGBAS AND CODCMF = @CODCMF AND VRFCEP=1 AND STACEP<>9
		IF(TRIM(@CODCEP) NOT IN ('','00000000'))
		    UPDATE CVCADCLI SET AVACEP = @CODCEP WHERE ORGBAS = @ORGBAS AND CODCMF = @CODCMF AND AVACEP = '00000000'
			IF(@@ERROR=0)
				BEGIN
					UPDATE TBLOCCEP SET STACEP = 9 WHERE ORGBAS = @ORGBAS AND CODCMF = @CODCMF AND VRFCEP=1;
					SET @RETURN_VALUE = 1;
				END
	END
RETURN @RETURN_VALUE;
]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" desc ="Id de Origem" name="ORGBAS" type="System.Byte" default="" output="" null=""/>
					<parameter input="true" apply="true" desc ="CPF/CNPJ" name="CODCMF" type="System.String" size ="14" default="" output="" null=""/>
				</parameters>
			</item>
		</methods>


	</item>

	<item create="true"  id="26" name="TTSZ6010" api="true" apiname="" friendlyname="MedicalInsurance" modelversion="3" descriptor="Convênio Médico">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
		<extendedmodel></extendedmodel>



		<insertcommand key="identity" fieldreturn="" exceptionparamns="'DATUPD'" procname="PRSZ6010INS" method="Insert">
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
SET @NUMMES = 0
SET @NUMANO = 0



IF(EXISTS (SELECT 1 FROM TTSZ6010 (NOLOCK) WHERE NIDFIN = @NIDFIN AND TIPREG=@TIPREG))
   SET @RETURN_VALUE=-2;
  
IF(@RETURN_VALUE = 0)
	BEGIN
		SELECT @CODEMP = ISNULL(CODEMP,0) FROM CVCADEMP (NOLOCK) WHERE CODFIL = @CODFIL AND HASPRO=1;
		IF(@CODEMP IS NULL)
		   SET @CODEMP = 0;
    END

				]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
  
				]]>
			</pos>
			<returns>
				<return value="1" message="Registro incluido com sucesso" error="OK"></return>
				<return value="2" message="Registro alterado com sucesso" error="OK"></return>
				<return value="-2" message="" error="RECORDFOUND"></return>

			</returns>
		</insertcommand>
		<updatecommand key="identity" fieldreturn="" exceptionparamns="'DATCAD','DATUPD'" procname="PRSZ6010UPD" method="Update">
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
SELECT @CODEMP = ISNULL(CODEMP,0) FROM CVCADEMP (NOLOCK) WHERE CODFIL = @CODFIL AND HASPRO=1;
IF(@CODEMP IS NULL)
   SET @CODEMP = 0;
				]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
				]]>
			</pos>
			<returns>
				<return value="1" message="Registro incluido com sucesso" error="OK"></return>
				<return value="2" message="Registro alterado com sucesso" error="OK"></return>
			</returns>
		</updatecommand>


		<selectcommand>
			<item script="false" alias="A." sql="" method="Exists" return="int" returnmode="2" procname="" desc ="Verifica se o ID de Registro para o tipo de Registro já existe na tabela de contenção" returnvalue="0">
				<query>
					<![CDATA[IF(EXISTS (SELECT 1 FROM TTSZ6010 (NOLOCK) WHERE NIDFIN = @NIDFIN AND TIPREG=@TIPREG))
    SELECT 1 AS RETURN_VALUE
ELSE
	SELECT 0 AS RETURN_VALUE]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" omit="true" desc ="ID de Registro" name="NIDFIN" type="System.Int32" default="" output="" null=""/>
					<parameter input="true" apply="true" omit="true" desc ="Tipo de Registro" name="TIPREG" type="System.Byte" default="" output="" null=""/>
					<parameter input="false" apply="true" omit="true" desc ="Retorno" name="RETURN_VALUE" type="System.Int32" default="" output="" null="false" inputmode="4"/>

				</parameters>
			</item>

		</selectcommand>


	</item>

	<item create="true"  id="27" name="EXTPETLV" api="true" apiname="" friendlyname="MedicalInsuranceControl" modelversion="3" descriptor="Controle de Convênio Médico PetLove">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
		<extendedmodel></extendedmodel>
		<insertcommand key="identity"  supressidentity="true" fieldreturn="" exceptionparamns="'DATUPD','OLDRGA','CODDPR','NUMOSS','NIDPCD','VLRPCD','VLROSS','VLRLIQ','VLRDIF','DIFLOC','CNVKEY'" procname="PREXTPETINS" method="Insert">
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
SET @NUMMES = MONTH(@DATLAN)
SET @NUMANO = YEAR(@DATLAN)
DECLARE @PTLKEY INT = 0;


IF(@DATLAN <= '2023-07-31 23:59:59' AND @EMPKEY=10)
   SET @STAREC = 0;

SELECT @PTLKEY = COALESCE(PTLKEY,0) 
  FROM EXTPETLV (NOLOCK)
 WHERE ORGBAS = @ORGBAS
   AND EMPKEY = @EMPKEY
   AND NUMMES = @NUMMES
   AND NUMANO = @NUMANO
   AND CODATE = @CODATE
   AND DATLAN = @DATLAN
   AND TRIM(NOMCLI) = TRIM (@NOMCLI)
   AND TRIM(NOMANI) = TRIM (@NOMANI)
   AND TRIM(DSCESP) = TRIM (@DSCESP)
   AND TRIM(DSCRAC) = TRIM (@DSCRAC)  
   AND TRIM(SEXANI) = TRIM (@SEXANI)  
   AND TRIM(PLNANI) = TRIM (@PLNANI)
   AND TRIM(NUMRGA) = TRIM (@NUMRGA)
   AND TRIM(NUMIDE) = TRIM (@NUMIDE)
   AND TRIM(NOMVET) = TRIM (@NOMVET)
   AND TRIM(CODCMF) = TRIM (@CODCMF)
   AND TRIM(STAPGT) = TRIM (@STAPGT)
   AND TRIM(DSCPCD) = TRIM (@DSCPCD);
   
    IF(@PTLKEY IS NULL)
	   SET @PTLKEY = 0;


IF(@PTLKEY>0)
  SET @RETURN_VALUE = -2;

  
				]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
  
IF(@RETURN_VALUE = -2)
	BEGIN
		UPDATE EXTPETLV
		   SET VLRLAN = VLRLAN + @VLRLAN
			  ,VLRCPT = VLRCPT + @VLRCPT
		WHERE PTLKEY = @PTLKEY;
		
		   IF(@@ERROR=0)
		      SET @RETURN_VALUE = 2;
	END
  

				]]>
			</pos>
			<returns>
				<return value="1" message="Registro incluido com sucesso" error="OK"></return>
				<return value="2" message="Registro alterado com sucesso" error="OK"></return>
				<return value="-1" message="" error="FAILALL"></return>

			</returns>
		</insertcommand>

		<methods>

			<item script="true" alias="A." sql="" method="Delete" return="int" returnmode="21" procname="PREXTPETDEL" desc ="Transfere os dados de uma PA para o registro financeiro" returnvalue="0" remarks="">
				<query>
					<![CDATA[
DECLARE @RETURN_VALUE INT =0;
DELETE FROM EXTPETLV WHERE EMPKEY = @EMPKEY AND NUMMES =@NUMMES AND NUMANO = @NUMANO;
SET @RETURN_VALUE = @@ROWCOUNT;
RETURN @RETURN_VALUE;
 					]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" omit="true" desc ="Empresa" name="EMPKEY" type="System.Byte" default="" output="" null=""/>
					<parameter input="true" apply="true" omit="true" desc ="Mes" name="NUMMES" type="System.Byte" default="" output="" null=""/>
					<parameter input="true" apply="true" omit="true" desc ="Ano" name="NUMANO" type="System.Int16" default="" output="" null=""/>

				</parameters>
			</item>

			<item script="false" alias="A." sql="" method="UpdateReferences" return="int" returnmode="21" procname="PREXTPETUPDREF" desc ="Atualiza as referências de código de animal e cpf para cadas registro" returnvalue="0" remarks="">
				<query>
					<![CDATA[

 					]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" omit="true" desc ="Empresa" name="EMPKEY" type="System.Byte" default="" output="" null=""/>
					<parameter input="true" apply="true" omit="true" desc ="Mes" name="NUMMES" type="System.Byte" default="" output="" null=""/>
					<parameter input="true" apply="true" omit="true" desc ="Ano" name="NUMANO" type="System.Int16" default="" output="" null=""/>
				</parameters>
			</item>

			<item script="true" alias="A." sql="" method="UpdateProceduresReferences" return="int" returnmode="21" procname="PREXTPETUPDPCD" desc ="Atualiza as referências de procedimentos e suas correlações para equalização de informações" returnvalue="0" remarks="">
				<query>
					<![CDATA[
	DECLARE @RETURN_VALUE INT = 0;
    /* ---------------------------------------------------------------------------------------------------------------------------
      ATUALIZA O DE-PARA DE PROCEDIMENTOS GERAL
    ------------------------------------------------------------------------------------------------------------------------------*/
    UPDATE EXTPETLV 
       SET CODPCD = DP.CODPCD
	      ,NIDPCD = 0
		  ,NUMOSS = 0
		  ,DIFLOC = 0
		  ,VLRPCD = 0
      FROM EXTPETLV LV
     INNER JOIN EXTPCDDP (NOLOCK) DP ON (DP.DSCPCD = LV.DSCPCD)
     WHERE DP.CODEMP=0
       AND LV.EMPKEY=@EMPKEY AND LV.NUMMES = @NUMMES AND LV.NUMANO = @NUMANO
       AND LV.STAREC NOT IN (0,200)
       SET @RETURN_VALUE = @@ROWCOUNT;
    /* ---------------------------------------------------------------------------------------------------------------------------
      ATUALIZA O DE-PARA DE PROCEDIMENTOS POR EMPRESA
    ------------------------------------------------------------------------------------------------------------------------------*/
    UPDATE EXTPETLV 
       SET CODPCD = DP.CODPCD
	   	  ,NIDPCD = 0
		  ,NUMOSS = 0
		  ,DIFLOC = 0
		  ,VLRPCD = 0
      FROM EXTPETLV LV
     INNER JOIN EXTPCDDP (NOLOCK) DP ON (DP.DSCPCD = LV.DSCPCD)
     WHERE DP.CODEMP=@EMPKEY
       AND LV.EMPKEY=@EMPKEY AND LV.NUMMES = @NUMMES AND LV.NUMANO = @NUMANO
       AND LV.STAREC NOT IN (0,200)
       SET @RETURN_VALUE = @RETURN_VALUE + @@ROWCOUNT;
    RETURN @RETURN_VALUE;				
				
				]]>

				</query>

				<parameters>
					<parameter input="true" apply="true" omit="true" desc ="Empresa" name="EMPKEY" type="System.Byte" default="" output="" null=""/>
					<parameter input="true" apply="true" omit="true" desc ="Mes" name="NUMMES" type="System.Byte" default="" output="" null=""/>
					<parameter input="true" apply="true" omit="true" desc ="Ano" name="NUMANO" type="System.Int16" default="" output="" null=""/>
				</parameters>
			</item>


			<item script="true" alias="A." sql="" method="TransferToFinantial" return="int" returnmode="21" procname="PREXTPETTRFFIN" desc ="Transfere os dados de uma PA para o registro financeiro" returnvalue="0" remarks="Este evento ocorre quando uma PA não é encontrada na Tabela TTSZ6010">
				<query>
					<![CDATA[
INSERT INTO TTSZ6010 
      (    NIDFIN,     CODATE, TIPREG, SRCSYS,     NUMMES,     NUMANO,     DATFEC,     DATEMI,     DATPGT,    CODEMP,     NUMOSS,    CODPCD,    VLRBRT,   CODANI)
SELECT LOV.CODATE, LOV.CODATE,     14,      1, LOV.NUMMES, LOV.NUMANO, LOV.DATLAN, LOV.DATLAN, LOV.DATLAN,LOV.EMPKEY, LOV.NUMOSS,LOV.CODPCD,LAN.VLRPCD,LAN.CODANI 
FROM CVPCDLAN (NOLOCK) LAN
INNER JOIN EXTPETLV (NOLOCK) LOV
   ON (LOV.NUMOSS = LAN.NUMOSS AND LOV.CODPCD = LAN.CODPCD)
WHERE LAN.NUMOSS=@NUMOSS;
RETURN @@ROWCOUNT;
 					]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" omit="true" desc ="Número da OS" name="NUMOSS" type="System.Int32" default="" output="" null=""/>
				</parameters>
			</item>


			<item script="true" alias="A." sql="" method="CheckExistenceRecord" return="int" returnmode="21" procname="PREXTPETCHKEXI" desc ="Checa se o lançamentoe existe na tabela corresponde de registro de procedimentos" returnvalue="0" remarks="">
				<query>
					<![CDATA[
	DECLARE @RETURN_VALUE INT =0;
    UPDATE EXTPETLV SET HASREC=0 WHERE EMPKEY = @EMPKEY;
    SET @RETURN_VALUE = @@ROWCOUNT;
    
    UPDATE EXTPETLV
       SET HASREC = 1
      FROM EXTPETLV
     INNER JOIN (SELECT DISTINCT CODEMP, CODANI 
                   FROM CVPCDLAN (NOLOCK) 
    			  WHERE CODEMP=@EMPKEY AND STAREC=1) LAN
    	ON (LAN.CODEMP = EXTPETLV.EMPKEY AND LAN.CODANI = EXTPETLV.CODANI)
     WHERE EMPKEY = @EMPKEY;
     SET @RETURN_VALUE = @RETURN_VALUE + @@ROWCOUNT;
	 RETURN @RETURN_VALUE;
 
 					]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" omit="true" desc ="Código da Empresa" name="EMPKEY" type="System.Byte" default="" output="" null=""/>
				</parameters>
			</item>

			<item script="true" alias="A." sql="" method="UpdateRecordsOnFinantial" return="int" returnmode="21" procname="PREXTPETUPDFIN" desc ="Promove a atualização dos dados relativos ao financeiro" returnvalue="0" remarks="Este evento ocorre quando se há a necessidade de se associar da Tabela TTSZ6010 para um determinado periodo financeiro">
				<query>
					<![CDATA[
UPDATE TTSZ6010
   SET VLRLIQ = CASE WHEN LOV.STAPGT='PAGO' THEN LOV.VRLLAN ELSE 0 END 
       ,NUMMES = LOV.NUMMES
	   ,NUMANO = LOV.NUMANO
  FROM TTSZ6010  SZ6
 INNER JOIN EXTPETLV (NOLOCK) LOV  
    ON (LOV.CODPCD = SZ6.CODPCD AND LOV.NUMOSS = SZ6.NUMOSS) 
RETURN @@ROWCOUNT;
 					]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" omit="true" desc ="´Número da OS" name="NUMOSS" type="System.Int32" default="" output="" null=""/>
				</parameters>
			</item>

			<item script="true" alias="A." sql="" method="TransferToProcedures" return="int" returnmode="21" procname="PREXTPCDTRFPCD" desc ="Executa a atualização do arquivo de integração com o faturamento" returnvalue="0" remarks="Este processo além das informações basicas de empresa, ano e mês, necessita do número da nota fiscal e série relativas ao movimento">
				<query>
					<![CDATA[
   DECLARE @RETURN_VALUE INT = 0
    
    /*
	 * VERIFICA SE EXISTE MOVIMENTO A INTEGRAR
	 */
	IF (NOT EXISTS( SELECT 1 
	                 FROM EXTPETLV (NOLOCK)
    	     WHERE EMPKEY = @EMPKEY
               AND NUMANO = @NUMANO
    	       AND NUMMES = @NUMMES
    	       AND STAREC = 1
			   AND STAPGT = CASE WHEN @STAPGT = 1 THEN 'Pago' ELSE 'Não Pago' END ))
		SET @RETURN_VALUE=-2;
    
	/*
	 * VERIFICA SE A NOTA FISCAL EXISTE E NAO FOI INTEGRADA
	 */
	IF(NOT EXISTS(SELECT 1 
	                FROM TTSL1011 (NOLOCK) 
				   WHERE CODEMP = @EMPKEY AND NUMNFE = @NUMNFE AND SERNFE = @SERNFE AND STAREC=1))
		SET @RETURN_VALUE = -1;


	/*
	 * INTEGRA O MOVIMENTO SE NAO HOUVER FALHA
	 */

	BEGIN TRANSACTION
	IF(@RETURN_VALUE = 0)
		BEGIN
    		DELETE FROM EXTPCDLV
    	     WHERE CODEMP = @EMPKEY
               AND NUMANO = @NUMANO
    	       AND NUMMES = @NUMMES
    	       AND STAREC = 1;
    
    		INSERT INTO EXTPCDLV 
    	           (NIDFIN
    	           ,TIPREG
    	           ,NUMANO
    	           ,NUMMES
    	           ,CODEMP
    	           ,DATFEC
    	           ,DATEMI
    	           ,CODFIL
    	           ,NUMOSS
    	           ,CODPCD
    	           ,VLROSS
    	           ,VLRLIQ
    	           ,VLRBRT
    	           ,NUMNFE
    	           ,SERNFE
    	           ,CODANI
    	           ,DSCSRV
    	           ,STAREC
    	           ,NIDPCD)
    	    SELECT
    	            PTLKEY
    	           ,14
    	           ,@NUMANO
    	           ,@NUMMES
    	           ,@EMPKEY
    	           ,DATLAN
    	           ,DATLAN
    	           ,CODFIL
    	           ,NUMOSS
    	           ,CODPCD
    	           ,VLROSS
    	           ,VLRLAN
    	           ,VLRLAN
    	           ,@NUMNFE
    	           ,@SERNFE
    	           ,CODANI
    	           ,'PETLOVE'
    	           ,1
    	           ,NIDPCD
    		  FROM EXTPETLV (NOLOCK)
    		 WHERE EMPKEY = @EMPKEY
    		   AND NUMANO = @NUMANO
    		   AND NUMMES = @NUMMES
    		   AND STAREC = 1;
    
    	      IF(@@ERROR = 0 AND @@ROWCOUNT >0)
				BEGIN
					UPDATE EXTPETLV 
					   SET STAREC= CASE WHEN @STAPGT = 1 THEN 201 ELSE 200 END
					 WHERE EMPKEY = @EMPKEY
					   AND NUMANO = @NUMANO
		               AND NUMMES = @NUMMES
		               AND STAREC = 1
					   AND STAPGT = CASE WHEN @STAPGT = 1 THEN 'Pago' ELSE 'Não Pago' END 
					   
					   IF(@@ERROR = 0)
					       BEGIN
						   
								/*
								 * BLOQUEIA NOTA FISCAL ENVOLVIDA
								 */
								UPDATE TTSL1011
								   SET STAREC = 200
								 WHERE CODEMP = @EMPKEY
					  
								   AND NUMNFE = @NUMNFE
								   AND SERNFE = @SERNFE
								   
								   IF(@@ERROR = 0)
								       SET @RETURN_VALUE=1;
						   END
					
				END
		END
	  ELSE
	       PRINT @RETURN_VALUE;

	  IF(@RETURN_VALUE = 0)
	      ROLLBACK TRANSACTION;
      ELSE
	     COMMIT TRANSACTION;
      RETURN @RETURN_VALUE;
 					]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" omit="true" desc ="Empresa" name="EMPKEY" type="System.Byte" default="" output="" null=""/>
					<parameter input="true" apply="true" omit="true" desc ="Mes" name="NUMMES" type="System.Byte" default="" output="" null=""/>
					<parameter input="true" apply="true" omit="true" desc ="Ano" name="NUMANO" type="System.Int16" default="" output="" null=""/>
					<parameter input="true" apply="true" omit="true" desc ="NF" name="NUMNFE" type="System.String"  size="9" default="" output="" null=""/>
					<parameter input="true" apply="true" omit="true" desc ="Série" name="SERNFE" type="System.String"  size="4" default="" output="" null=""/>
					<parameter input="true" apply="true" omit="true" desc ="Status de Pagamento" name="STAPGT" type="System.Byte"   default="" output="" null=""/>

				</parameters>
			</item>
		</methods>

	</item>

	<item create="true"  id="28" name="EXTPCDDP" api="false" apiname="" friendlyname="MedicalInsuranceControlFromTo" modelversion="3" descriptor="Controle de Convênio Médico PetLove - Relação de-para de procedimentos" remarks ="Relaciona um código de procedimento por empresa, opionalmente, para localização">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
		<extendedmodel></extendedmodel>
	</item>
	<item create="true"  id="29" name="RLPCDDPR" api="false" apiname="" friendlyname="MedicalInsuranceControlFromToRelational" modelversion="3" descriptor="Controle de Convênio Médico PetLove - Relação de-para de procedimentos Alternativos" remarks="Esta tabela tem o objetivo de relacionar um código de de-para de procedimentos de forma recorrente">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
		<extendedmodel></extendedmodel>
	</item>


	<item create="true"  id="30" name="CVLDOCTO" api="true" apiname="" friendlyname="TechnicalReports" modelversion="3" descriptor="Conteúdo de Laudos" remarks="Tabela de Origem SGV : laudos_conteudo">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
		<extendedmodel></extendedmodel>

		<insertcommand key="Key" fieldreturn="" exceptionparamns="" procname="PRLDOCTO" method="Insert">
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
				
IF(EXISTS(SELECT 1 FROM CVLDOCTO (NOLOCK) WHERE ORGBAS = @ORGBAS AND NIDLDO = @NIDLDO))
    SET @RETURN_VALUE= -2
				]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
 IF(@RETURN_VALUE = -2)
	BEGIN
	    UPDATE CVLDOCTO
		   SET NIDPCD = @NIDPCD
		      ,NIDIDE = @NIDIDE
			  ,URLLDO = @URLLDO
			  ,DATCAD = @DATCAD
		 WHERE ORGBAS = @ORGBAS AND NIDLDO = @NIDLDO
		
		IF (@@ERROR = 0)
		    SET @RETURN_VALUE = 2;
	END
				]]>
			</pos>
			<returns>
				<return value="1" message="Registro incluido com sucesso" error="OK"></return>
				<return value="2" message="Registro alterado com sucesso" error="OK"></return>

				<return value="-1" message="" error="FAILALL"></return>
			</returns>
		</insertcommand>




	</item>


	<item create="true"  id="31" type="TABLE" name="RFSTAOSV" api="false" apiname="" friendlyname="HospitalizationReferencesVWC" modelversion="3" descriptor="Tabela de Parâmetros de Consulta/Internação - Vet We Care" comments="Tabela que define os códigos de procedimentos atrelados a operação de internação e definição de controle de diárias (coleta) com exclusividade da VET WE CARE">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
	</item>

	<item create="true"  id="32" type="VIEW" name="VWLANVWC" api="false" apiname="" friendlyname="ProceduresRecordsVWC" modelversion="3" descriptor="View de Registro de Lançamentos aplicados para a VET WE CARE" comments="Esta visualização além de exibir os resultados normais de um lançamento, formata campos adicionais de análise específicas da VET WE CARE">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
	</item>

	<item create="true"  id="33" type="TABLE" name="EXTPCDLV" api="false" apiname="" friendlyname="MedicalInsuranceControlProcedures" modelversion="3" descriptor="Tabela de Armazenamento de informações de integração de conciliação de registros PETLOVE" comments="">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
	</item>

	<item create="true"  id="34" type="TABLE" name="CVCADUSU" api="false" apiname="" friendlyname="Users" modelversion="3" descriptor="Tabela de informações de usuário" comments="">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>

		<insertcommand key="Key" fieldreturn="" exceptionparamns="" procname="CVCADUSUINS" method="Insert">
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
				
IF(NOT EXISTS (SELECT 1 FROM CVCADUSU (NOLOCK) WHERE CODUSU=0))
	INSERT INTO CVCADUSU ([ORGBAS],[CODUSU],[NOMUSU],[DOCUSU],[PFLUSU], CODSPT,[DSCMAL],[STAUSU],[NIVUSU]) VALUES ( 0,0,'N/D','',0,0,'','N',0)
IF(EXISTS(SELECT 1 FROM CVCADUSU (NOLOCK) WHERE ORGBAS = @ORGBAS AND CODUSU = @CODUSU))
    SET @RETURN_VALUE= -2
				]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
 IF(@RETURN_VALUE = -2)
	BEGIN
	    UPDATE CVCADUSU
		   SET NOMUSU = @NOMUSU
		      ,DOCUSU = @DOCUSU
			  ,PFLUSU = @PFLUSU
			  ,CODSPT = @CODSPT
			  ,DSCMAL = @DSCMAL
			  ,STAUSU = @STAUSU
			  ,NIVUSU = @NIVUSU
		 WHERE ORGBAS = @ORGBAS AND CODUSU = @CODUSU
		
		IF (@@ERROR = 0)
		    SET @RETURN_VALUE = 2;
	END
				]]>
			</pos>
			<returns>
				<return value="1" message="Registro incluido com sucesso" error="OK"></return>
				<return value="2" message="Registro alterado com sucesso" error="OK"></return>
				<return value="-1" message="" error="FAILALL"></return>
			</returns>
		</insertcommand>


	</item>



	<item create="true"  id="300" name="CT2010" api="true" apiname="" friendlyname="Ledger" modelversion="3" descriptor="PROTHEUS - Ledger" remarks="CT2010/CT2030">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
		<insertcommand key="Key" fieldreturn="" exceptionparamns="" procname="PTCT2010INS" >
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
 IF(EXISTS (SELECT 1 FROM CT2010 (NOLOCK) WHERE CODEMP = @CODEMP AND R_E_C_N_O_=@R_E_C_N_O_ ))
	    SET @RETURN_VALUE = -2
     ]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[

		
		
        ]]>
			</pos>
			<returns>
				<return value="1" message="Registro incluido com sucesso" error="OK"></return>
				<return value="-1" message="" error="FAILALL"/>
				<return value="-2" message="" error="RECORDFOUND"/>
				<return value="-99999" message="" error="BROKENCONNECTION"/>
			</returns>
		</insertcommand>

		<selectcommand>
			<item script="false" alias="A." sql="" method="GetLastRecord" return="int" returnmode="2" procname="" desc ="Obtêm o ID do Último Registro de Origens Gravado" returnvalue="0">
				<query>
					<![CDATA[IF(EXISTS (SELECT 1 FROM CT2010 (NOLOCK) WHERE CODEMP = @CODEMP))
    SELECT MAX(R_E_C_N_O_) AS RETURN_VALUE FROM CT2010 (NOLOCK) WHERE CODEMP=@CODEMP
ELSE
	SELECT 0 AS RETURN_VALUE]]>
				</query>
				<parameters>
					<parameter input="true" apply="true" omit="true" desc ="Empresa" name="CODEMP" type="System.Byte" default="" output="" null=""/>
					<parameter input="false" apply="true" omit="true" desc ="Retorno" name="RETURN_VALUE" type="System.Int64" default="" output="" null="false" inputmode="4"/>

				</parameters>
			</item>

		</selectcommand>

		<methods>
			<item script="true" alias="" sql="" method="Delete" return="int" returnmode="0" procname="PTCT2010DEL" desc ="Remove um período de processamento" returnvalue="0">
				<query merge="true">
					<![CDATA[
DECLARE @RETURN_VALUE INT =0;
					DELETE FROM CT2010 WHERE CODEMP=@CODEMP AND NUMANO = @NUMANO AND NUMMES = @NUMMES
					SET @RETURN_VALUE = @@ROWCOUNT;
					RETURN @RETURN_VALUE;					
					]]>
				</query>
				<parameters>
					<parameter input="true" apply="true"  omit="true" desc ="Código da Empresa" name="CODEMP" type="System.Byte" default="" output="" null="false"/>
					<parameter input="true" apply="true"  omit="true" desc ="Mes de Processamento" name="NUMMES" type="System.Byte" default="" output="" null="false"/>
					<parameter input="true" apply="true"  omit="true" desc ="Ano de Processamento" name="NUMANO" type="System.Int16" default="" output="" null="false"/>
					<parameter input="false" apply="true" omit="true" desc ="Retorno" name="RETURN_VALUE" type="System.Int32" default="" output="" null="false" inputmode="4"/>

				</parameters>
			</item>
		</methods>


	</item>

	<item create="true"  id="302" name="SN1010" api="true" apiname="" friendlyname="Assets" modelversion="3" descriptor="PROTHEUS - Assets" remarks="SN1010/SN1030">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
		<insertcommand key="Key" fieldreturn="" exceptionparamns="" procname="PTSN1010INS" >
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
 IF(EXISTS (SELECT 1 FROM SN1010 (NOLOCK) WHERE CODEMP = @CODEMP AND R_E_C_N_O_=@R_E_C_N_O_ ))
	    SET @RETURN_VALUE = -2


       
      ]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[

		
		
        ]]>
			</pos>
			<returns>
				<return value="1" message="Registro incluido com sucesso" error="OK"></return>
				<return value="-1" message="" error="FAILALL"/>
				<return value="-2" message="" error="RECORDFOUND"/>
				<return value="-99999" message="" error="BROKENCONNECTION"/>
			</returns>
		</insertcommand>



		<methods>
			<item script="true" alias="" sql="" method="Delete" return="int" returnmode="0" procname="PTSN1010DEL" desc ="Remove uma empresa cadastrada" returnvalue="0">
				<query merge="true">
					<![CDATA[
DECLARE @RETURN_VALUE INT =0;
					DELETE FROM SN1010 WHERE CODEMP=@CODEMP
					SET @RETURN_VALUE = @@ROWCOUNT;
					RETURN @RETURN_VALUE;					
					]]>
				</query>
				<parameters>
					<parameter input="true" apply="true"  omit="true" desc ="Código da Empresa" name="CODEMP" type="System.Byte" default="" output="" null="false"/>
					<parameter input="false" apply="true" omit="true" desc ="Retorno" name="RETURN_VALUE" type="System.Int32" default="" output="" null="false" inputmode="4"/>

				</parameters>
			</item>
		</methods>


	</item>

	<item create="true"  id="303" name="CTT010" api="true" apiname="" friendlyname="CostCenter" modelversion="3" descriptor="PROTHEUS - Cost Centers" remarks="CTT010/CTT030">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
		<insertcommand key="Key" fieldreturn="" exceptionparamns="" procname="PTCTT010INS" >
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
 IF(EXISTS (SELECT 1 FROM CTT010 (NOLOCK) WHERE CODEMP = @CODEMP AND R_E_C_N_O_=@R_E_C_N_O_ ))
	    SET @RETURN_VALUE = -2


       
      ]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[

		
		
        ]]>
			</pos>
			<returns>
				<return value="1" message="Registro incluido com sucesso" error="OK"></return>
				<return value="-1" message="" error="FAILALL"/>
				<return value="-2" message="" error="RECORDFOUND"/>
				<return value="-99999" message="" error="BROKENCONNECTION"/>
			</returns>
		</insertcommand>



		<methods>
			<item script="true" alias="" sql="" method="Delete" return="int" returnmode="0" procname="PTCTT010DEL" desc ="Remove uma empresa cadastrada" returnvalue="0">
				<query merge="true">
					<![CDATA[
DECLARE @RETURN_VALUE INT =0;
					DELETE FROM CTT010 WHERE CODEMP=@CODEMP
					SET @RETURN_VALUE = @@ROWCOUNT;
					RETURN @RETURN_VALUE;					
					]]>
				</query>
				<parameters>
					<parameter input="true" apply="true"  omit="true" desc ="Código da Empresa" name="CODEMP" type="System.Byte" default="" output="" null="false"/>
					<parameter input="false" apply="true" omit="true" desc ="Retorno" name="RETURN_VALUE" type="System.Int32" default="" output="" null="false" inputmode="4"/>

				</parameters>
			</item>
		</methods>


	</item>

	<item create="true"  id="303" name="CT1010" api="true" apiname="" friendlyname="Accounting" modelversion="3" descriptor="PROTHEUS - financial accounts" remarks="CT1010/CT1030">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
		<insertcommand key="Key" fieldreturn="" exceptionparamns="" procname="PTCT1010INS" >
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
 IF(EXISTS (SELECT 1 FROM CT1010 (NOLOCK) WHERE CODEMP = @CODEMP AND R_E_C_N_O_=@R_E_C_N_O_ ))
	    SET @RETURN_VALUE = -2
     
      ]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[
        ]]>
			</pos>
			<returns>
				<return value="1" message="Registro incluido com sucesso" error="OK"></return>
				<return value="-1" message="" error="FAILALL"/>
				<return value="-2" message="" error="RECORDFOUND"/>
				<return value="-99999" message="" error="BROKENCONNECTION"/>
			</returns>
		</insertcommand>



		<methods>
			<item script="true" alias="" sql="" method="Delete" return="int" returnmode="0" procname="PTCT1010DEL" desc ="Remove uma empresa cadastrada" returnvalue="0">
				<query merge="true">
					<![CDATA[
DECLARE @RETURN_VALUE INT =0;
					DELETE FROM CT1010 WHERE CODEMP=@CODEMP
					SET @RETURN_VALUE = @@ROWCOUNT;
					RETURN @RETURN_VALUE;					
					]]>
				</query>
				<parameters>
					<parameter input="true" apply="true"  omit="true" desc ="Código da Empresa" name="CODEMP" type="System.Byte" default="" output="" null="false"/>
					<parameter input="false" apply="true" omit="true" desc ="Retorno" name="RETURN_VALUE" type="System.Int32" default="" output="" null="false" inputmode="4"/>

				</parameters>
			</item>
		</methods>


	</item>

	<item create="true"  id="301" name="SYS_COMPANY" api="true" apiname="" friendlyname="Branches" modelversion="3" descriptor="PROTHEUS - Branches" remarks="SYS_COMPANY">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
		<insertcommand key="Key" fieldreturn="" exceptionparamns="" procname="PTSYSCOMINS" >
			<maxfield field=""/>
			<nextnumber field="" id="" />
			<pre>
				<![CDATA[
      
      ]]>
			</pre>
			<body></body>
			<pos>
				<![CDATA[

		
		
        ]]>
			</pos>
			<returns>
				<return value="1" message="Registro incluido com sucesso" error="OK"></return>
				<return value="-1" message="" error="FAILALL"/>
				<return value="-2" message="" error="RECORDFOUND"/>
				<return value="-99999" message="" error="BROKENCONNECTION"/>
			</returns>
		</insertcommand>



		<methods>
			<item script="true" alias="" sql="" method="Delete" return="int" returnmode="0" procname="PTSYSCOMDEL" desc ="Remove os dados da tabela" returnvalue="0">
				<query merge="true">
					<![CDATA[
DECLARE @RETURN_VALUE INT =0;
					DELETE FROM SYS_COMPANY
					SET @RETURN_VALUE = @@ROWCOUNT;
					RETURN @RETURN_VALUE;					
					]]>
				</query>
				<parameters>
					<parameter input="false" apply="true" omit="true" desc ="Retorno" name="RETURN_VALUE" type="System.Int32" default="" output="" null="false" inputmode="4"/>

				</parameters>
			</item>
		</methods>


	</item>


	<item create="true"  id="501" name="TPPCDLAN" api="true" apiname="" friendlyname="ReleasesOut" modelversion="3" descriptor="Equalização de Lançamentos - Saida" remarks="">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
	</item>

	<item create="true"  id="502" name="RPQRYNPS" api="true" apiname="" friendlyname="ReportNPS" modelversion="3" descriptor="Tabela de Informações e Controle do Relatório de NPS" remarks="O relatório consiste basicamente em efetuar a leitura de dados da ultima semana retroativa a segunda feira 
		da semana detectada considerando as restrições e parametrizações do relatório">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
	</item>

	<item create="true"  id="503" type="TABLE" name="RFNPSREP" api="true" apiname="" friendlyname="	NPSReferences" modelversion="3" descriptor="Tabela de Parâmetros de Internação" comments="Tabela que define os códigos de procedimentos associados a cada relatório de extração de informações NPS">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
	</item>

	<item create="true"  id="503" type="TABLE" name="RFREPGER" api="true" apiname="" friendlyname="	ReportsReferences" modelversion="3" descriptor="Tabela de Parâmetros de Montagem de Relatórios" comments="Tabela que define os parâmetros funcionais de montagem de relatórios">
		<CSharpPartial>True</CSharpPartial>
		<SqlTable></SqlTable>
	</item>


	<actions>

		<item access="public" modifier="static" reference="" procbase="" script="true" alias="A." sql="" type="list" method="GetMarketingList" return="ReportMarketing" returnmode="5" procname="MKGETQRYMKT" desc ="Obtêm a lista de clientes baseada em regra estratégica de marketing" remarks="" >
			<query>
				<![CDATA[
SELECT * 
 FROM (
		SELECT CLI.NOMCLI as NOMTUT
			  ,NOMANI 
			  ,ESP.DSCESP
			  ,DSCRAC
			  ,IDAANI = DATEDIFF(YEAR, ANI.DATNAC, GETDATE())
			  ,TELCEL as NUMCEL
			  ,DSCMAL
			  ,APEEMP
			  ,ORL.BASNAM AS DSCBAS
			  ,NUMROW = ROW_NUMBER() OVER(PARTITION BY LAN.CODANI ORDER BY LAN.DATPCD DESC)
		  FROM CVPCDLAN (NOLOCK) LAN
		 INNER JOIN (SELECT DISTINCT CODEMP, APEEMP FROM CVCADEMP (NOLOCK) WHERE ORGBAS=1 AND HASPRO=1) EMP 
			ON (EMP.CODEMP = LAN.CODEMP)
		 INNER JOIN CVBASORI (NOLOCK) ORL
			ON (ORL.ORGBAS = LAN.ORGBAS AND ORL.NIDORI = LAN.CODORI)
		 INNER JOIN CVCADANI (NOLOCK) ANI 
			ON (ANI.ORGBAS = LAN.ORGBAS AND ANI.CODANI = LAN.CODANI)
		 INNER JOIN CVCADCLI (NOLOCK) CLI 
			ON (CLI.ORGBAS = ANI.ORGBAS AND CLI.CODCMF = ANI.CODCMF)
		 INNER JOIN CVCADESP (NOLOCK) ESP 
			ON (ESP.CODESP = ANI.CODESP)

		 WHERE LAN.ORGBAS = 1
		   AND LAN.STAREC = 1
		   AND LAN.DATPCD >= DATEADD(MONTH, -36, GETDATE())
		   AND LAN.CODPCD NOT IN (SELECT CODPCD 
   									FROM CVCADPCD (NOLOCK)
   								   WHERE ORGBAS = 1 AND CODOPE IN (1,2))
		   AND LAN.CODANI NOT IN (SELECT CODANI 
   									FROM CVCADANI (NOLOCK)
   								   WHERE ORGBAS= 1 AND HASFAL = 1 OR (DATEDIFF(YEAR, DATNAC, GETDATE()) <= 5))
		   AND LAN.CODANI NOT IN (SELECT CODANI 
   										FROM CVPCDLAN (NOLOCK) 
									   WHERE CODPCD IN (SELECT CODPCD 
														  FROM CVCADPCD 
														 WHERE ORGBAS= 1 AND STAREC = 1 AND CODOPE IN (14))
										 AND DATPCD > DATEADD(MONTH, -12, GETDATE()) AND DATPCD <= GETDATE())
		   AND ORL.NIDBAS IN (0,11,13) AND ORL.IDXKEY=1
	) QRY WHERE NUMROW=1

]]>
			</query>

		</item>
		<item access="public" modifier="static" reference="" procbase="" script="true" alias="A." sql="" type="list" method="GetObesityList" return="ReportObesity" returnmode="5" procname="MKGETOBSLST" desc ="Obtêm a lista de registro de obesidades" remarks="" >
			<query>
				<![CDATA[
DECLARE @OBESITY TABLE (ORGBAS TINYINT, CODANI INT , CODEMP TINYINT, DATPCD DATETIME, NUMROW INT);

INSERT INTO @OBESITY (ORGBAS, CODANI, CODEMP, DATPCD, NUMROW)
SELECT LAN.ORGBAS, LAN.CODANI
 	        ,CODEMP
 	        ,DATPCD
			,NUMROW = ROW_NUMBER() OVER(PARTITION BY LAN.CODANI ORDER BY LAN.CODANI DESC)
  FROM CVPCDLAN (NOLOCK) LAN 
       INNER JOIN  CVCADANI (NOLOCK) ANI ON (ANI.ORGBAS = LAN.ORGBAS AND ANI.CODANI = LAN.CODANI)
	   WHERE LAN.ORGBAS = 1 
	     AND LAN.STAREC=1
	     AND ANI.DSCRAC IN ('ROTTWEILER','TERRA NOVA','SHIH-TZU','SHIH TZU','PUG','DACHSHUND PELO DURO','DACHSHUND PELO LISO','DACHSHUND PELO LONGO','DACHSHUND','DACHSHUND PELO DUR',
'LABRADOR RETRIEVER','BASSET HOUND', 'BEAGLE','Rough Collie', 'BULDOGUE FRANCÊS','BULDOGUE CAMPEIRO','PASTOR ALEMAO','BOXER','COCKER SPANIEL AMERICANO', 'COCKER SPANIEL INGLES')
         AND ANI.HASCAS = 'S'
         AND DATEDIFF(YEAR, ANI.DATNAC, GETDATE()) BETWEEN 5 AND 12 
         AND ANI.HASFAL=0
         AND LAN.CODEMP IN (SELECT DISTINCT CODEMP FROM CVCADEMP (NOLOCK) WHERE ORGBAS = 1 AND HASPRO = 1)
 ORDER BY LAN.DATPCD DESC
      
SELECT DISTINCT 
	NOMCLI AS NOMTUT,
	NOMANI,
    DSCRAC,
	COALESCE(TELCEL,'') as NUMCEL,
	DSCMAL,
	APEEMP AS DSCEMP,
	IDAANI = DATEDIFF (YEAR, ANI.DATNAC, GETDATE())
	  ,ORL.BASNAM AS DSCBAS
  FROM CVCADCLI (NOLOCK) CLI
 INNER JOIN CVCADANI (NOLOCK) ANI ON (ANI.ORGBAS = CLI.ORGBAS AND ANI.CODCMF = CLI.CODCMF)
  LEFT JOIN  CVBASORI (NOLOCK) ORL ON (ORL.ORGBAS = CLI.ORGBAS AND ORL.NIDORI = CLI.CODORI AND ORL.IDXKEY = 1)
  LEFT JOIN  @OBESITY B0 ON (B0.ORGBAS = B0.ORGBAS AND B0.CODANI = ANI.CODANI AND B0.NUMROW = 1)
INNER JOIN  CVCADEMP (NOLOCK) EMP ON (EMP.CODEMP = B0.CODEMP AND EMP.ORGBAS = CLI.ORGBAS)
WHERE  CLI.ORGBAS = 1
  AND ANI.ORGBAS=1
  AND CLI.ENVNEW='S'
AND CLI.DSCMAL <>''
AND ORL.NIDBAS IN (0,11,13)
ORDER BY CLI.NOMCLI

]]>
			</query>

		</item>
		<item  access="public" modifier="static" reference="" procbase="" script="true" alias="A." sql="" type="list" method="GetSpeciesList" return="ReportSpecies" returnmode="5" procname="MKGETSPELST" desc ="Obtêm a lista de registro baseada na espécie do animal" remarks="" >
			<query>
				<![CDATA[
				
/*
 * QUERY OTIMIZADA
   USING IX_CVPCDLAN_0005
 */


DECLARE @TB1 TABLE (CODANI INT)
INSERT INTO @TB1 (CODANI)
SELECT DISTINCT CODANI 
  FROM CVPCDLAN (NOLOCK)
 WHERE ORGBAS = @ORGBAS
  AND STAREC = 1
  AND CODEMP IN (SELECT CODEMP FROM CVCADEMP WHERE ORGBAS = @ORGBAS AND HASPRO=1)
  AND CODPCD IN (SELECT CODPCD 
	     		   FROM CVCADPCD (NOLOCK)
				  WHERE ORGBAS = @ORGBAS AND CODOPE= 15)
  AND DATPCD >= DATEADD(MONTH, -18, GETDATE())

 SELECT  
		    ANI.CODCMF
		   ,TIPPES = CASE WHEN TYPCMF = 1   THEN 'PF'
						  WHEN TYPCMF = 2   THEN 'PJ'
						  WHEN TYPCMF = 3   THEN 'EX'
				          ELSE 'ND' END
		
		   ,NOMCLI as NOMTUT,
		   ULT.CODANI 							  	    AS CODANI,
		   ANI.NOMANI											 , 
		   ESP.DSCESP,
		   ANI.DSCRAC,
		   DATEDIFF(MONTH, ANI.DATNAC, GETDATE())      	AS IDAANI,
		   TELCEL									as NUMCEL,
		   DSCMAL,
		   APEEMP 									AS APEEMP,
		   ORL.BASNAM,
		   ENVNEW,
		   ULT.ULTATD
	  FROM CVPCDLAN (NOLOCK) LAN
	 INNER JOIN (SELECT CODANI 
		               ,MAX(NIDPCD) AS NIDPCD
		               ,MAX(DATPCD) AS ULTATD 
	               FROM CVPCDLAN (NOLOCK)
	              WHERE ORGBAS = @ORGBAS
				    AND STAREC = 1
	                AND CODEMP IN (SELECT CODEMP FROM CVCADEMP (NOLOCK) WHERE ORGBAS = @ORGBAS AND HASPRO=1)

	              GROUP BY CODANI) ULT
		ON (ULT.CODANI = LAN.CODANI AND ULT.NIDPCD = LAN.NIDPCD)
	 INNER JOIN CVCADEMP (NOLOCK) EMP 
		ON (EMP.ORGBAS = LAN.ORGBAS AND EMP.CODEMP =LAN.CODEMP AND EMP.HASPRO=1)
	 INNER JOIN CVCADANI (NOLOCK) ANI
		ON (ANI.ORGBAS = LAN.ORGBAS AND ANI.CODANI = LAN.CODANI)
	 INNER JOIN CVCADCLI (NOLOCK) CLI
		ON (CLI.ORGBAS = ANI.ORGBAS AND CLI.CODCMF = ANI.CODCMF)
	  LEFT JOIN CVBASORI (NOLOCK) ORL
	    ON (ORL.ORGBAS = LAN.ORGBAS AND ORL.NIDORI = LAN.CODORI AND ORL.IDXKEY=1)
	  LEFT JOIN CVCADESP (NOLOCK) ESP
	    ON (ESP.CODESP = ANI.CODESP)
	 WHERE LAN.ORGBAS = @ORGBAS
	   AND LAN.STAREC = 1
       AND LAN.CODANI NOT IN (SELECT CODANI FROM @TB1)
	   AND LAN.DATPCD >= DATEADD(MONTH, -18, GETDATE())
	   AND ANI.HASFAL = 0
	   AND ESP.DSCESP = @DSCESP
	
			]]>
			</query>
			<parameters>
				<parameter input="true" apply="false" desc ="Origem do Registro" name="ORGBAS" type="System.Byte" default="" output="" null="false"/>
				<parameter input="true" apply="false" desc ="Descrição da Espécie" name="DSCESP" type="System.String" size="40" default="CANINA" output="" null="false"/>
			</parameters>

		</item>

		<item access="public" modifier="static" reference="" procbase="" script="true" alias="A." sql="" type="list" method="GetEZVETList" return="ReportCampaignEZVET" returnmode="5" procname="MKGETEZVLST" desc ="Obtêm a lista de registro baseada em campanha EZVET" remarks="" >
			<query>
				<![CDATA[
				
/*
 * QUERY OTIMIZADA
   USING IX_CVPCDLAN_0005
 */
DECLARE @TPCAMEZV TABLE (FLGREC TINYINT, CODCMF VARCHAR(15), DEAANI INT, LIVANI INT, NUMLIV TINYINT, NUMDEA TINYINT, DATNAC DATE NULL)

INSERT INTO @TPCAMEZV (FLGREC, CODCMF, DEAANI, LIVANI, NUMLIV, NUMDEA)
SELECT                      1, CODCMF, CODANI,      0,      0,      1
  FROM CVCADANI (NOLOCK) ANI
 WHERE ORGBAS = @ORGBAS AND STAREC = 1 AND HASFAL = 1 OR DATOBT IS NOT NULL 
   AND LEN(CODCMF)=11;

INSERT INTO @TPCAMEZV (FLGREC, CODCMF, DEAANI, LIVANI, NUMLIV, NUMDEA, DATNAC)
SELECT                      2, CODCMF,      0, CODANI,      1,      0, DATNAC
  FROM CVCADANI (NOLOCK) ANI
 WHERE ORGBAS = @ORGBAS AND STAREC = 1 AND HASFAL = 0 OR DATOBT < GETDATE()

INSERT INTO @TPCAMEZV (FLGREC, CODCMF,      DEAANI, LIVANI, NUMLIV, NUMDEA)
SELECT                      9, CODCMF, MAX(DEAANI),      0,      0,      1
  FROM @TPCAMEZV
 WHERE FLGREC = 1
 GROUP BY CODCMF

INSERT INTO @TPCAMEZV (FLGREC, CODCMF, DEAANI, LIVANI, NUMLIV, NUMDEA, DATNAC)
SELECT                      9, CODCMF,      0, LIVANI,      1,      0, DATNAC
  FROM (SELECT NUMROW = ROW_NUMBER() OVER(PARTITION BY CODCMF ORDER BY CODCMF, DATNAC DESC) 
              ,CODCMF
		      ,LIVANI
			  ,DATNAC
	        FROM @TPCAMEZV
		   WHERE FLGREC=2) QRY 
		   WHERE QRY.NUMROW=1;
    

DELETE FROM @TPCAMEZV WHERE FLGREC <> 9;


    
INSERT INTO @TPCAMEZV (FLGREC, CODCMF, DEAANI, LIVANI, NUMLIV, NUMDEA, DATNAC) 
SELECT                      0, CODCMF, MAX(DEAANI) AS DEAANI, MAX(LIVANI) AS LIVANI, MAX(NUMLIV) AS NUMLIV, MAX(NUMDEA) AS NUMDEA, MAX(DATNAC) AS DATNAC
  FROM @TPCAMEZV 
 WHERE FLGREC=9  
 GROUP BY CODCMF
HAVING MAX(DEAANI)>0 AND MAX(LIVANI) >0 AND MAX(NUMLIV)>0 AND MAX(NUMDEA)>0  ;
          
DELETE FROM @TPCAMEZV WHERE FLGREC <> 0;

DELETE FROM @TPCAMEZV WHERE deaani = livani;

SELECT A.CODCMF
      ,DEAANI
      ,ANI1.NOMANI AS ANIDEA
      ,LIVANI
      ,ANI2.NOMANI AS ANILIV
      ,NUMLIV
      ,NUMDEA
	  ,IDAANI = DATEDIFF(YEAR, A.DATNAC, GETDATE())
      ,QRY.BASNAM
      ,CLI.NOMCLI AS NOMTUT
	  ,CLI.DSCMAL
	  ,TELCEL AS NUMCEL
  FROM @TPCAMEZV A
 INNER JOIN CVCADCLI (NOLOCK) CLI 
    ON (CLI.ORGBAS = @ORGBAS AND CLI.CODCMF = A.CODCMF)
 INNER JOIN (SELECT CODANI, MAX(BASNAM) AS BASNAM
               FROM CVPCDLAN (NOLOCK) LAN
			  INNER JOIN CVBASORI (NOLOCK) ORL
			     ON (ORL.ORGBAS = LAN.ORGBAS AND ORL.NIDORI = LAN.CODORI AND ORL.IDXKEY = 1)
              WHERE LAN.ORGBAS = @ORGBAS
			    AND LAN.STAREC = 1
				AND LAN.CODANI IN (SELECT LIVANI FROM @TPCAMEZV WHERE FLGREC=0 )
			  GROUP BY LAN.CODANI) QRY
    ON (QRY.CODANI = A.LIVANI) 
 INNER JOIN CVCADANI (NOLOCK) ANI1 
    ON (ANI1.ORGBAS = @ORGBAS AND ANI1.CODANI = A.DEAANI)
 INNER JOIN CVCADANI (NOLOCK) ANI2 
    ON (ANI2.ORGBAS = @ORGBAS AND ANI2.CODANI = A.LIVANI)
 WHERE (CLI.ENVNEW = 'S')
   AND FLGREC=0
   AND BASNAM = 'PETCARE';

	
			]]>
			</query>
			<parameters>
				<parameter input="true" apply="false" omit="true" desc ="Origem do Registro" name="ORGBAS" type="System.Byte" default="" output="" null="false"/>
			</parameters>

		</item>

		<item access="public" modifier="static" reference="" procbase="" script="true" alias="A." sql="" type="list" method="GetNpsList" return="NPS" returnmode="5" procname="MKGETREPNPS" desc ="Obtêm a lista de registro baseada em Regras de NPS" remarks="" >
			<query>
				<![CDATA[
	DECLARE @DATINI DATETIME = DATEADD(day, -7, GETDATE())                       -- Data de inicio de Leitura
	DECLARE @DATFIN DATETIME = GETDATE()										 -- Data de Fim da Leitura
	DECLARE @NDSANO INT =0;														 -- Número da Semana
	DECLARE @WK INT = DATEPART(WEEKDAY, GETDATE())								 -- Número do dia da semana
	DECLARE @DATBAS DATETIME													 -- Data Temporária

	/*
		@CODREP
		      0 - Todas as unidades, exceto hemovet
			  1 - Somente hemovet

		O relatório consiste basicamente em efetuar a leitura de dados da ultima semana retroativa a segunda feira 
		da semana detectada considerando as restrições e parametrizações do relatório


		RFREPGER
		
		Requer ORGBAS
		  Sim			 1 - Lista as empresas associadas ao relatório
		  Não			 2 - Lista os procedimentos associados a montagem do relatório
		  Não			 3 - Lista os procedimentos associados a montagem do relatório (Óbitos)

	*/

	IF @WK >= 2
		/*
		 * O Relatório é emitido de maneira retroativa, considerando a última segunda feira, como ponto de retroatividade
		 */
		BEGIN
			SET @DATBAS = DATEADD(DAY, (@WK - 2)*-1,GETDATE());
			SET @DATINI = DATEADD(DAY, -7, @DATBAS)
			SET @DATFIN = DATEADD(DAY, -1, @DATBAS)
	    END
    
    SET @DATINI = CONVERT( VARCHAR , CAST(@DATINI AS date),112) + ' 00:00:00';
    SET @DATFIN = CONVERT( VARCHAR , CAST(@DATFIN AS date),112) + ' 23:59:59';
	SET @NDSANO = DATEPART(WEEK, DATEADD(day,-1,@DATFIN))


	DECLARE @TP TABLE (
						  NDSANO tinyint default 0,
						  CODANI int DEFAULT 0,
						  NOMTUT varchar(70) DEFAULT '',
						  DSCMAL varchar(70) DEFAULT '',
						  TELRES varchar(25) DEFAULT '',
						  TELCEL varchar(25) DEFAULT '',
						  APEEMP varchar(25) DEFAULT '',
						  DATPCD datetime DEFAULT NULL,
						  BASNAM varchar(25) DEFAULT '',
						  CODEMP tinyint default 0,
						  ANIPBI int DEFAULT 0
					) ;

	INSERT INTO @TP (ANIPBI, NDSANO, CODANI,NOMTUT,DSCMAL, TELRES, TELCEL, CODEMP, DATPCD,BASNAM)

	SELECT RIGHT('00' + CONVERT(VARCHAR, @ORGBAS),2) +  RIGHT('00' + CONVERT(VARCHAR, CASE WHEN @ORGBAS =2 THEN 28 ELSE LAN.CODEMP END ),2) +  RIGHT('0000000' + CONVERT(VARCHAR,LAN.CODANI),7) AS ANIPBI
		  ,NDSANO= @NDSANO
		  ,LAN.CODANI
		  ,CLI.NOMCLI
		  ,CLI.DSCMAL
		  ,TELRES
		  ,TELCEL
          ,LAN.CODEMP
		  ,MAX(LAN.DATPCD) AS DATPCD
		  ,BASNAM = CASE WHEN MAX(ORL.NIDBAS) IN (0,11,23) THEN 'PETCARE' ELSE 'VETWECARE' END
      FROM CVPCDLAN (NOLOCK) LAN 
	 INNER JOIN CVBASORI (NOLOCK) ORL ON (ORL.ORGBAS = LAN.ORGBAS AND ORL.NIDORI = LAN.CODORI)
	 INNER JOIN CVCADANI (NOLOCK) ANI ON (ANI.ORGBAS = LAN.ORGBAS AND ANI.CODANI = LAN.CODANI)
	 INNER JOIN CVCADCLI (NOLOCK) CLI ON (CLI.ORGBAS = ANI.ORGBAS AND CLI.CODCMF = ANI.CODCMF)
	 INNER JOIN (SELECT ROW_NUMBER() OVER(PARTITION BY CODANI ORDER BY DATPCD DESC) AS NUMROW
					   ,NIDPCD
					   ,CODANI
					   ,DATPCD
				   FROM CVPCDLAN (NOLOCK) 
				  WHERE ORGBAS = @ORGBAS
				    AND STAREC = 1
					AND DATPCD >= @DATINI AND DATPCD < @DATFIN
					AND CODEMP IN (SELECT CODREF FROM RFREPGER (NOLOCK) WHERE ORGBAS=@ORGBAS AND CODREP= @CODREP AND CODCND=1)
					AND CODPCD in (SELECT CODREF FROM RFREPGER (NOLOCK) WHERE ORGBAS=@ORGBAS AND CODCND=2)
			
					
					) AS SEC 
        ON (SEC.NIDPCD = LAN.NIDPCD AND SEC.NUMROW = 1)
	 WHERE LAN.ORGBAS = @ORGBAS
	   AND LAN.STAREC = 1
	   AND LAN.DATPCD >= @DATINI AND LAN.DATPCD < @DATFIN
	   /* unidaded associadas ao relatório */
	   AND LAN.CODEMP IN (SELECT CODREF FROM RFREPGER (NOLOCK) WHERE ORGBAS=@ORGBAS AND CODREP= @CODREP AND CODCND=1)
	   /* Excluir os pacientes "mortos". */
	   AND ANI.HASFAL= 0
       /* Excluir os clientes que no SGV tenham o "Não Receber News" */
       AND CLI.ENVNEW = 'S'
       /* Excluir Clientes “pessoa jurídica” */
       AND LEN(CLI.CODCMF)<=11
       /* Excluir clientes que estejam internado s*/
       AND (LAN.CODINT = 0  or LAN.CODINT not in (select NIDINT from CVCADINT (NOLOCK) WHERE DATALT IS  NULL))
       /* Clientes que registraram procedimentos sensíveis: Eutanasia */
       and LAN.CODANI not in (SELECT CODANI FROM CVPCDLAN WHERE ORGBAS=@ORGBAS AND  CODPCD IN (SELECT CODREF FROM RFREPGER (NOLOCK) WHERE ORGBAS=@ORGBAS AND CODCND=3))
            /* Excluir os pacientes com PAs abertas */
            /* 07/07/2023 
				Levar em consideração a data do fechamento da PA para montar a relação de clientes que vão receber a pesquisa, ou seja, a lista da próxima semana irá refletir os clientes que tiveram PA fechada na ultima semana e que seguirem o restante de regras existentes na extração. 
            */
       and LAN.NUMOSS not in (SELECT NUMOSS 
			                    FROM CVSTAOSS (NOLOCK) 
							   WHERE ORGBAS = @ORGBAS AND STAOSS in ('S') and DATFEC >= @DATINI and DATFEC <= @DATFIN )
	GROUP BY LAN.CODANI, CLI.NOMCLI , CLI.DSCMAL , CLI.TELRES , CLI.TELCEL , LAN.CODEMP;



	
	/* remove se existir, a ocorrencia da semana de processamento */
    DELETE FROM RPQRYNPS WHERE (NDSANO = @NDSANO) AND CODREP = @CODREP;
	/* insere no registro mestre, a chave desde que não exista a ocorrencia dentro do intervalo de 6 meses */				
    INSERT INTO RPQRYNPS (ANIPBI, NDSANO, DATEMI, STAREC,CODREP)
    SELECT EMI.ANIPBI
          , EMI.NDSANO
          , @DATFIN
		  ,1
          ,@CODREP
      FROM @TP EMI
	 WHERE ANIPBI 
       NOT IN (SELECT ANIPBI 
                 FROM RPQRYNPS 
				WHERE DATEMI >= DATEADD (MONTH, -6, @DATINI) AND DATEMI < @DATFIN 
				  AND CODREP = @CODREP
                  AND STAREC=1);

    /* Extrai somente o que é novo (emitido e não incluso no intervalo de 6 meses) */
    SELECT EMI.NDSANO,
		   CODANI,
           NOMTUT,
		   DSCMAL,
		   TELRES,
		   TELCEL,
           DATPCD,
           BASNAM,
           EMP.CODEMP,
           EMI.ANIPBI,
           EMP.APEEMP
		
      FROM @TP EMI
	 INNER JOIN CVCADEMP (NOLOCK) EMP ON (EMP.CODEMP = EMI.CODEMP)
     INNER JOIN RPQRYNPS (NOLOCK) REP ON (REP.NDSANO = @NDSANO AND REP.ANIPBI = EMI.ANIPBI)
	 WHERE REP.CODREP =@CODREP AND REP.STAREC=1;	
			]]>
			</query>
			<parameters>
				<parameter input="true" apply="false" omit="true" desc ="Origem do Registro" name="ORGBAS" type="System.Byte" default="" output="" null="false"/>
				<parameter input="true" apply="false" omit="true" desc ="Código do Relatório" name="CODREP" type="System.Byte" default="" output="" null="false"/>

			</parameters>

		</item>

	</actions>
</root>
